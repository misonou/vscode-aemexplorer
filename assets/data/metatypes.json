[
    {
        "id": "Adaptive Form and Interactive Communication Web Channel Configuration",
        "name": "Adaptive Form and Interactive Communication Web Channel Configuration",
        "description": "",
        "bundleName": "com.adobe.aemds.guide.aemds-guide-core-impl",
        "attributes": {
            "showPlaceholder": {
                "name": "showPlaceholder",
                "description": "",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "maximumCacheEntries": {
                "name": "maximumCacheEntries",
                "description": "",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "af.scripting.compatversion": {
                "name": "af.scripting.compatversion",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "None",
                "options": [
                    {
                        "label": "AEM Forms 6.1",
                        "value": "AEM6.1"
                    },
                    {
                        "label": "None",
                        "value": "None"
                    }
                ]
            },
            "makeFileNameUnique": {
                "name": "makeFileNameUnique",
                "description": "",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "generatingCompliantData": {
                "name": "generatingCompliantData",
                "description": "",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "Adaptive Form and Interactive Communication Web Channel Theme Configuration",
        "name": "Adaptive Form and Interactive Communication Web Channel Theme Configuration",
        "description": "",
        "bundleName": "com.adobe.aemds.guide.aemds-guide-core-impl",
        "attributes": {
            "fontList": {
                "name": "fontList",
                "description": "",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "Georgia",
                    "Book Antiqua",
                    "Times New Roman",
                    "Arial",
                    "Arial Black",
                    "Impact",
                    "Palatino Linotype",
                    "Browser Default=initial",
                    "Inherit From Parent=inherit"
                ]
            }
        }
    },
    {
        "id": "Analytics Component Query Cache Service",
        "name": "Analytics Component Query Cache Service",
        "description": "Caches the 'cq:trackvars' and 'cq:trackevents' query valued results to improve performance",
        "bundleName": "com.adobe.cq.cq-analytics-integration",
        "attributes": {
            "cq.analytics.component.query.cache.size": {
                "name": "Analytics component SQL2 query cache size",
                "description": "Number of query results for the Analytics component the cache holds",
                "type": "Long",
                "cardinality": "required",
                "default": 2000
            }
        }
    },
    {
        "id": "Apache Sling Health Check Result HTML Serializer",
        "name": "Component Apache Sling Health Check Result HTML Serializer",
        "description": "Serializer for health check results in HTML format",
        "bundleName": "org.apache.sling.hc.core",
        "attributes": {
            "styleString": {
                "name": "CSS Style",
                "description": "CSS Style - can be configured to change the look and feel of the html result page.",
                "type": "String",
                "cardinality": "required",
                "default": "body { font-size:12px; font-family:arial,verdana,sans-serif;background-color:#FFFDF1; }h1 { font-size:20px;}table { font-size:12px; border:#ccc 1px solid; border-radius:3px; }table th { padding:5px; text-align: left; background: #ededed; }table td { padding:5px; border-top: 1px solid #ffffff; border-bottom:1px solid #e0e0e0; border-left: 1px solid #e0e0e0; }.statusOK { background-color:#CCFFCC;}.statusWARN { background-color:#FFE569;}.statusCRITICAL { background-color:#F0975A;}.statusHEALTH_CHECK_ERROR { background-color:#F16D4E;}.helpText { color:grey; font-size:80%; }"
            }
        }
    },
    {
        "id": "com.adobe.aem.formsndocuments.config.AEMFormsManagerConfiguration",
        "name": "FormsManager Configuration",
        "description": "Configuration for Forms Manager",
        "bundleName": "com.adobe.aemds.formsmanager.adobe-aemds-formsanddocuments-core",
        "attributes": {
            "formsManagerConfig.includeOOTBTemplates": {
                "name": "Include Out of the box AF And AD Templates",
                "description": "Select this option to include Out of the box Adaptive Form and Adaptive Document Templates. Defaults to true",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "formsManagerConfig.includeDeprecatedTemplates": {
                "name": "Include AEM 6.0 AF Templates",
                "description": "Select this option to include Adaptive Form Templates that were present in AEM 6.0 and are now deprecated in AEM ver 6.2. Defaults to false",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.aem.graphql.impl.service.PersistedQueryServiceImpl",
        "name": "Persisted Query Service Configuration",
        "description": "",
        "bundleName": "com.adobe.aem.graphql.impl",
        "attributes": {
            "cacheControlMaxAge": {
                "name": "Cache-Control: max-age",
                "description": "This value is added into HTTP response header while executing Persisted Query",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "surrogateControlMaxAge": {
                "name": "Surrogate-Control: max-age",
                "description": "This value is added into HTTP response header while executing Persisted Query",
                "type": "Integer",
                "cardinality": "required",
                "default": 7200
            },
            "surrogateControlStaleWhileRevalidate": {
                "name": "Surrogate-Control: stale-while-revalidate",
                "description": "This value is added into HTTP response header while executing Persisted Query",
                "type": "Integer",
                "cardinality": "required",
                "default": 86400
            },
            "surrogateControlStaleIfError": {
                "name": "Surrogate-Control: stale-if-error",
                "description": "This value is added into HTTP response header while executing Persisted Query",
                "type": "Integer",
                "cardinality": "required",
                "default": 86400
            }
        }
    },
    {
        "id": "com.adobe.aem.graphql.sites.adapters.SlingSchemaServlet",
        "name": "AEM Sites GraphQL Schema Servlet",
        "description": "Servlet that provides GraphQL schemas for AEM Sites",
        "bundleName": "com.adobe.aem.graphql.sling-adapter",
        "attributes": {
            "sling.servlet.selectors": {
                "name": "Selectors",
                "description": "Standard Sling servlet property",
                "type": "String",
                "cardinality": "unlimited"
            },
            "sling.servlet.resourceTypes": {
                "name": "Resource Types",
                "description": "Standard Sling servlet property",
                "type": "String",
                "cardinality": "unlimited"
            },
            "sling.servlet.methods": {
                "name": "Methods",
                "description": "Standard Sling servlet property",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "GET"
                ]
            },
            "sling.servlet.extensions": {
                "name": "Extensions",
                "description": "Standard Sling servlet property",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "GQLschema",
                    "schemaerrors"
                ]
            }
        }
    },
    {
        "id": "com.adobe.aem.transaction.core.impl.TransactionRecorder",
        "name": "Forms Transaction Reporting",
        "description": "",
        "bundleName": "com.adobe.aem.transaction-core",
        "attributes": {
            "isTransactionRecordingEnabled": {
                "name": "Record Transactions",
                "description": "When checked, the AEM Forms transaction reporting is enabled. Before enabling the option on a publish server, ensure that a reverse-replication agent is configured for the publish server. The reverse replication agent is configured on the related author or processing server.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.aem.upgrade.prechecks.hc.impl.DeprecateIndexesHC",
        "name": "Modified Deprecated Indexes Health Check",
        "description": "This health check can be used to check that the indexes which will be deprecated after upgrading to latest version were not modified by customers.",
        "bundleName": "com.day.cq.pre-upgrade-tasks",
        "attributes": {
            "hc.name": {
                "name": "Name",
                "description": "Name of the health check.",
                "type": "String",
                "cardinality": "required",
                "default": "Modified Deprecated Indexes"
            },
            "hc.tags": {
                "name": "Tags",
                "description": "Tags for the health check.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "pre-upgrade"
                ]
            },
            "hc.mbean.name": {
                "name": "MBean Name",
                "description": "Name of the JMX mbean to register for this check.",
                "type": "String",
                "cardinality": "required",
                "default": "modifiedDeprecatedIndexes"
            }
        }
    },
    {
        "id": "com.adobe.aem.upgrade.prechecks.hc.impl.ReplicationAgentsDisabledHC",
        "name": "Replication Agents Disabled Health Check",
        "description": "This health check can be used to check that all the replications agents were disabled before running an upgrade.",
        "bundleName": "com.day.cq.pre-upgrade-tasks",
        "attributes": {
            "hc.name": {
                "name": "Name",
                "description": "Name of the health check.",
                "type": "String",
                "cardinality": "required",
                "default": "Replication Agents Disabled"
            },
            "hc.tags": {
                "name": "Tags",
                "description": "Tags for the health check.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "pre-upgrade"
                ]
            },
            "hc.mbean.name": {
                "name": "MBean Name",
                "description": "Name of the JMX mbean to register for this check.",
                "type": "String",
                "cardinality": "required",
                "default": "replicationAgentsDisabled"
            }
        }
    },
    {
        "id": "com.adobe.aem.upgrade.prechecks.mbean.impl.PreUpgradeTasksMBeanImpl",
        "name": "Component com.adobe.aem.upgrade.prechecks.mbean.impl.PreUpgradeTasksMBeanImpl",
        "description": "Description for com.adobe.aem.upgrade.prechecks.mbean.impl.PreUpgradeTasksMBeanImpl",
        "bundleName": "com.day.cq.pre-upgrade-tasks",
        "attributes": {
            "pre-upgrade.maintenance.tasks": {
                "name": "Pre-upgrade maintenance tasks",
                "description": "List of maintenance tasks names to execute before upgrading an AEM instance",
                "type": "String",
                "cardinality": "unlimited"
            },
            "pre-upgrade.hc.tags": {
                "name": "Pre-upgrade health checks tag names",
                "description": "List of health check tag names run before upgrading an AEM instance",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "system",
                    "pre-upgrade"
                ]
            }
        }
    },
    {
        "id": "com.adobe.aem.upgrade.prechecks.tasks.impl.ConsistencyCheckTaskImpl",
        "name": "Component com.adobe.aem.upgrade.prechecks.tasks.impl.ConsistencyCheckTaskImpl",
        "description": "Description for com.adobe.aem.upgrade.prechecks.tasks.impl.ConsistencyCheckTaskImpl",
        "bundleName": "com.day.cq.pre-upgrade-tasks",
        "attributes": {
            "root.path": {
                "name": "Root Path",
                "description": "Description for root.path",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "fix.inconsistencies": {
                "name": "Fix Inconsistencies",
                "description": "Description for fix.inconsistencies",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.account.api.AccountManagementService",
        "name": "Component com.adobe.cq.account.api.AccountManagementService",
        "description": "Account Manager for non-logged-in users",
        "bundleName": "com.adobe.cq.cq-account",
        "attributes": {
            "cq.accountmanager.token.validity.period": {
                "name": "Validity period of the manager token",
                "description": "Max validity period of the manager token (in seconds)",
                "type": "Long",
                "cardinality": "required",
                "default": 600
            },
            "cq.accountmanager.config.requestnewaccount.mail": {
                "name": "Node name",
                "description": "Config node below /etc/security/accountmgr/jcr:content defining the mail template used when requesting a new account",
                "type": "String",
                "cardinality": "required",
                "default": "requestnewaccount"
            },
            "cq.accountmanager.config.requestnewpwd.mail": {
                "name": "Node name",
                "description": "Name of the node below /etc/security/accountmgr/jcr:content defining the mail template used when requesting a password change",
                "type": "String",
                "cardinality": "required",
                "default": "requestnewpwd"
            }
        }
    },
    {
        "id": "com.adobe.cq.account.impl.AccountManagementServlet",
        "name": "Component com.adobe.cq.account.impl.AccountManagementServlet",
        "description": "Manages confirmation requests when managing accounts",
        "bundleName": "com.adobe.cq.cq-account",
        "attributes": {
            "cq.accountmanager.config.informnewaccount.mail": {
                "name": "Node name",
                "description": "Config node below /etc/security/accountmgr/jcr:content defining the mail template used to inform the user about the new account",
                "type": "String",
                "cardinality": "required",
                "default": "informnewaccount"
            },
            "cq.accountmanager.config.informnewpwd.mail": {
                "name": "Node name",
                "description": "Config node below /etc/security/accountmgr/jcr:content defining the mail template used to inform the user about the new password",
                "type": "String",
                "cardinality": "required",
                "default": "informnewpwd"
            }
        }
    },
    {
        "id": "com.adobe.cq.address.impl.location.LocationListServlet",
        "name": "Adobe CQ Location List Servlet",
        "description": "Enumerates all locations in a location group",
        "bundleName": "com.adobe.cq.cq-address",
        "attributes": {
            "cq.address.location.default.maxResults": {
                "name": "Max Results",
                "description": "Default maximum number of results the location list servlet should return.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            }
        }
    },
    {
        "id": "com.adobe.cq.adobeims.imsprofile.impl.ImsProfileServiceImpl",
        "name": "Adobe IMS Profile HTTP Client",
        "description": "HTTP Client used to communicate with the IMS Profile API",
        "bundleName": "com.adobe.cq.adobeims.core",
        "attributes": {
            "connectionTimeout": {
                "name": "Connection timeout",
                "description": "Timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout. Default is 60000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            },
            "socketTimeout": {
                "name": "Socket timeout",
                "description": "Timeout in milliseconds for waiting for data or a maximum period of inactivity between two consecutive data packets. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            }
        }
    },
    {
        "id": "com.adobe.cq.audit.purge.Dam",
        "name": "DAM audit Log Purge rule",
        "description": "Add configurations for different DAM events purges to execute on a schedule",
        "bundleName": "com.day.cq.cq-audit",
        "attributes": {
            "auditlog.rule.name": {
                "name": "Rule Name",
                "description": "The name of the Audit Policy Rule",
                "type": "String",
                "cardinality": "required"
            },
            "auditlog.rule.contentpath": {
                "name": "Content path",
                "description": "The path of the content the rule will apply to",
                "type": "String",
                "cardinality": "required"
            },
            "auditlog.rule.minimumage": {
                "name": "Minimum age",
                "description": "How long the audit logs needs to be kept (in days)",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "auditlog.rule.types": {
                "name": "Audit log DAM event types",
                "description": "The audit log DAM event types",
                "type": "String",
                "cardinality": "unlimited",
                "options": [
                    {
                        "label": "License accepted",
                        "value": "ACCEPTED"
                    },
                    {
                        "label": "Asset created",
                        "value": "ASSET_CREATED"
                    },
                    {
                        "label": "Asset moved",
                        "value": "ASSET_MOVED"
                    },
                    {
                        "label": "Asset removed",
                        "value": "ASSET_REMOVED"
                    },
                    {
                        "label": "Asset expired",
                        "value": "ASSET_EXPIRED"
                    },
                    {
                        "label": "Asset expiring",
                        "value": "ASSET_EXPIRING"
                    },
                    {
                        "label": "License rejected",
                        "value": "REJECTED"
                    },
                    {
                        "label": "Asset downloaded",
                        "value": "DOWNLOADED"
                    },
                    {
                        "label": "Asset versioned",
                        "value": "VERSIONED"
                    },
                    {
                        "label": "Asset version restored",
                        "value": "RESTORED"
                    },
                    {
                        "label": "Asset Metadata updated",
                        "value": "METADATA_UPDATED"
                    },
                    {
                        "label": "Asset published to external system",
                        "value": "PUBLISHED_EXTERNAL"
                    },
                    {
                        "label": "Asset's original updated",
                        "value": "ORIGINAL_UPDATED"
                    },
                    {
                        "label": "Asset Rendition updated",
                        "value": "RENDITION_UPDATED"
                    },
                    {
                        "label": "Asset Rendition removed",
                        "value": "RENDITION_REMOVED"
                    },
                    {
                        "label": "Asset Rendition downloaded",
                        "value": "RENDITION_DOWNLOADED"
                    },
                    {
                        "label": "Sub-asset updated",
                        "value": "SUBASSET_UPDATED"
                    },
                    {
                        "label": "Sub-asset removed",
                        "value": "SUBASSET_REMOVED"
                    },
                    {
                        "label": "Asset Viewed",
                        "value": "ASSET_VIEWED"
                    },
                    {
                        "label": "Asset Shared on Cloud Solutions",
                        "value": "ASSET_SHARED"
                    },
                    {
                        "label": "Asset Published",
                        "value": "ASSET_PUBLISHED"
                    },
                    {
                        "label": "Project Viewed",
                        "value": "PROJECT_VIEWED"
                    },
                    {
                        "label": "Collection Viewed",
                        "value": "COLLECTION_VIEWED"
                    },
                    {
                        "label": "Added Comment",
                        "value": "ADDED_COMMENT"
                    }
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.audit.purge.Pages",
        "name": "Pages audit Log Purge rule",
        "description": "Add configurations for different page events purges to execute on a schedule",
        "bundleName": "com.day.cq.cq-audit",
        "attributes": {
            "auditlog.rule.name": {
                "name": "Rule Name",
                "description": "The name of the Audit Policy Rule",
                "type": "String",
                "cardinality": "required"
            },
            "auditlog.rule.contentpath": {
                "name": "Content path",
                "description": "The path of the content the rule will apply to",
                "type": "String",
                "cardinality": "required"
            },
            "auditlog.rule.minimumage": {
                "name": "Minimum age",
                "description": "How long the audit logs needs to be kept (in days)",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "auditlog.rule.types": {
                "name": "Audit log Pages event types",
                "description": "The audit log Pages event types",
                "type": "String",
                "cardinality": "unlimited",
                "options": [
                    {
                        "label": "Page Created",
                        "value": "PageCreated"
                    },
                    {
                        "label": "Page Modified",
                        "value": "PageModified"
                    },
                    {
                        "label": "Page Moved",
                        "value": "PageMoved"
                    },
                    {
                        "label": "Page Deleted",
                        "value": "PageDeleted"
                    },
                    {
                        "label": "Page Version Created",
                        "value": "VersionCreated"
                    },
                    {
                        "label": "Page Restored",
                        "value": "PageRestored"
                    },
                    {
                        "label": "Page Rolled Out",
                        "value": "PageRolled Out"
                    },
                    {
                        "label": "Page Valid",
                        "value": "PageValid"
                    },
                    {
                        "label": "Page Invalid",
                        "value": "PageInvalid"
                    }
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.audit.purge.Replication",
        "name": "Replication audit Log Purge Scheduler",
        "description": "Add configurations for different replication events purges to execute on a schedule",
        "bundleName": "com.day.cq.cq-audit",
        "attributes": {
            "auditlog.rule.name": {
                "name": "Rule Name",
                "description": "The name of the Audit Policy Rule",
                "type": "String",
                "cardinality": "required"
            },
            "auditlog.rule.contentpath": {
                "name": "Content path",
                "description": "The path of the content the rule will apply to",
                "type": "String",
                "cardinality": "required"
            },
            "auditlog.rule.minimumage": {
                "name": "Minimum age",
                "description": "How long the audit logs needs to be kept (in days)",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "auditlog.rule.types": {
                "name": "Audit log Replication event types",
                "description": "The audit log Replication event types",
                "type": "String",
                "cardinality": "unlimited",
                "options": [
                    {
                        "label": "Activate",
                        "value": "Activate"
                    },
                    {
                        "label": "Deactivate",
                        "value": "Deactivate"
                    },
                    {
                        "label": "Delete",
                        "value": "Delete"
                    },
                    {
                        "label": "Test",
                        "value": "Test"
                    },
                    {
                        "label": "Reverse (Deprecated)",
                        "value": "Reverse"
                    },
                    {
                        "label": "Internal Poll",
                        "value": "Internal Poll"
                    }
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.cdn.rewriter.impl.AWSCloudFrontRewriter",
        "name": "AWSCloudFrontRewriter",
        "description": "Rewriter for replacing internal URLs for assets to corresponding AWS cloud front URLs",
        "bundleName": "com.adobe.cq.cdn.cdn-rewriter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this rewriter. A higher ranked rewriter is preferred over a lower ranked one",
                "type": "Integer",
                "cardinality": "required",
                "default": -1000
            },
            "keypair.id": {
                "name": "Keypair ID",
                "description": "Provide AWS Cloudfront keypair ID",
                "type": "String",
                "cardinality": "required"
            },
            "keypair.alias": {
                "name": "Keypair Alias",
                "description": "Provide alias of the AWS Cloudfront keypair in the imported keystore",
                "type": "String",
                "cardinality": "required",
                "default": "awscloudfront"
            },
            "cdnrewriter.attributes": {
                "name": "Tag Attributes",
                "description": "If this property is set, only the tags with these attributes will be rewritten.Applies to image tag only, rewriting of other tags won't be affected.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cdn.rewriter.distribution.domain": {
                "name": "CDN distribution domain name",
                "description": "Domain name of CDN distribution",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.cdn.rewriter.impl.CDNConfigServiceImpl",
        "name": "Component com.adobe.cq.cdn.rewriter.impl.CDNConfigServiceImpl",
        "description": "Description for com.adobe.cq.cdn.rewriter.impl.CDNConfigServiceImpl",
        "bundleName": "com.adobe.cq.cdn.cdn-rewriter",
        "attributes": {
            "cdn.config.distribution.domain": {
                "name": "CDN distribution domain name",
                "description": "Domain name of CDN distribution",
                "type": "String",
                "cardinality": "required"
            },
            "cdn.config.enable.rewriting": {
                "name": "Enable CDN Rewriting",
                "description": "Rewrite the url to a CDN url. If this is disabled, no CDN rewriting will be performed.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cdn.config.path.prefixes": {
                "name": "Path Prefixes",
                "description": "Only the paths which begin with one of these prefixes will be rewritten",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content",
                    "/etc",
                    "/libs"
                ],
                "hint": "path"
            },
            "cdn.config.cdnttl": {
                "name": "CDN TTL",
                "description": "Time (in seconds) after which CDN invalidates its cached object.",
                "type": "Long",
                "cardinality": "required",
                "default": 86400
            },
            "cdn.config.application.protocol": {
                "name": "Application Protocol",
                "description": "Application layer protocol of CDN eg http or https",
                "type": "String",
                "cardinality": "required",
                "default": "http"
            }
        }
    },
    {
        "id": "com.adobe.cq.cdn.rewriter.impl.CDNRewriter",
        "name": "CDNRewriter",
        "description": "Rewriter for asset and clientlib URLS",
        "bundleName": "com.adobe.cq.cdn.cdn-rewriter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this rewriter. A higher ranked rewriter is preferred over a lower ranked one",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "cdnrewriter.attributes": {
                "name": "Tag Attributes",
                "description": "If this property is set, only the tags with these attributes will be rewritten.Applies to image tag only, rewriting of other tags won't be affected.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cdn.rewriter.distribution.domain": {
                "name": "CDN distribution domain name",
                "description": "Domain name of CDN distribution",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.cloudconfig.core.impl.ConfigurationReplicationEventHandler",
        "name": "Cloud Configuration ReplicationEventHandler",
        "description": "Flushes resources on Dispatcher which use Cloud Configs",
        "bundleName": "com.adobe.cq.cloud-config.core",
        "attributes": {
            "flush.agents": {
                "name": "Flush agents",
                "description": "List of flush agents",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "flush"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.commerce.impl.asset.DynamicImageHandler",
        "name": "Adobe CQ Commerce Product Asset Handler for Dynamic Images",
        "description": "Manages product assets of type: dynamic images.",
        "bundleName": "com.adobe.cq.commerce.cq-commerce-core",
        "attributes": {
            "cq.commerce.asset.handler.active": {
                "name": "Active",
                "description": "Make this handler active.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cq.commerce.asset.handler.name": {
                "name": "Handler Name",
                "description": "Name of the handler",
                "type": "String",
                "cardinality": "required",
                "default": "dynamic-image"
            }
        }
    },
    {
        "id": "com.adobe.cq.commerce.impl.asset.ProductAssetHandlerProviderImpl",
        "name": "Adobe CQ Commerce Product Asset Handler Provider",
        "description": "Provides the available product assets handlers.",
        "bundleName": "com.adobe.cq.commerce.cq-commerce-core",
        "attributes": {
            "cq.commerce.asset.handler.fallback": {
                "name": "Fallback Handler",
                "description": "Name of the fallback handler",
                "type": "String",
                "cardinality": "required",
                "default": "static-image"
            }
        }
    },
    {
        "id": "com.adobe.cq.commerce.impl.asset.StaticImageHandler",
        "name": "Adobe CQ Commerce Product Asset Handler for Static Images",
        "description": "Manages product assets of type: static images.",
        "bundleName": "com.adobe.cq.commerce.cq-commerce-core",
        "attributes": {
            "cq.commerce.asset.handler.active": {
                "name": "Active",
                "description": "Make this handler active.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cq.commerce.asset.handler.name": {
                "name": "Handler Name",
                "description": "Name of the handler",
                "type": "String",
                "cardinality": "required",
                "default": "static-image"
            }
        }
    },
    {
        "id": "com.adobe.cq.commerce.impl.asset.VideoHandler",
        "name": "Adobe CQ Commerce Product Asset Handler for Videos",
        "description": "Manages product assets of type: videos.",
        "bundleName": "com.adobe.cq.commerce.cq-commerce-core",
        "attributes": {
            "cq.commerce.asset.handler.active": {
                "name": "Active",
                "description": "Make this handler active.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cq.commerce.asset.handler.name": {
                "name": "Handler Name",
                "description": "Name of the handler",
                "type": "String",
                "cardinality": "required",
                "default": "video"
            }
        }
    },
    {
        "id": "com.adobe.cq.commerce.impl.promotion.PromotionManagerImpl",
        "name": "Adobe CQ Commerce Promotion Manager",
        "description": "Manages caching and lookup of promotions and promotion handlers.",
        "bundleName": "com.adobe.cq.commerce.cq-commerce-core",
        "attributes": {
            "cq.commerce.promotion.root": {
                "name": "Promotions Root",
                "description": "Search root for promotions",
                "type": "String",
                "cardinality": "required",
                "default": "/content/campaigns",
                "hint": "path"
            }
        }
    },
    {
        "id": "com.adobe.cq.commerce.pim.impl.cataloggenerator.CatalogGeneratorImpl",
        "name": "Adobe CQ Commerce Product Catalog Generator",
        "description": "Creates product catalog pages based on a catalog blueprint.",
        "bundleName": "com.adobe.cq.commerce.cq-commerce-pim",
        "attributes": {
            "cq.commerce.cataloggenerator.bucketsize": {
                "name": "Bucket Size",
                "description": "Maximum products per section before bucketing, and maximum in each bucket",
                "type": "Integer",
                "cardinality": "required",
                "default": 500
            },
            "cq.commerce.cataloggenerator.bucketname": {
                "name": "Bucket Name",
                "description": "Name to use when creating bucket pages",
                "type": "String",
                "cardinality": "required",
                "default": "bucket"
            },
            "cq.commerce.cataloggenerator.excludedtemplateproperties": {
                "name": "Excluded Template Properties",
                "description": "Properties on the Template Pages which should NOT be copied to new Catalog Pages",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq:lastReplicated.*",
                    "cq:lastReplicationAction"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.commerce.pim.impl.PageEventListener",
        "name": "Adobe CQ Commerce Page Event Listener",
        "description": "Generates the various PRODUCT_PAGE_* events for hand-edited catalog pages.",
        "bundleName": "com.adobe.cq.commerce.cq-commerce-pim",
        "attributes": {
            "cq.commerce.pageeventlistener.enabled": {
                "name": "Enabled",
                "description": "Enable PRODUCT_PAGE_* event generation",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.commerce.pim.impl.productfeed.ProductFeedServiceImpl",
        "name": "Adobe CQ Commerce Product Feed Service",
        "description": "Generates a list of products based on a list of pages that have been rolled-out",
        "bundleName": "com.adobe.cq.commerce.cq-commerce-pim",
        "attributes": {
            "Feed generator algorithm": {
                "name": "Property Feed generator algorithm",
                "description": "The algorithm used to generated the product feed",
                "type": "String",
                "cardinality": "required",
                "options": [
                    {
                        "label": "Path traversal",
                        "value": "traversal"
                    },
                    {
                        "label": "Query",
                        "value": "query"
                    }
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.contentinsight.impl.ReportingServicesSettingsProvider",
        "name": "Reporting Services settings provider",
        "description": "Provides configured settings and generates authentication token for Reporting Services.",
        "bundleName": "com.adobe.cq.cq-content-insight",
        "attributes": {
            "reportingservices.url": {
                "name": "URL",
                "description": "Reporting Service's base URL",
                "type": "String",
                "cardinality": "required",
                "default": "https://services1.omniture.com/p/rs/0.5"
            }
        }
    },
    {
        "id": "com.adobe.cq.contentinsight.impl.servlets.BrightEdgeProxyServlet",
        "name": "BrightEdge API proxy servlet",
        "description": "Proxy servlet for BrightEdge API adding authentication information",
        "bundleName": "com.adobe.cq.cq-content-insight",
        "attributes": {
            "brightedge.url": {
                "name": "URL",
                "description": "BrightEdge's base URL",
                "type": "String",
                "cardinality": "required",
                "default": "https://api.brightedge.com/co/4.0/recommendations"
            }
        }
    },
    {
        "id": "com.adobe.cq.contentinsight.impl.servlets.ReportingServicesProxyServlet",
        "name": "Reporting Services API proxy servlet",
        "description": "Proxy servlet for Reporting Services API",
        "bundleName": "com.adobe.cq.cq-content-insight",
        "attributes": {
            "reportingservices.proxy.whitelist": {
                "name": "Whitelist",
                "description": "Allowed destinations for the reporting services proxy servlet",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "https?:\\/\\/api(\\d+)?\\.omniture\\.com(:\\d+)?\\/rs\\/0\\.5\\/.*"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.cfm.graphql.extensions.queryexec.servlet.QueryExecutionServlet",
        "name": "Query Execution Servlet Configuration",
        "description": "",
        "bundleName": "cq-dam-cfm-graphql",
        "attributes": {
            "cacheControlMaxAge": {
                "name": "Cache-Control: max-age",
                "description": "This value (in seconds) is added into HTTP response header while executing Query",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "surrogateControlMaxAge": {
                "name": "Surrogate-Control: max-age",
                "description": "This value (in seconds) is added into HTTP response header while executing Query",
                "type": "Integer",
                "cardinality": "required",
                "default": 7200
            },
            "surrogateControlStaleWhileRevalidate": {
                "name": "Surrogate-Control: stale-while-revalidate",
                "description": "This value (in seconds) is added into HTTP response header while executing Query",
                "type": "Integer",
                "cardinality": "required",
                "default": 86400
            },
            "surrogateControlStaleIfError": {
                "name": "Surrogate-Control: stale-if-error",
                "description": "This value (in seconds) is added into HTTP response header while executing Query",
                "type": "Integer",
                "cardinality": "required",
                "default": 86400
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.cfm.graphql.replication.invalidation.operation.DispatcherCacheInvalidationProcessor",
        "name": "Content Fragments Dispatcher Cache Invalidation Processor",
        "description": "",
        "bundleName": "cq-dam-cfm-graphql",
        "attributes": {
            "socketTimeout": {
                "name": "Socket Timeout for connections to Dispatcher",
                "description": "The Socket Timeout to be used for general connections to the Dispatcher (in seconds).",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            },
            "socketTimeoutOnRefetch": {
                "name": "Socket Timeout for re-fetch connections to Dispatcher",
                "description": "The Socket Timeout to be used for connections to the Dispatcher that re-fetch resources into the dispatcher cache (in seconds).",
                "type": "Integer",
                "cardinality": "required",
                "default": 180
            },
            "minThreadPoolSize": {
                "name": "Minimum thread pool size for re-fetch requests to Dispatcher",
                "description": "Minimum thread pool size to be used for requests to the Dispatcher that re-fetch resources into the dispatcher cache.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "maxThreadPoolSize": {
                "name": "Maximum thread pool size for re-fetch requests to Dispatcher",
                "description": "Maximum thread pool size to be used for requests to the Dispatcher that re-fetch resources into the dispatcher cache.",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.cfm.impl.component.ComponentConfigImpl",
        "name": "Content Fragment Component Configuration",
        "description": "Configures a single component that is used to display Content Fragments",
        "bundleName": "com.adobe.dam.cq-dam-cfm-impl",
        "attributes": {
            "dam.cfm.component.resourceType": {
                "name": "Resource type of the component",
                "description": "The resource type of the component that displays a Content Fragment",
                "type": "String",
                "cardinality": "required"
            },
            "dam.cfm.component.fileReferenceProp": {
                "name": "Property: file reference",
                "description": "The name of the property that holds the reference to the Content Fragment",
                "type": "String",
                "cardinality": "required"
            },
            "dam.cfm.component.elementsProp": {
                "name": "Property: element",
                "description": "The name of the property that holds the name of the element to be displayed",
                "type": "String",
                "cardinality": "required"
            },
            "dam.cfm.component.variationProp": {
                "name": "Property: variation",
                "description": "The name of the property that holds the name of the variation to be displayed",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.cfm.impl.conf.FeatureConfigImpl",
        "name": "Content Fragment Components Configuration (Deprecated)",
        "description": "Configures components that display Content Fragments",
        "bundleName": "com.adobe.dam.cq-dam-cfm-impl",
        "attributes": {
            "dam.cfm.resourceTypes": {
                "name": "Resource type of the component",
                "description": "The resource types of components that display a Content Fragment",
                "type": "String",
                "cardinality": "unlimited"
            },
            "dam.cfm.referenceProperties": {
                "name": "Property: file reference",
                "description": "The name of the properties that contain the reference to a Content Fragment",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.cfm.impl.importer.ImporterCleanUpJob",
        "name": "CFM Import lifespan",
        "description": "Defines the lifespan of imported content",
        "bundleName": "com.adobe.dam.cq-dam-cfm-impl",
        "attributes": {
            "cleanup.timeout": {
                "name": "Import timeout (milliseconds)",
                "description": "Minimum lifetime of a temp file (if not deleted explicitly)",
                "type": "Integer",
                "cardinality": "required",
                "default": 600000
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.dm.process.image.PTiffManagerImpl",
        "name": "Adobe CQ Scene7 PTiffManager",
        "description": "Description for com.adobe.cq.dam.dm.process.image.PTiffManagerImpl",
        "bundleName": "com.adobe.cq.dam.cq-scene7-imaging",
        "attributes": {
            "maxMemory": {
                "name": "maxMemory",
                "description": "Maximum memory (bytes) allowed for image conversion",
                "type": "Long",
                "cardinality": "required",
                "default": 3000000000
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.ips.impl.replication.trigger.ReplicateOnModifyWorker",
        "name": "Adobe CQ Dynamic Media Replicate On Modify",
        "description": "Triggers replication when asset has been modified",
        "bundleName": "com.adobe.cq.dam.cq-scene7-imaging",
        "attributes": {
            "dmreplicateonmodify.enabled": {
                "name": "Enabled",
                "description": "Automatically replicate assets on modification",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "dmreplicateonmodify.forcesyncdeletes": {
                "name": "Force Sync Deletes",
                "description": "Automatically delete asset on Scene7 if it is deleted in AEM. This setting is obsolete and only applicable for S7 Classic mode",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.mac.sync.helper.impl.MACSyncClientImpl",
        "name": "Adobe CQ DAM Marketing Cloud Sync Client",
        "description": "Adobe CQ DAM Marketing Cloud Sync Client",
        "bundleName": "com.adobe.cq.cq-dam-mac-sync-helper",
        "attributes": {
            "com.adobe.dam.mac.sync.client.so.timeout": {
                "name": "Socket timeout",
                "description": "The socket timeout which is the timeout for waiting for data from the authorization server in milliseconds",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.mac.sync.impl.DAMSyncServiceImpl",
        "name": "Adobe CQ DAM Sync Service",
        "description": "The Adobe CQ DAM Sync Service handles replication to Adobe Marketing Cloud or to on-premises Adobe Experience Manager instances (depending on the platform configuration) for DAM assets under a registered target folder",
        "bundleName": "com.adobe.cq.cq-dam-mac-sync",
        "attributes": {
            "com.adobe.cq.dam.mac.sync.damsyncservice.registered_paths": {
                "name": "Registered paths",
                "description": "Paths registered to be synced between Adobe Experience Manager and Adobe Marketing Cloud",
                "type": "String",
                "cardinality": "unlimited"
            },
            "com.adobe.cq.dam.mac.sync.damsyncservice.sync.renditions": {
                "name": "Sync Renditions",
                "description": "Enable syncing of renditions while syncing/listening changeson registered paths. By default it only sync/listen changes of original rendition of asset",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms": {
                "name": "com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms.name",
                "description": "com.adobe.cq.dam.mac.sync.damsyncservice.replicate.thread.wait.ms.description",
                "type": "Long",
                "cardinality": "required",
                "default": 100
            },
            "com.adobe.cq.dam.mac.sync.damsyncservice.platform": {
                "name": "Platform",
                "description": "The platform for which this service should be automatically configured (e.g. Adobe Marketing Cloud, Adobe Experience Manager)",
                "type": "String",
                "cardinality": "required",
                "options": [
                    {
                        "label": "Adobe Experience Manager",
                        "value": "aem"
                    },
                    {
                        "label": "Adobe Marketing Cloud",
                        "value": "mac"
                    }
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.processor.nui.impl.NuiAssetProcessor",
        "name": "Adobe CQ DAM Nui Processing Service",
        "description": "",
        "bundleName": "com.adobe.cq.dam.cq-dam-processor-nui",
        "attributes": {
            "nuiEnabled": {
                "name": "Nui enabled",
                "description": "Enable Nui",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "nuiServiceUrl": {
                "name": "Nui service url",
                "description": "Nui Service Url",
                "type": "String",
                "cardinality": "required"
            },
            "nuiApiKey": {
                "name": "Nui api key",
                "description": "Nui Api Key",
                "type": "Password",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.s7imaging.impl.is.ImageServerComponent",
        "name": "Adobe CQ Scene7 ImageServer",
        "description": "Description for com.adobe.cq.dam.s7imaging.impl.is.ImageServerComponent",
        "bundleName": "com.adobe.cq.dam.cq-scene7-imaging",
        "attributes": {
            "TcpPort": {
                "name": "TcpPort",
                "description": "Port number to use for communication with ImageServer process. If left blank the port is automatically chosen",
                "type": "String",
                "cardinality": "required"
            },
            "AllowRemoteAccess": {
                "name": "AllowRemoteAccess",
                "description": "Allow or disallow remote access to ImageServer process. If false image server will only listen on localhost",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "MaxRenderRgnPixels": {
                "name": "MaxRenderRgnPixels",
                "description": "Maximum size in megapixels that will be rendered.",
                "type": "String",
                "cardinality": "required"
            },
            "MaxMessageSize": {
                "name": "MaxMessageSize",
                "description": "Maximum message size in MBytes that will be delivered.",
                "type": "String",
                "cardinality": "required"
            },
            "RandomAccessUrlTimeout": {
                "name": "RandomAccessUrlTimeout",
                "description": "Timeout value for how long in seconds the ImageServer will wait for the JCR to respond to a ranged tile request.",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "WorkerThreads": {
                "name": "WorkerThreads",
                "description": "Number of workers threads (default 10).",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.s7imaging.impl.ps.PlatformServerServlet",
        "name": "Adobe CQ Scene7 PlatformServer",
        "description": "Adobe CQ Scene7 PlatformServer",
        "bundleName": "com.adobe.cq.dam.cq-scene7-imaging",
        "attributes": {
            "cache.enable": {
                "name": "Cache enabled",
                "description": "Whether or not response cache is enabled (boolean)",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cache.rootPaths": {
                "name": "Cache roots",
                "description": "One or more paths to response cache directories. Relative paths are resolved against internal s7imaging bundle directory",
                "type": "String",
                "cardinality": 10,
                "default": [
                    "cache"
                ]
            },
            "cache.maxSize": {
                "name": "Cache Max Size",
                "description": "Maximum size of response cache in bytes",
                "type": "Long",
                "cardinality": "required",
                "default": 200000000
            },
            "cache.maxEntries": {
                "name": "Cache Max Entries",
                "description": "Maximum number of entries in cache",
                "type": "Long",
                "cardinality": "required",
                "default": 100000
            },
            "validate.userAccess": {
                "name": "VALIDATE USER ACCESS",
                "description": "Validate user access while previewing assets via DM server",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.webdav.impl.io.AssetIOHandler",
        "name": "com.adobe.cq.dam.webdav.impl.io.AssetIOHandler",
        "description": "",
        "bundleName": "com.day.cq.dam.dam-webdav-support",
        "attributes": {
            "service.ranking": {
                "name": "service.ranking.name",
                "description": "service.ranking.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "pathPrefix": {
                "name": "pathPrefix.name",
                "description": "pathPrefix.description",
                "type": "String",
                "cardinality": "required",
                "default": "/content/dam",
                "hint": "path"
            },
            "createVersion": {
                "name": "create version",
                "description": "creates version of asset when asset is updated",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.webdav.impl.io.DamWebdavVersionLinkingJob",
        "name": "DAM WebDAV version linking job",
        "description": "Links the previous version history for the assets edited through WebDAV",
        "bundleName": "com.day.cq.dam.dam-webdav-support",
        "attributes": {
            "cq.dam.webdav.version.linking.enable": {
                "name": "Enable Version Linking",
                "description": "Enables version linking for the assets edited through WebDAV",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "cq.dam.webdav.version.linking.scheduler.period": {
                "name": "Periodic Scheduler",
                "description": "Time in seconds for for running this job to do the version linking",
                "type": "Long",
                "cardinality": "required",
                "default": 5
            },
            "cq.dam.webdav.version.linking.staging.timeout": {
                "name": "Staging Timeout",
                "description": "The timeout(in seconds) for considering the tmp asset as the previous history of newly created asset through WebDAV edit operations",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "com.adobe.cq.dam.webdav.impl.io.SpecialFilesHandler",
        "name": "Day CQ DAM Special Files Handler",
        "description": "Prevents unwanted or premature conversion of \"special\" files into DAM assets. This is required for softwares editing assets over WebDAV. Special files are defined via file name regular expressions in the service configuration.",
        "bundleName": "com.day.cq.dam.dam-webdav-support",
        "attributes": {
            "com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters": {
                "name": "com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters.name",
                "description": "com.day.cq.dam.core.impl.io.SpecialFilesHandler.filepatters.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "^\\.(.*)*",
                    "Acr[0-9]*.tmp"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.deserfw.impl.DeserializationFirewallImpl",
        "name": "com.adobe.cq.deserfw.impl.DeserializationFirewallImpl",
        "description": "",
        "bundleName": "com.adobe.cq.cq-deserialization-firewall",
        "attributes": {
            "firewall.deserialization.whitelist": {
                "name": "firewall.deserialization.whitelist",
                "description": "",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "[",
                    "com.adobe.",
                    "com.day.",
                    "com.google.api.client.auth.oauth2.",
                    "com.scene7.",
                    "java.",
                    "javax.",
                    "oracle.sql.",
                    "org.apache.http.auth",
                    "org.apache.http.impl.auth",
                    "org.apache.jackrabbit.",
                    "org.apache.sling."
                ]
            },
            "firewall.deserialization.blacklist": {
                "name": "firewall.deserialization.blacklist",
                "description": "",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "org.apache.commons.collections.functors.InvokerTransformer",
                    "org.apache.commons.collections4.functors.InvokerTransformer",
                    "org.apache.commons.collections.functors.InstantiateTransformer",
                    "org.apache.commons.collections4.functors.InstantiateTransformer",
                    "org.apache.xalan.internal.xsltc.trax.TemplatesImpl",
                    "org.codehaus.groovy.runtime.ConvertedClosure",
                    "org.codehaus.groovy.runtime.MethodClosure",
                    "org.springframework.beans.factory.ObjectFactory",
                    "org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider",
                    "com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl"
                ]
            },
            "firewall.deserialization.diagnostics": {
                "name": "firewall.deserialization.diagnostics",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "class-name-only"
            }
        }
    },
    {
        "id": "com.adobe.cq.dtm.impl.service.DTMWebServiceImpl",
        "name": "Adobe AEM DTM HTTP Client",
        "description": "A HTTP Client wrapper for dealing with DTM API requests",
        "bundleName": "com.adobe.cq.cq-dtm",
        "attributes": {
            "connection.timeout": {
                "name": "Connection timeout",
                "description": "Timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "socket.timeout": {
                "name": "Socket timeout",
                "description": "Timeout in milliseconds for waiting for data or a maximum period of inactivity between two consecutive data packets. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            }
        }
    },
    {
        "id": "com.adobe.cq.dtm.impl.servlets.DTMDeployHookServlet",
        "name": "Adobe DTM Deploy Hook Configuration",
        "description": "The central DTM deploy hook configuration component.",
        "bundleName": "com.adobe.cq.cq-dtm",
        "attributes": {
            "dtm.staging.ip.whitelist": {
                "name": "Staging DTM IP White List",
                "description": "List of DTM staging IPs which are allowed to trigger the DTM download workflow trough the DTM deploy hook feature.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "107.21.99.31"
                ]
            },
            "dtm.production.ip.whitelist": {
                "name": "Production DTM IP White List",
                "description": "List of DTM production IPs which are allowed to trigger the DTM download workflow trough the DTM deploy hook feature.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "23.23.225.112",
                    "204.236.240.48"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.dtm.reactor.impl.service.WebServiceImpl",
        "name": "Adobe AEM Launch HTTP Client",
        "description": "HTTP Client used to communicate with Adobe Launch API",
        "bundleName": "com.adobe.cq.dtm-reactor.core",
        "attributes": {
            "endpointUri": {
                "name": "API endpoint URI",
                "description": "The Adobe Launch API endpoint URI. Default is https://reactor.adobe.io",
                "type": "String",
                "cardinality": "required",
                "default": "https://reactor.adobe.io"
            },
            "connectionTimeout": {
                "name": "Connection timeout",
                "description": "Timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout. Default is 60000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            },
            "socketTimeout": {
                "name": "Socket timeout",
                "description": "Timeout in milliseconds for waiting for data or a maximum period of inactivity between two consecutive data packets. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            }
        }
    },
    {
        "id": "com.adobe.cq.experiencelog.impl.ExperienceLogConfigServlet",
        "name": "Aggregated Usage Statistics Collection",
        "description": "Help us improve Adobe Experience Cloud by sending us usage statistics about how you interact with Adobe Experience Manager. This information does not contain any data about your company's site visitors, and will only be used to help us deliver, support, and improve your user experience.",
        "bundleName": "com.adobe.cq.cq-experiencelog",
        "attributes": {
            "enabled": {
                "name": "Enabled",
                "description": "Enables the service for this instance.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "disabledForGroups": {
                "name": "Disabled for groups",
                "description": "List of groups identifiers for which the service is disabled.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.hc.ContentPackagesHealthCheck",
        "name": "Content Packages Health Check ",
        "description": "Checks the presence and installation status of AEM content packages.",
        "bundleName": "com.adobe.cq.cq-healthcheck",
        "attributes": {
            "hc.name": {
                "name": "Health Check Name",
                "description": "Name of this Health Check service, used for example to identify the corresponding JMX MBean.",
                "type": "String",
                "cardinality": "required",
                "default": "Check for default AEM content packages"
            },
            "hc.tags": {
                "name": "Health Check tags",
                "description": "List of tags for this Health Check service, used to select subsets of Health Check services for execution.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "hc.mbean.name": {
                "name": "MBean name",
                "description": "Name of the MBean to create for this Health Check.",
                "type": "String",
                "cardinality": "required",
                "default": "AEM content packages"
            },
            "package.names": {
                "name": "Package Names",
                "description": "The names of the content packages to check",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.history.impl.HistoryRequestFilter",
        "name": "Adobe CQ History Servlet Filter",
        "description": "A servlet filter to record CQ actions history based on requests",
        "bundleName": "com.adobe.cq.cq-history",
        "attributes": {
            "history.requestFilter.excludedSelectors": {
                "name": "Excluded selectors",
                "description": "Do not log history entries when request selector is part of that list. Leave empty to log all of them",
                "type": "String",
                "cardinality": "unlimited"
            },
            "history.requestFilter.excludedExtensions": {
                "name": "Excluded extensions",
                "description": "Do not log history entries when request extension is part of that list. Leave empty to log all of them",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.history.impl.HistoryServiceImpl",
        "name": "Adobe CQ History Service",
        "description": "A service to manage CQ actions history",
        "bundleName": "com.adobe.cq.cq-history",
        "attributes": {
            "history.service.resourceTypes": {
                "name": "Node/Resource types",
                "description": "Sling resource types or JCR node types to watch. Leave empty to log all of them",
                "type": "String",
                "cardinality": "unlimited"
            },
            "history.service.pathFilter": {
                "name": "Path filters",
                "description": "Restrict history logging to some paths. Leave empty to log all of them",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.inbox.impl.servlet.InboxPreferencesServlet",
        "name": "InboxPreferencesServlet",
        "description": "This servlet handles the fetch and save of user inbox preferences",
        "bundleName": "com.adobe.cq.inbox.cq-inbox",
        "attributes": {
            "sling.servlet.extensions": {
                "name": "Property sling.servlet.extensions",
                "description": "Description for sling.servlet.extensions",
                "type": "String",
                "cardinality": "required",
                "default": "json"
            },
            "sling.servlet.resourceTypes": {
                "name": "Property sling.servlet.resourceTypes",
                "description": "Description for sling.servlet.resourceTypes",
                "type": "String",
                "cardinality": "required",
                "default": "cq/inbox/inboxpreferences"
            },
            "sling.servlet.methods": {
                "name": "Property sling.servlet.methods",
                "description": "Description for sling.servlet.methods",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "POST",
                    "GET"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.inbox.impl.typeprovider.ItemTypeProvider",
        "name": "Inbox Item Type Provider",
        "description": "Manages the mappings from the inbox item type and subtype to their respective UI URL",
        "bundleName": "com.adobe.cq.inbox.cq-inbox",
        "attributes": {
            "inbox.impl.typeprovider.registrypaths": {
                "name": "Item Type Definition Paths",
                "description": "The paths to the item type definitions",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/libs/cq/inbox/extensions/itemtyperegistry",
                    "/apps/cq/inbox/extensions/itemtyperegistry"
                ],
                "hint": "path"
            },
            "inbox.impl.typeprovider.legacypaths": {
                "name": "Legacy Type Locations",
                "description": "Legacy Locations. These locations only had task related custom type definitions",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/etc/projects/tasks/types",
                    "/libs/cq/core/content/projects/tasktypes",
                    "/apps/cq/core/content/projects/tasktypes"
                ],
                "hint": "path"
            },
            "inbox.impl.typeprovider.defaulturl.failureitem": {
                "name": "Failure Item Details Default URL",
                "description": "The default details URL for failure items, default value is [/mnt/overlay/cq/inbox/content/inbox/details/failureitem.html]",
                "type": "String",
                "cardinality": "required",
                "default": "/mnt/overlay/cq/inbox/content/inbox/details/failureitem.html",
                "hint": "url"
            },
            "inbox.impl.typeprovider.defaulturl.workitem": {
                "name": "Workitem Details Default URL",
                "description": "The default details URL for workitems, default value is [/mnt/overlay/cq/inbox/content/inbox/details/workitem.html]",
                "type": "String",
                "cardinality": "required",
                "default": "/mnt/overlay/cq/inbox/content/inbox/details/workitem.html",
                "hint": "url"
            },
            "inbox.impl.typeprovider.defaulturl.task": {
                "name": "Task Details Default URL",
                "description": "The default details URL for tasks, default value is [/mnt/overlay/cq/inbox/content/inbox/details/task.html]",
                "type": "String",
                "cardinality": "required",
                "default": "/mnt/overlay/cq/inbox/content/inbox/details/task.html",
                "hint": "url"
            }
        }
    },
    {
        "id": "com.adobe.cq.projects.impl.servlet.ProjectImageServlet",
        "name": "Adobe CQ Project Image Reference Modification Servlet",
        "description": "Render the image associated with a project in a variety of dimensions and qualities",
        "bundleName": "com.adobe.cq.com.adobe.cq.projects.core",
        "attributes": {
            "image.quality": {
                "name": "Image Quality",
                "description": "Quality must be a double between 0.0 and 1.0",
                "type": "String",
                "cardinality": "required",
                "default": "0.82"
            },
            "image.supported.resolutions": {
                "name": "Supported Resolutions",
                "description": "List of resolutions this component is permitted to generate.",
                "type": "String",
                "cardinality": "required",
                "default": "319x319"
            }
        }
    },
    {
        "id": "com.adobe.cq.projects.purge.Scheduler",
        "name": "Adobe Projects Purge Configuration",
        "description": "Add configurations for project purges to execute during maintenance",
        "bundleName": "com.adobe.cq.com.adobe.cq.projects.core",
        "attributes": {
            "scheduledpurge.name": {
                "name": "Job Name",
                "description": "Enter a descriptive name for this scheduled purge",
                "type": "String",
                "cardinality": "required"
            },
            "scheduledpurge.purgeActive": {
                "name": "Purge active projects.",
                "description": "Check if active projects to be included in purge. Default is to purge inactive only.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "scheduledpurge.templates": {
                "name": "Project Types To Purge",
                "description": "Enter project types (templates) for projects to purge. Leave blank for all projects",
                "type": "String",
                "cardinality": "unlimited"
            },
            "scheduledpurge.purgeGroups": {
                "name": "Purge project groups",
                "description": "If set, project groups will be deleted.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "scheduledpurge.purgeAssets": {
                "name": "Purge project assets",
                "description": "If set, project assets will be deleted.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "scheduledpurge.terminateRunningWorkflows": {
                "name": "Terminate running workflows for purged projects.",
                "description": "If set, running workflows for purged project will be terminated.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "scheduledpurge.daysold": {
                "name": "Project Age",
                "description": "Enter how old (in days) the projects are before they are purged.",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "scheduledpurge.saveThreshold": {
                "name": "Save Threshold",
                "description": "Save every threshold purges.",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            }
        }
    },
    {
        "id": "com.adobe.cq.remote.content.renderer.impl.factory.ConfigurationFactoryImpl",
        "name": "Remote Content Renderer - Configuration Factory",
        "description": "",
        "bundleName": "com.day.cq.remote.content.renderer",
        "attributes": {
            "getContentPathPattern": {
                "name": "Content path pattern",
                "description": "Regular expression to match a portion of the content",
                "type": "String",
                "cardinality": "required",
                "default": "/content/(.*)|/conf/(.*)/settings/wcm/templates/(.*)",
                "hint": "path"
            },
            "getRemoteHTMLRendererUrl": {
                "name": "Remote endpoint URL",
                "description": "URL of the endpoint that is responsible for the generating the content. Use the secured HTTPS protocol if not in local network.",
                "type": "String",
                "cardinality": "required",
                "default": "http://localhost:3000"
            },
            "getAdditionalRequestHeaders": {
                "name": "Additional request headers",
                "description": "Additional headers to be added to the request sent to the remote endpoint. Pattern: key=value",
                "type": "String",
                "cardinality": "unlimited"
            },
            "getRequestTimeout": {
                "name": "Request timeout",
                "description": "Remote host request timeout in milliseconds, configures connection timeout, socket timeout and connection request timout at the same time",
                "type": "Integer",
                "cardinality": "required",
                "default": 10000
            }
        }
    },
    {
        "id": "com.adobe.cq.scheduled.exporter.impl.ScheduledExporterImpl",
        "name": "Day CQ Scheduled Exporter",
        "description": "The Scheduled Exporter regularly looks up configured data sources for data to be exported from the Communique 5 repository.",
        "bundleName": "com.adobe.cq.cq-scheduled-exporter",
        "attributes": {
            "include.paths": {
                "name": "Allowed paths",
                "description": "Paths considered when registering cq:ExportConfig nodes.",
                "type": "String",
                "cardinality": 4096,
                "default": [
                    "/etc/cloudservices"
                ],
                "hint": "path"
            },
            "exporter.user": {
                "name": "Exporter user",
                "description": "User used for exporting. Ensure scheduled-exporter-service has privileges to impersonate that user.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.analytics.impl.ScreensAnalyticsServiceImpl",
        "name": "Component com.adobe.cq.screens.analytics.impl.ScreensAnalyticsServiceImpl",
        "description": "Screens Analytics Service",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "com.adobe.cq.screens.analytics.impl.url": {
                "name": "Analytics URL",
                "description": "The URL to post analytics data from the player.",
                "type": "String",
                "cardinality": "required"
            },
            "com.adobe.cq.screens.analytics.impl.apikey": {
                "name": "Analytics API Key",
                "description": "The api key to authenticate to the analytics server.",
                "type": "Password",
                "cardinality": "required"
            },
            "com.adobe.cq.screens.analytics.impl.project": {
                "name": "Analytics Project",
                "description": "The project configured on your analytics server to receive data",
                "type": "String",
                "cardinality": "required"
            },
            "com.adobe.cq.screens.analytics.impl.environment": {
                "name": "Environment",
                "description": "Choose stage or production",
                "type": "String",
                "cardinality": "required",
                "default": "stage",
                "options": [
                    {
                        "label": "stage",
                        "value": "stage"
                    },
                    {
                        "label": "production",
                        "value": "production"
                    }
                ]
            },
            "com.adobe.cq.screens.analytics.impl.sendFrequency": {
                "name": "Analytics Send Frequency",
                "description": "The frequency in minutes for sending analytics data from players",
                "type": "Integer",
                "cardinality": "required",
                "default": 15
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.device.impl.DeviceService",
        "name": "Component com.adobe.cq.screens.device.impl.DeviceService",
        "description": "A Service managing the devices for AEM Screens.",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "com.adobe.aem.screens.player.pingfrequency": {
                "name": "Ping Frequency",
                "description": "Configure the frequency in seconds between each time a player pings the server. Higher values mean less traffic but slower response to commands. Default value is 5 seconds. If the entered value is at or below 1, it will use 1 second.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "com.adobe.aem.screens.device.pasword.specialchars": {
                "name": "Device password special characters",
                "description": "Configure the device password special characters. at least one of these special characters will be used to create the device password.",
                "type": "String",
                "cardinality": "required",
                "default": "(@#%*-+=~[]{}<>?"
            },
            "com.adobe.aem.screens.device.pasword.minlowercasechars": {
                "name": "Min # of lower case characters for the device password",
                "description": "Configure the minimum number of lower case characters for generating device password",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "com.adobe.aem.screens.device.pasword.minuppercasechars": {
                "name": "Min # of upper case characters for the device password",
                "description": "Configure the minimum number of upper case characters for generating device password",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "com.adobe.aem.screens.device.pasword.minnumberchars": {
                "name": "Min # of numeric characters for the device password",
                "description": "Configure the minimum number of numeric characters for generating device password",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "com.adobe.aem.screens.device.pasword.minspecialchars": {
                "name": "Min # of special characters for the device password",
                "description": "Configure the minimum number of speical characters for generating device password",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "com.adobe.aem.screens.device.pasword.minlength": {
                "name": "Min length for the device password",
                "description": "Configure the minimum length of device password",
                "type": "Integer",
                "cardinality": "required",
                "default": 36
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.device.registration.impl.RegistrationServiceImpl",
        "name": "Component com.adobe.cq.screens.device.registration.impl.RegistrationServiceImpl",
        "description": "Screens Registration Service",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "deviceRegistrationTimeout": {
                "name": "Device Registration Timeout",
                "description": "Use if you want to increase/decrease the timeout (in minutes) during which a device will show up in Pending Devices",
                "type": "Integer",
                "cardinality": "required",
                "default": 1440
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.impl.handler.ChannelsUpdateHandler",
        "name": "Component com.adobe.cq.screens.impl.handler.ChannelsUpdateHandler",
        "description": "Update handler for AEMScreens Channels ContentSync packages.",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "cq.pagesupdatehandler.imageresourcetypes": {
                "name": "Images",
                "description": "List of image resource types to be included into the package.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "screens/core/components/content/image"
                ],
                "hint": "resourceType"
            },
            "cq.pagesupdatehandler.productresourcetypes": {
                "name": "Products",
                "description": "List of product resource types to be included into the package.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "screens/core/components/content/product"
                ],
                "hint": "resourceType"
            },
            "cq.pagesupdatehandler.videoresourcetypes": {
                "name": "Videos",
                "description": "List of video resource types to be included into the package.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "screens/core/components/content/video"
                ],
                "hint": "resourceType"
            },
            "cq.pagesupdatehandler.dynamicsequenceresourcetypes": {
                "name": "Dynamic sequences",
                "description": "List of sequence resource types that need dynamic resolution of the assets using their 'path' property.",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "resourceType"
            },
            "cq.pagesupdatehandler.previewmodepaths": {
                "name": "Preview mode paths",
                "description": "List of paths which are requested in PREVIEW mode and not in DISABLED mode.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content/dam"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.impl.jobs.DistributedDevicesStatiUpdateJob",
        "name": "Component com.adobe.cq.screens.impl.jobs.DistributedDevicesStatiUpdateJob",
        "description": "A scheduled job that gets devices stati from all publisher instances",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "scheduler.expression": {
                "name": "Schedule",
                "description": "Default trigger rate is every 1 min",
                "type": "String",
                "cardinality": "required",
                "default": "0 0/1 * * * ?"
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.impl.remote.impl.DistributedHttpClientImpl",
        "name": "Component com.adobe.cq.screens.impl.remote.impl.DistributedHttpClientImpl",
        "description": "Description for com.adobe.cq.screens.impl.remote.impl.DistributedHttpClientImpl",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "com.adobe.aem.screens.impl.remote.request_timeout": {
                "name": "Request Timeout (milliseconds)",
                "description": "The number of milliseconds until the request times out.",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.impl.ScreensChannelPostProcessor",
        "name": "Screens Channel Post Processor",
        "description": "Screens Channel Post Processor to process the screens channels",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "screens.channels.properties.to.remove": {
                "name": "Property screens.channels.properties.to.remove",
                "description": "Description for screens.channels.properties.to.remove",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcr:content/liveDate",
                    "jcr:content/status"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl",
        "name": "Component com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl",
        "description": "Screens Device Email Monitoring Service",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.projectPath": {
                "name": "Devices Path",
                "description": "Enter the path to the devices in your Screens Project(s). The path is usually /home/users/screens/<Name of your project>",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            },
            "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.scheduleFrequency": {
                "name": "Schedule Frequency",
                "description": "Specify a time (e.g., 5:00 pm or 17:00) OR frequency in hours (e.g., 1) at which this monitor should send emails",
                "type": "String",
                "cardinality": "required",
                "default": "1:00 am"
            },
            "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.pingTimeout": {
                "name": "Ping Timeout",
                "description": "The interval in minutes after which a device should be considered not reachable",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.recipients": {
                "name": "Recipient",
                "description": "The recipient email address",
                "type": "String",
                "cardinality": "required"
            },
            "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpserver": {
                "name": "SMTP Server",
                "description": "Deprecated. The SMTP Server to use for sending emails. Please configure Day CQ Mail service instead.",
                "type": "String",
                "cardinality": "required"
            },
            "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.smtpport": {
                "name": "SMTP Port",
                "description": "Deprecated. SMTP Port. Please configure Day CQ Mail service instead.",
                "type": "Integer",
                "cardinality": "required",
                "default": 587
            },
            "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.usetls": {
                "name": "Use TLS",
                "description": "Deprecated. Enable to use a secure communication with the SMTP Server. Please configure Day CQ Mail service instead.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.username": {
                "name": "username",
                "description": "Deprecated. The username for sending emails. Please configure Day CQ Mail service instead.",
                "type": "String",
                "cardinality": "required"
            },
            "com.adobe.cq.screens.monitoring.impl.ScreensMonitoringServiceImpl.password": {
                "name": "password",
                "description": "Deprecated. The password for sending emails. Please configure Day CQ Mail service instead.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.mq.activemq.impl.ArtemisJMSProvider",
        "name": "Apache ActiveMQ Artemis JMS Provider",
        "description": "Provides an embedded Artemis Broker.",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens.mq.activemq",
        "attributes": {
            "service.ranking": {
                "name": "Ranking",
                "description": "JMS providers are made available in the order of their service ranking. Higher rankings have precedence.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "global.size": {
                "name": "Global Size",
                "description": "Maximum amount of memory which message data may consume. Default: 500 MB.",
                "type": "Long",
                "cardinality": "required",
                "default": 524288000
            },
            "max.disk.usage": {
                "name": "Max Disk Usage",
                "description": "The max percentage of overall disk usage before the broker will block. The broker will perform scans on the disk to determine if the disk is beyond this configured limit. Once that limit is reached any message will be blocked.",
                "type": "Integer",
                "cardinality": "required",
                "default": 80
            },
            "persistence.enabled": {
                "name": "Persistence Enabled",
                "description": "Indicates whether global persistence is enabled. When active, queue states are persisted at shutdown and queues can overflow to disk.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "thread.pool.max.size": {
                "name": "Thread Pool Max Size",
                "description": "Maximum number of threads to use for the thread pool. -1 means 'no limits'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            },
            "scheduled.thread.pool.max.size": {
                "name": "Scheduled Thread Pool Max Size",
                "description": "Maximum number of threads to use for the scheduled thread pool. -1 means 'no limits'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "graceful.shutdown.timeout": {
                "name": "Graceful Shutdown Timeout",
                "description": "Timeout (in milliseconds9 to wait for clients to disconnect before server shutdown.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2000
            },
            "queues": {
                "name": "Queues",
                "description": "Format: {name: 'myqueue', address: 'com.test.myqueue', durable: true, maxConsumers: 50, filter: 'color='red''}",
                "type": "String",
                "cardinality": "unlimited"
            },
            "topics": {
                "name": "Topics",
                "description": "Format: {name: 'mytopic', address: 'com.test.mytopic', maxConsumers: 50}",
                "type": "String",
                "cardinality": "unlimited"
            },
            "addresses.max.delivery.attempts": {
                "name": "Max Delivery Attempts",
                "description": "Defines how many time a cancelled message can be redelivered before sending to the dead-letter-address.",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "addresses.expiry.delay": {
                "name": "Expiry Delay",
                "description": "Defines the expiration time in ms that will be used for messages which are using the default expiration time (i.e. 0). For example, if expiry-delay is set to \"10\" and a message which is using the default expiration time (i.e. 0) arrives then its expiration time of \"0\" will be changed to \"10.\" However, if a message which is using an expiration time of \"20\" arrives then its expiration time will remain unchanged. Setting expiry-delay to \"-1\" will disable this feature.",
                "type": "Long",
                "cardinality": "required",
                "default": 2000
            },
            "addresses.address.full.message.policy": {
                "name": "Address Full Message Policy",
                "description": "This attribute can have one of the following values: PAGE, DROP, FAIL or BLOCK and determines what happens when an address where max-size-bytes is specified becomes full. The default value is PAGE. If the value is PAGE then further messages will be paged to disk. If the value is DROP then further messages will be silently dropped. If the value is FAIL then further messages will be dropped and an exception will be thrown on the client-side. If the value is BLOCK then client message producers will block when they try and send further messages.",
                "type": "String",
                "cardinality": "required",
                "default": "DROP",
                "options": [
                    {
                        "label": "BLOCK",
                        "value": "BLOCK"
                    },
                    {
                        "label": "DROP",
                        "value": "DROP"
                    },
                    {
                        "label": "FAIL",
                        "value": "FAIL"
                    },
                    {
                        "label": "PAGE",
                        "value": "PAGE"
                    }
                ]
            },
            "addresses.max.size.bytes": {
                "name": "Address Max Size Bytes",
                "description": "What's the max memory an address could have before entering on page mode. Default: 30 MB",
                "type": "Integer",
                "cardinality": "required",
                "default": 31457280
            },
            "addresses.page.size.bytes": {
                "name": "Page Size Bytes",
                "description": "The size of each page file used on the paging system. Only relevant when persistence is enabled.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10485760
            },
            "addresses.page.cache.max.size": {
                "name": "Page Cache Max Size",
                "description": "The system will keep up to `page-max-cache-size` page files in memory to optimize IO during paging navigation. Only relevant when persistence is enabled.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10485760
            },
            "cluster.user": {
                "name": "Cluster User",
                "description": "When creating connections between nodes of a cluster to form a cluster connection, Apache ActiveMQ Artemis uses a cluster user and cluster password.",
                "type": "String",
                "cardinality": "required",
                "default": "artemis-cluster"
            },
            "cluster.password": {
                "name": "Cluster Password",
                "description": "When creating connections between nodes of a cluster to form a cluster connection, Apache ActiveMQ Artemis uses a cluster user and cluster password. Use the same user/pass between all cluster nodes. You must provide the encrypted password value. Note: the encrypted value is only decryptable on instances with the same master key.",
                "type": "String",
                "cardinality": "required"
            },
            "cluster.call.timeout": {
                "name": "Cluster Call  Timeout",
                "description": "When a packet is sent via a cluster connection and is a blocking call, i.e. for acknowledgements, this is how long it will wait (in milliseconds) for the reply before throwing an exception. For no timeout use -1",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "cluster.call.failover.timeout": {
                "name": "Cluster Call Fail-Over Timeout",
                "description": "Similar to call-timeout but used when a call is made during a fail-over attempt. For no timeout use -1",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "cluster.client.failure.check.period": {
                "name": "Client Failure Check Period",
                "description": "The period (in milliseconds) used to check if the cluster connection has failed to receive pings from another server.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "cluster.notification.attempts": {
                "name": "Cluster Notification Attempts",
                "description": "How many times the cluster connection should broadcast itself when connecting to the cluster.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "cluster.notification.interval": {
                "name": "Cluster Notification Interval",
                "description": "How often (in milliseconds) the cluster connection should broadcast itself when attaching to the cluster.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "id.cache.size": {
                "name": "ID Cache Size",
                "description": "The size of the cache for pre-creating message IDs. It should be no greater than the number of messages that can be squeezed into confirmation buffer (<confirmation-window-size/>)",
                "type": "Integer",
                "cardinality": "required",
                "default": 20000
            },
            "cluster.confirmation.window.size": {
                "name": "Cluster Confirmation Window Size",
                "description": "The size (in bytes) of the window used for sending confirmations from the server connected to. So once the server has received confirmation-window-size bytes it notifies its client, A value of -1 means no window.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10485760
            },
            "cluster.connection.ttl": {
                "name": "Cluster Connection TTL",
                "description": "This is how long a cluster connection should stay alive if it stops receiving messages from a specific node in the cluster.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "cluster.duplicate.detection": {
                "name": "Cluster Duplicate Detection",
                "description": "Internally cluster connections use bridges to link the nodes, and bridges can be configured to add a duplicate id property in each message that is forwarded. If the target node of the bridge crashes and then recovers, messages might be resent from the source node. By enabling duplicate detection any duplicate messages will be filtered out and ignored on receipt at the target node.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cluster.initial.connect.attempts": {
                "name": "Cluster Initial Connect Attempts",
                "description": "The number of times the system will try to connect a node in the cluster initially. If the max-retry is achieved this node will be considered permanently down and the system will not route messages to this node.",
                "type": "Integer",
                "cardinality": "required",
                "default": 50
            },
            "cluster.max.retry.interval": {
                "name": "Cluster Maximum Retry Interval",
                "description": "The maximum delay (in milliseconds) for retries.",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            },
            "cluster.min.large.message.size": {
                "name": "Cluster Minimum Large Message Size",
                "description": "If the message size (in bytes) is larger than this value then it will be split into multiple segments when sent over the network to other cluster members.",
                "type": "Integer",
                "cardinality": "required",
                "default": 50000
            },
            "cluster.producer.window.size": {
                "name": "Cluster Producer Window Size",
                "description": "The size for producer flow control over cluster connection. It's by default disabled through the cluster connection bridge but you may want to set a value if you are using really large messages in cluster. A value of -1 means no window.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "cluster.reconnect.attempts": {
                "name": "Cluster Reconnect Attempts",
                "description": "The number of times the system will try to reconnect to a node in the cluster. If the max-retry is achieved this node will be considered permanently down and the system will stop routing messages to this node. Default is -1 (infinite retries).",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "cluster.retry.interval": {
                "name": "Cluster Retry Interval",
                "description": "Internally, cluster connections cause bridges to be created between the nodes of the cluster. If the cluster connection is created and the target node has not been started, or say, is being rebooted, then the cluster connections from other nodes will retry connecting to the target until it comes back up, in the same way as a bridge does. This parameter determines the interval in milliseconds between retry attempts. It has the same meaning as the retry-interval on a bridge (as described in Core Bridges).",
                "type": "Integer",
                "cardinality": "required",
                "default": 2000
            },
            "cluster.retry.interval.multiplier": {
                "name": "Cluster Retry Interval Multiplier",
                "description": "This is a multiplier used to increase the retry-interval after each reconnect attempt.",
                "type": "Double",
                "cardinality": "required",
                "default": 1
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl",
        "name": "Component com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl",
        "description": "Screens Offline Update Service",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.projectPath": {
                "name": "Project Path",
                "description": "Enter the path to the Screens Project(s) to update offline content. The path is usually /content/screens/<Name of your project>",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            },
            "com.adobe.cq.screens.offlinecontent.impl.BulkOfflineUpdateServiceImpl.scheduleFrequency": {
                "name": "Schedule Frequency",
                "description": "Specify a time (e.g., 5:00 pm or 17:00) at which this service should update offline content",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.offlinecontent.impl.OfflineContentServiceImpl",
        "name": "Component com.adobe.cq.screens.offlinecontent.impl.OfflineContentServiceImpl",
        "description": "Screens Offline Content Service",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "disableSmartSync": {
                "name": "Disable SmartSync",
                "description": "Use legacy content update mechanism in order to be backward-compatible to older AEM Screens Players that don't support SmartSync yet. Please note that you are encouraged to enable SmartSync and update all AEM Screens Players as it reduces load and storage footprint on AEM.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.screens.segmentation.impl.SegmentationFeatureFlag",
        "name": "Screens Data triggered Content (ContextHub) Feature Flag",
        "description": "Description for com.adobe.cq.screens.segmentation.impl.SegmentationFeatureFlag",
        "bundleName": "com.adobe.cq.screens.com.adobe.cq.screens",
        "attributes": {
            "enableDataTriggeredContent": {
                "name": "Enable Data triggered Content",
                "description": "Switches to a Channel based on a data-trigger (ContextHub). Works only on 6.4 or higher.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.security.hc.bundles.impl.HtmlLibraryManagerConfigHealthCheck",
        "name": "HTML Library Manager Health Check",
        "description": "Checks if the default CQ HTML Library Manager configuration follows the security guidelines.",
        "bundleName": "com.adobe.cq.cq-security-hc",
        "attributes": {
            "hc.tags": {
                "name": "Tags",
                "description": "Tags for the health check.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq",
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.security.hc.bundles.impl.WcmFilterHealthCheck",
        "name": "WCM Filter Health Check",
        "description": "Checks if the WCM Filter and WCM Debug Filter configurations follow the security guidelines.",
        "bundleName": "com.adobe.cq.cq-security-hc",
        "attributes": {
            "hc.tags": {
                "name": "Tags",
                "description": "Tags for the health check.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq",
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.security.hc.dispatcher.impl.DispatcherAccessHealthCheck",
        "name": "Adobe CQ Dispatcher Configuration Health Check",
        "description": "This checks the basic configuration of the Dispatcher component.",
        "bundleName": "com.adobe.cq.cq-security-hc",
        "attributes": {
            "hc.tags": {
                "name": "Tags",
                "description": "Tags for the health check.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "dispatcher",
                    "production",
                    "security"
                ]
            },
            "dispatcher.address": {
                "name": "Dispatcher Address",
                "description": "The address where the dispatcher is installed.",
                "type": "String",
                "cardinality": "required"
            },
            "dispatcher.filter.allowed": {
                "name": "Unrestricted paths",
                "description": "The paths which should not be restricted by the dispatcher.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content",
                    "/libs/cq/personalization/",
                    "/etc/designs/",
                    "/etc/clientlibs/",
                    "/etc/segmentation.segment.js",
                    "/libs/cq/personalization/components/clickstreamcloud/content/config.json",
                    "/libs/wcm/stats/tracker.js",
                    "/libs/cq/personalization/",
                    "/libs/cq/security/userinfo.json",
                    "/libs/cq/i18n/"
                ],
                "hint": "path"
            },
            "dispatcher.filter.blocked": {
                "name": "Restricted paths",
                "description": "The paths which should be restricted by the dispatcher.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/",
                    "/content/",
                    "/etc/",
                    "/libs/",
                    "/etc/replication.xml",
                    "/etc/replication.infinity.xml",
                    "/content.infinity.json",
                    "/content.tidy.json",
                    "/content.sysview.xml",
                    "/content.docview.json",
                    "/content.docview.xml",
                    "/content.0.json",
                    "/content.1.json",
                    "/content.2.json",
                    "/content.feed.xml"
                ],
                "hint": "path"
            },
            "dispatcher.timeout": {
                "name": "Timeout Value(in ms)",
                "description": "The time out value in milliseconds to be used by dispatcher while checking paths.",
                "type": "String",
                "cardinality": "required",
                "default": "3000"
            }
        }
    },
    {
        "id": "com.adobe.cq.security.hc.packages.impl.ExampleContentHealthCheck",
        "name": "Adobe CQ Example Content Packages Health Check",
        "description": "This check checks if the example content packages have been disabled.",
        "bundleName": "com.adobe.cq.cq-security-hc",
        "attributes": {
            "hc.tags": {
                "name": "Tags",
                "description": "Tags for the health check.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "login",
                    "content",
                    "example",
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.security.hc.webserver.impl.ClickjackingHealthCheck",
        "name": "Web Server Configuration Health Check",
        "description": "This checks if the web server sets the X-FRAME-OPTIONS HTTP header to SAMEORIGIN or DENY.",
        "bundleName": "com.adobe.cq.cq-security-hc",
        "attributes": {
            "hc.tags": {
                "name": "Tags",
                "description": "Tags for the health check.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "webserver",
                    "production",
                    "security",
                    "clickjacking"
                ]
            },
            "webserver.address": {
                "name": "Public Address",
                "description": "The public address for the site.",
                "type": "String",
                "cardinality": "required"
            },
            "webserver.timeout": {
                "name": "Timeout Value(in ms)",
                "description": "The time out value in milliseconds to be used while sending requests to  webserver.",
                "type": "String",
                "cardinality": "required",
                "default": "3000"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.accountverification.impl.AccountManagementConfigImpl",
        "name": "AEM Communities Account Verification Configuration",
        "description": "AEM Communities Account Verification Configuration",
        "bundleName": "com.adobe.cq.social.cq-social-console",
        "attributes": {
            "enable": {
                "name": "Enable email verification",
                "description": "Enable email verification for new account registrations and email changes",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "ttl1": {
                "name": "new account URL expiration time",
                "description": "The expiration time for the email verification token sent to new registrants (in seconds)",
                "type": "Long",
                "cardinality": "required",
                "default": 600
            },
            "ttl2": {
                "name": "email change URL expiration time",
                "description": "The expiration time for the email verification token used to confirm email changes (in seconds)",
                "type": "Long",
                "cardinality": "required",
                "default": 3600
            }
        }
    },
    {
        "id": "com.adobe.cq.social.activitystreams.client.impl.SocialActivityComponentFactoryImpl",
        "name": "AEM Communities SocialActivityComponentFactory",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-activitystreams",
        "attributes": {
            "priority": {
                "name": "priority.name",
                "description": "priority.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.cq.social.activitystreams.client.impl.SocialActivityStreamComponentFactory",
        "name": "AEM Communities SocialActivityStreamComponentFactory",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-activitystreams",
        "attributes": {
            "priority": {
                "name": "priority.name",
                "description": "priority.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.cq.social.activitystreams.listener.impl.EventListenerHandler",
        "name": "AEM SocialEvent Handler",
        "description": "This service listens to AEM social event and generates Activity Stream for those events.",
        "bundleName": "com.adobe.cq.social.cq-social-activitystreams",
        "attributes": {
            "event.topics": {
                "name": "event.topics",
                "description": "OSGi social event topic that the Event Listener listening to.",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/cq/social/*"
            },
            "event.filter": {
                "name": "Event Filter",
                "description": "Event filter used to filtering activity generated from SocialActivityManager",
                "type": "String",
                "cardinality": "required",
                "default": "(!(component=com.adobe.cq.social.activitystreams.api.SocialActivityManager))"
            },
            "disable.stream.providers": {
                "name": "Disable Stream Providers",
                "description": "Set to disable Stream Providers",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.social.activitystreams.listener.impl.ModerationEventExtension",
        "name": "AEM Communities ModerationEventExtension",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-activitystreams",
        "attributes": {
            "accepted": {
                "name": "accepted",
                "description": "accepted.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "ranked": {
                "name": "ranked",
                "description": "ranked.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.adobe.cq.social.activitystreams.listener.impl.RatingEventActivitySuppressor",
        "name": "AEM Communities Rating Event Suppresor",
        "description": "This component suppress rating from showing up in activity streams",
        "bundleName": "com.adobe.cq.social.cq-social-activitystreams",
        "attributes": {
            "ranking": {
                "name": "ranking.name",
                "description": "ranking.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "enable": {
                "name": "enable.name",
                "description": "enable.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.social.activitystreams.listener.impl.ResourceActivityStreamProviderFactory",
        "name": "AEM Communities Resource ActivityStreamProvider Factory",
        "description": "Provides Activity Stream at a specific resource location.",
        "bundleName": "com.adobe.cq.social.cq-social-activitystreams",
        "attributes": {
            "streamPath": {
                "name": "Activity Stream Path",
                "description": "The base path of the activity stream. For JCR, this folder needs to have a 'jcr:content' node",
                "type": "String",
                "cardinality": "required"
            },
            "streamName": {
                "name": "Stream Name",
                "description": "The name of the stream",
                "type": "String",
                "cardinality": "required",
                "default": "community"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.calendar.client.endpoints.impl.CalendarOperationsImpl",
        "name": "AEM Communities CalendarOperationProvider",
        "description": "This component serves the POST calendar events request",
        "bundleName": "com.adobe.cq.social.cq-social-calendar-impl",
        "attributes": {
            "MaxRetry": {
                "name": "MaxRetry.name",
                "description": "MaxRetry.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "fieldAllowlist": {
                "name": "fieldAllowlist.name",
                "description": "fieldAllowlist.description",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            },
            "attachmentTypeBlocklist": {
                "name": "attachmentTypeBlocklist.name",
                "description": "attachmentTypeBlocklist.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.calendar.client.operationextensions.EventAttachment",
        "name": "AEM Communities Calendar Event Attachment Operation Extension",
        "description": "This Service is used to Handle Calendar Event Attachments",
        "bundleName": "com.adobe.cq.social.cq-social-calendar-impl",
        "attributes": {
            "attachmentTypeBlocklist": {
                "name": "attachmentTypeBlocklist.name",
                "description": "attachmentTypeBlocklist.description",
                "type": "String",
                "cardinality": "required",
                "default": "DEFAULT"
            },
            "extension.order": {
                "name": "extension.order.name",
                "description": "extension.order.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 2147483647
            }
        }
    },
    {
        "id": "com.adobe.cq.social.calendar.servlets.TimeZoneServlet",
        "name": "AEM Communities TimeZone Servlet",
        "description": "Servlet that provides JSON formatted olson timezone data",
        "bundleName": "com.adobe.cq.social.cq-social-calendar-impl",
        "attributes": {
            "timezones.expirytime": {
                "name": "Expiry time",
                "description": "Expiry time for timezone responses in minutes (defaults to 1 week)",
                "type": "Integer",
                "cardinality": "required",
                "default": 10080
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.comments.endpoints.impl.CommentDeleteEventActivitySuppressor",
        "name": "AEM Communities Comment Delete Event Suppresor",
        "description": "This component suppressors comment deletes from showing up in activity streams",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "ranking": {
                "name": "ranking.name",
                "description": "ranking.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.comments.endpoints.impl.CommentOperationService",
        "name": "AEM Communities CommentOperationProvider",
        "description": "This component serves the POST comments",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "fieldAllowlist": {
                "name": "Form Field Allowlist",
                "description": "List of form field names allowed to be stored with the comment in addition to the minimal form fields required by comments.",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            },
            "attachmentTypeBlocklist": {
                "name": "Restricted mime types for Attachments",
                "description": "Block list of attachment mime types that are unsafe.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.comments.endpoints.impl.TranslationOperationService",
        "name": "AEM Communities TranslationOperationProvider",
        "description": "This component serves TRANSLATION for comments",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "fieldAllowlist": {
                "name": "Form Field Allowlist",
                "description": "List of form field names allowed to be stored with the comment in addition to the minimal form fields required by comments.",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            },
            "attachmentTypeBlocklist": {
                "name": "Restricted mime types for Attachments",
                "description": "Block list of attachment mime types that are unsafe.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.comments.listing.impl.SearchCommentSocialComponentListProvider",
        "name": "AEM Communities Search Comment List Provider",
        "description": "This component represents comment component",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "numUserLimit": {
                "name": "numUserLimit.name",
                "description": "numUserLimit.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.comments.scheduler.impl.SearchScheduledPosts",
        "name": "SearchScheduledPosts",
        "description": "Community Searching Scheduled Posts Service",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "enableScheduledPostsSearch": {
                "name": "Enable Scheduled Posts",
                "description": "Check this if you are using the Scheduled Posts feature in journal component. Otherwise to disable the job for search of scheduled posts - please uncheck this box.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "numberOfMinutes": {
                "name": "numberOfMinutes.name",
                "description": "numberOfMinutes.description",
                "type": "Long",
                "cardinality": "required",
                "default": 30
            },
            "maxSearchLimit": {
                "name": "maxSearchLimit.name",
                "description": "maxSearchLimit.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 200
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.cors.CORSAuthenticationFilter",
        "name": "AEM Communities Authentication Filter",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "cors.enabling": {
                "name": "cors.enabling.name",
                "description": "cors.enabling.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.AndroidEmailClientProvider",
        "name": "AEM Communities Email Client Provider - Android",
        "description": "This is used to remove Android style quoted text from reply email.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "priorityOrder": {
                "name": "Priority Rank",
                "description": "If this email client provider is unable to parse the reply emails, the ones with priority rank integral value more than this will be picked up.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "replyEmailPatterns": {
                "name": "Quoted Text Patterns",
                "description": "These patterns are used sequentially to identify beginning of quoted text in reply emails. Some commonly used sub-patterns can be replaced by their short notations defined in \"AEM Communities Email Quoted Text Patterns\"",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "%NEWLINE%\"?%EMAIL%\"?(%EMAIL%)?%SPACE%wrote:",
                    "--------%SPACE%Original%SPACE%Message%SPACE%--------%NEWLINE%From?%EMAIL%"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.CommentEmailBuilderImpl",
        "name": "CommentEmailBuilderImpl",
        "description": "This service generates email notifications from social components and sends to subscribed users.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "context.path": {
                "name": "context path",
                "description": "The HTTP context path for the instance(s) if not the default \"/\"",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.CommentEmailEventListener",
        "name": "CommentEmailEventListener",
        "description": "Listener for comment creation by inbound email.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "event.topics": {
                "name": "event.topics.name",
                "description": "event.topics.description",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/cq/social/commons/emailreply/import"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.CustomEmailClientProvider",
        "name": "AEM Communities Email Client Provider - Custom",
        "description": "This is used to remove customized style quoted text from reply email.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "priorityOrder": {
                "name": "Priority Rank",
                "description": "If this email client provider is unable to parse the reply emails, the ones with priority rank integral value more than this will be picked up.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "replyEmailPatterns": {
                "name": "Quoted Text Patterns",
                "description": "These patterns are used sequentially to identify beginning of quoted text in reply emails. Some commonly used sub-patterns can be replaced by their short notations defined in \"AEM Communities Email Quoted Text Patterns\"",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.EmailQuotedTextPatternsImpl",
        "name": "AEM Communities Email Quoted Text Patterns",
        "description": "Defines most commonly used patterns, required to build some complex email quoted text patterns. Some basic patterns which cannot be configured are %NEWLINE% = \"(\\n|\\r\\n)\", %SPACE% = \"(\\\\s)\", %DATE_SPACE% = \"[\\\\s,/\\\\.\\\\-]\"",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "pattern.time": {
                "name": "%TIME%",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "(?:[0-2])?[0-9]:[0-5][0-9](?::[0-5][0-9])?(?:(?:%SPACE%)?[AP]M)?"
            },
            "pattern.newline": {
                "name": "%DAY%",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "(?:(?:Mon(?:day)?)|(?:Tue(?:sday)?)|(?:Wed(?:nesday)?)|(?:Thu(?:rsday)?)|(?:Fri(?:day)?)|(?:Sat(?:urday)?)|(?:Sun(?:day)?))"
            },
            "pattern.dayOfMonth": {
                "name": "%DAY_OF_MONTH%",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "[0-3]?[0-9]%DATE_SPACE%*(?:(?:th)|(?:st)|(?:nd)|(?:rd))?"
            },
            "pattern.month": {
                "name": "%MONTH%",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "(?:(?:Jan(?:uary)?)|(?:Feb(?:uary)?)|(?:Mar(?:ch)?)|(?:Apr(?:il)?)|(?:May)|(?:Jun(?:e)?)|(?:Jul(?:y)?)|(?:Aug(?:ust)?)|(?:Sep(?:tember)?)|(?:Oct(?:ober)?)|(?:Nov(?:ember)?)|(?:Dec(?:ember)?)|(?:[0-1]?[0-9]))"
            },
            "pattern.year": {
                "name": "%YEAR%",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "(?:[1-2]?[0-9])[0-9][0-9]"
            },
            "pattern.date": {
                "name": "%DATE%",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "(?:%DAY%%DATE_SPACE%+)?(?:(?:%DAY_OF_MONTH%%DATE_SPACE%+%MONTH%)|(?:%MONTH%%DATE_SPACE%+%DAY_OF_MONTH%))%DATE_SPACE%+%YEAR%"
            },
            "pattern.dateTime": {
                "name": "%DATE_TIME%",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "(?:%DATE%[%DATE_SPACE%]*(?:(?:at)|(?:@))?%SPACE%*%TIME%)|(?:%TIME%[%DATE_SPACE%]*(?:on)?%SPACE%*%DATE%)"
            },
            "pattern.email": {
                "name": "%EMAIL%",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "%SPACE%*[^%SPACE%]+@[^%SPACE%]+%SPACE%*"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.EmailReplyConfigurationImpl",
        "name": "AEM Communities Email Reply Configuration",
        "description": "Listens for configuration changes related to an email reply services.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "email.name": {
                "name": "Name",
                "description": "Configuration name",
                "type": "String",
                "cardinality": "required"
            },
            "email.createPostFromReply": {
                "name": "Create post from reply email",
                "description": "If enabled, tracked id is added to the subject or reply-to header of notification email.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "email.addCommentIdTo": {
                "name": "Add tracked id to header",
                "description": "If \"Create post from reply email\" is enabled, tracked id will be added to either subject line or reply-to header.",
                "type": "String",
                "cardinality": "required",
                "default": "replyTo",
                "options": [
                    {
                        "label": "Reply-To",
                        "value": "replyTo"
                    },
                    {
                        "label": "Subject",
                        "value": "subject"
                    },
                    {
                        "label": "Body",
                        "value": "body"
                    }
                ]
            },
            "email.subjectMaximumLength": {
                "name": "Maximum length of Subject",
                "description": "If tracker id is added to subject line, this is the maximum length of subject excluding tracked id after which it will be trimmed. Note that this should be as small as possible to avoid tracked id information from being lost.",
                "type": "Integer",
                "cardinality": "required",
                "default": 200
            },
            "email.replyToAddress": {
                "name": "\"Reply-To\" email address",
                "description": "Email address which is used as \"Reply-To\" email address",
                "type": "String",
                "cardinality": "required"
            },
            "email.replyToDelimiter": {
                "name": "Reply-to Delimiter",
                "description": "If tracker id is added to Reply-to header, this delimiter will be used",
                "type": "String",
                "cardinality": "required",
                "default": "+"
            },
            "email.trackerIdPrefixInSubject": {
                "name": "Tracker Id prefix in subject",
                "description": "If tracker id is added to subject line, this prefix will be used",
                "type": "String",
                "cardinality": "required",
                "default": "post#"
            },
            "email.trackerIdPrefixInBody": {
                "name": "Tracker id prefix in message body",
                "description": "If tracker id is added to message body, this prefix will be used",
                "type": "String",
                "cardinality": "required",
                "default": "Please do not remove this:"
            },
            "email.asHTML": {
                "name": "Email as HTML",
                "description": "If enabled, Content-Type of email will be set as \"text/html;charset=utf-8\"",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "email.defaultUserName": {
                "name": "Default user name",
                "description": "This name will be used for no name users",
                "type": "String",
                "cardinality": "required",
                "default": "no-reply@example.com"
            },
            "email.templates.rootPath": {
                "name": "Templates root path",
                "description": "The email is built using template stored at this root path.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.EmailReplyImporter",
        "name": "AEM Communities Email Reply Importer",
        "description": "Email Reply Importer Service",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "connectProtocol": {
                "name": "Connect Protocol",
                "description": "This Protocol is used to connect to email box",
                "type": "String",
                "cardinality": "required",
                "default": "pop3s",
                "options": [
                    {
                        "label": "POP3",
                        "value": "pop3"
                    },
                    {
                        "label": "POP3 (over SSL)",
                        "value": "pop3s"
                    }
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.GmailEmailClientProvider",
        "name": "AEM Communities Email Client Provider - Gmail",
        "description": "This is used to remove Gmail style quoted text from reply email.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "priorityOrder": {
                "name": "Priority Rank",
                "description": "If this email client provider is unable to parse the reply emails, the ones with priority rank integral value more than this will be picked up.",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "replyEmailPatterns": {
                "name": "Quoted Text Patterns",
                "description": "These patterns are used sequentially to identify beginning of quoted text in reply emails. Some commonly used sub-patterns can be replaced by their short notations defined in \"AEM Communities Email Quoted Text Patterns\"",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "(On%SPACE%+%DATE_TIME%.*wrote:)"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.IOSEmailClientProvider",
        "name": "AEM Communities Email Client Provider - iOS",
        "description": "This is used to remove iOS style quoted text from reply email.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "priorityOrder": {
                "name": "Priority Rank",
                "description": "If this email client provider is unable to parse the reply emails, the ones with priority rank integral value more than this will be picked up.",
                "type": "Integer",
                "cardinality": "required",
                "default": 6
            },
            "replyEmailPatterns": {
                "name": "Quoted Text Patterns",
                "description": "These patterns are used sequentially to identify beginning of quoted text in reply emails. Some commonly used sub-patterns can be replaced by their short notations defined in \"AEM Communities Email Quoted Text Patterns\"",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "\\>%SPACE%%DATE_TIME%.*%EMAIL%.*wrote:"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.MacmailEmailClientProvider",
        "name": "AEM Communities Email Client Provider - MacMail",
        "description": "This is used to remove MacMail style quoted text from reply email.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "priorityOrder": {
                "name": "Priority Rank",
                "description": "If this email client provider is unable to parse the reply emails, the ones with priority rank integral value more than this will be picked up.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "replyEmailPatterns": {
                "name": "Quoted Text Patterns",
                "description": "These patterns are used sequentially to identify beginning of quoted text in reply emails. Some commonly used sub-patterns can be replaced by their short notations defined in \"AEM Communities Email Quoted Text Patterns\"",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "\\>%SPACE%On.*%EMAIL%.*wrote:%NEWLINE%"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.OutLookEmailClientProvider",
        "name": "AEM Communities Email Client Provider - Outlook",
        "description": "This is used to remove Outlook style quoted text from reply email.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "priorityOrder": {
                "name": "Priority Rank",
                "description": "If this email client provider is unable to parse the reply emails, the ones with priority rank integral value more than this will be picked up.",
                "type": "Integer",
                "cardinality": "required",
                "default": 7
            },
            "replyEmailPatterns": {
                "name": "Quoted Text Patterns",
                "description": "These patterns are used sequentially to identify beginning of quoted text in reply emails. Some commonly used sub-patterns can be replaced by their short notations defined in \"AEM Communities Email Quoted Text Patterns\"",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "---+Original%SPACE%+Message---+%NEWLINE%",
                    "From:%SPACE%*.*mailto:",
                    "From:(.*%NEWLINE%)+Sent:"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.UnknownEmailClientProvider",
        "name": "AEM Communities Email Client Provider - Unknown",
        "description": "This is used to return the original reply email.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "replyEmailPatterns": {
                "name": "Quoted Text Patterns",
                "description": "These patterns are used sequentially to identify beginning of quoted text in reply emails. Some commonly used sub-patterns can be replaced by their short notations defined in \"AEM Communities Email Quoted Text Patterns\"",
                "type": "String",
                "cardinality": "unlimited"
            },
            "priorityOrder": {
                "name": "Priority Rank",
                "description": "If this email client provider is unable to parse the reply emails, the ones with priority rank integral value more than this will be picked up.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2147483647
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.emailreply.impl.YahooEmailClientProvider",
        "name": "AEM Communities Email Client Provider - Yahoo",
        "description": "This is used to remove Yahoo style quoted text from reply email.",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "priorityOrder": {
                "name": "Priority Rank",
                "description": "If this email client provider is unable to parse the reply emails, the ones with priority rank integral value more than this will be picked up.",
                "type": "Integer",
                "cardinality": "required",
                "default": 4
            },
            "replyEmailPatterns": {
                "name": "Quoted Text Patterns",
                "description": "These patterns are used sequentially to identify beginning of quoted text in reply emails. Some commonly used sub-patterns can be replaced by their short notations defined in \"AEM Communities Email Quoted Text Patterns\"",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "On.*%EMAIL%.*wrote:%NEWLINE%"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.maintainance.impl.DeleteTempUGCImageUploads",
        "name": "AEM Communities Delete UGC Temporary Images Service",
        "description": "Delete temporary files that were not uploaded but not associated with the comment",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "numberOfDays": {
                "name": "Frequency to the job that deletes UGC temp images",
                "description": "Frequency to the job that deletes UGC temp images",
                "type": "Long",
                "cardinality": "required",
                "default": 86400
            },
            "ageOfFile": {
                "name": "Allowed Time for the temp image",
                "description": "Time before the UGC tmp image are deleted",
                "type": "Long",
                "cardinality": "required",
                "default": 86400
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.ugclimiter.impl.UGCLimiterServiceImpl",
        "name": "AEM Communities User Generated Content Contribution Limits Service",
        "description": "AEM Communities User Generated Content Contribution Limits Service",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "event.topics": {
                "name": "event.topics.name",
                "description": "event.topics.description",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/cq/social/*"
            },
            "event.filter": {
                "name": "event.filter.name",
                "description": "event.filter.description",
                "type": "String",
                "cardinality": "required",
                "default": "(&(!(event.topics=com/adobe/cq/social/activitystreams/activity/ADDED))(!(event.topics=com/adobe/cq/social/notifications/notify))(!(event.topics=com/adobe/cq/social/scoring/ADDED)))"
            },
            "verbs": {
                "name": "verbs",
                "description": "List of Social Event Verbs that will be counted for UGC Contribution Limits.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "POST",
                    "ADD",
                    "ATTACH"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.commons.ugclimitsconfig.impl.CommunityUserUGCLimitsConfigImpl",
        "name": "AEM Communities User Generated Content Contribution Limits Configuration",
        "description": "AEM Communities User Generated Content Contribution Limits Configuration",
        "bundleName": "com.adobe.cq.social.cq-social-commons",
        "attributes": {
            "enable": {
                "name": "Automatically Apply UGC Contribution Limits",
                "description": "Automatically enable Contribution Limits for new members",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "UGCLimit": {
                "name": "UGC Limit",
                "description": "Maximum number of UGC allowed",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "ugcLimitDuration": {
                "name": "UGC Limit Frequency",
                "description": "Frequency/duration of UGC in minutes",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "domains": {
                "name": "Domains",
                "description": "Do not apply UGC Contribution Limits for the following Domains",
                "type": "String",
                "cardinality": "unlimited"
            },
            "toList": {
                "name": "Messaging Recipients",
                "description": "Users who encounter Contribution Limits may only message these members or groups",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.connect.oauth.impl.FacebookProviderImpl",
        "name": "AEM Communities Facebook OAuth Provider",
        "description": "AEM Communities Facebook OAuth Provider",
        "bundleName": "com.adobe.cq.social.cq-social-commons-oauth",
        "attributes": {
            "oauth.provider.id": {
                "name": "OAuth Provider ID",
                "description": "Specifies OAuth provider",
                "type": "String",
                "cardinality": "required",
                "default": "soco-facebook"
            },
            "oauth.cloud.config.root": {
                "name": "Cloud Service Config",
                "description": "Specifies repository location of the Cloud Service Configuration. ",
                "type": "String",
                "cardinality": "required",
                "default": "conf"
            },
            "provider.config.root": {
                "name": "OAuth Provider Service Config [Deprecated]",
                "description": "Specifies repository location of the OAuth Provider Service Configuration. ",
                "type": "String",
                "cardinality": "required",
                "default": "/apps/social/facebookprovider/config",
                "hint": "path"
            },
            "provider.config.create.tags.enabled": {
                "name": "Enable Tags",
                "description": "If unchecked, no Facebook tags are generated.  Only basic profile properties are stored.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "provider.config.user.folder": {
                "name": "User Path",
                "description": "Location in repository where user is created.",
                "type": "String",
                "cardinality": "required",
                "default": "community",
                "options": [
                    {
                        "label": "/home/users/facebook",
                        "value": "facebook"
                    },
                    {
                        "label": "/home/users/community",
                        "value": "community"
                    }
                ]
            },
            "provider.config.facebook.fetch.fields": {
                "name": "Enable fields",
                "description": "If checked, enables fetching specific field names from Facebook Graph API.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "provider.config.facebook.fields": {
                "name": "Fields",
                "description": "If enabled, request these fields when calling the Facebook Graph API.  Facebook's new APIs may require fields to be specifically requested (e.g.: first_name) Please refer to Facebook's Graph API Developer Reference for further details.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "id",
                    "name",
                    "first_name",
                    "last_name",
                    "link",
                    "locale",
                    "picture",
                    "timezone",
                    "updated_time",
                    "verified",
                    "email"
                ]
            },
            "provider.config.refresh.userdata.enabled": {
                "name": "Update User",
                "description": "If checked, refreshes user data upon each login to reflect changes or additional data requested.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.social.connect.oauth.impl.SocialOAuthAuthenticationHandler",
        "name": "AEM Communities OAuth Handler Component",
        "description": "AEM Communities OAuth Handler Component",
        "bundleName": "com.adobe.cq.social.cq-social-commons-oauth",
        "attributes": {
            "path": {
                "name": "path.name",
                "description": "Path for where this handler will authenticate",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/var/community/cloudservices/facebookconnect",
                    "/var/community/cloudservices/twitterconnect",
                    "/etc/cloudservices/facebookconnect",
                    "/etc/cloudservices/twitterconnect"
                ],
                "hint": "path"
            },
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service ranking. Higher gives more priority.",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            }
        }
    },
    {
        "id": "com.adobe.cq.social.connect.oauth.impl.SocialOAuthUserProfileMapper",
        "name": "AEM Communities Social OAuth User Profile Field Mapper",
        "description": "AEM Communities Social OAuth User Profile Field Mapper Component",
        "bundleName": "com.adobe.cq.social.cq-social-commons-oauth",
        "attributes": {
            "facebook": {
                "name": "facebook.name",
                "description": "User Profile Field Mapping for Facebook",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "profile/sling:resourceType=\"cq/security/components/profile\"",
                    "profile/id=profile/facebook/id",
                    "profile/facebook/id=profile/facebook/id",
                    "profile/facebook/username=profile/facebook/username",
                    "profile/facebook/name=profile/facebook/name",
                    "profile/facebook/last_name=profile/facebook/last_name",
                    "profile/facebook/first_name=profile/facebook/first_name",
                    "profile/facebook/email=profile/facebook/email",
                    "profile/facebook/link=profile/facebook/link",
                    "profile/facebook/avatar=profile/facebook/avatar",
                    "profile/facebook/locale=profile/facebook/locale",
                    "profile/facebook/timezone=profile/facebook/timezone",
                    "profile/facebook/picture=profile/facebook/picture",
                    "profile/facebook/verified=profile/facebook/verified",
                    "profile/facebook/updated_time=profile/facebook/updated_time"
                ]
            },
            "twitter": {
                "name": "twitter.name",
                "description": "User Profile Field Mapping for Twitter",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "profile/sling:resourceType=\"cq/security/components/profile\"",
                    "profile/id=profile/twitter/id",
                    "profile/twitter/id=profile/twitter/id",
                    "profile/twitter/name=profile/twitter/name",
                    "profile/twitter/email=profile/twitter/email",
                    "profile/twitter/screen_name=profile/twitter/screen_name",
                    "profile/twitter/avatar=profile/twitter/avatar",
                    "profile/twitter/description=profile/twitter/description",
                    "profile/twitter/lang=profile/twitter/lang",
                    "profile/twitter/time_zone=profile/twitter/time_zone",
                    "profile/twitter/verified=profile/twitter/verified",
                    "profile/twitter/created_at=profile/twitter/created_at"
                ]
            },
            "provider.config.user.folder": {
                "name": "provider.config.user.folder.name",
                "description": "User Path",
                "type": "String",
                "cardinality": "required",
                "default": "community"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.connect.oauth.impl.TwitterProviderImpl",
        "name": "AEM Communities Twitter OAuth Provider",
        "description": "AEM Communities Twitter OAuth Provider",
        "bundleName": "com.adobe.cq.social.cq-social-commons-oauth",
        "attributes": {
            "oauth.provider.id": {
                "name": "OAuth Provider ID",
                "description": "Specifies OAuth provider",
                "type": "String",
                "cardinality": "required",
                "default": "soco-twitter"
            },
            "oauth.cloud.config.root": {
                "name": "Cloud Service Config",
                "description": "Specifies repository location of the Cloud Service Configuration. ",
                "type": "String",
                "cardinality": "required",
                "default": "conf"
            },
            "provider.config.root": {
                "name": "OAuth Provider Service Config [Deprecated]",
                "description": "Specifies repository location of the OAuth Provider Service Configuration. ",
                "type": "String",
                "cardinality": "required",
                "default": "/apps/social/twitterprovider/config",
                "hint": "path"
            },
            "provider.config.user.folder": {
                "name": "User Path",
                "description": "Location in repository where user is created.",
                "type": "String",
                "cardinality": "required",
                "default": "community",
                "options": [
                    {
                        "label": "/home/users/twitter",
                        "value": "twitter"
                    },
                    {
                        "label": "/home/users/community",
                        "value": "community"
                    }
                ]
            },
            "provider.config.twitter.enable.params": {
                "name": "Enable Params",
                "description": "If checked, allows additional URL parameters to be added to request additional data from Twitter.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "provider.config.twitter.params": {
                "name": "URL Parameters",
                "description": "If enabled, add these parameters to the URL when requesting data from Twitter.  URL parameters may need application whitelisting by Twitter before data can be fetched. ",
                "type": "String",
                "cardinality": "unlimited"
            },
            "provider.config.refresh.userdata.enabled": {
                "name": "Update User",
                "description": "If checked, refreshes user data upon each login to reflect changes or additional data requested.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.social.content.fragments.services.impl.CommunitiesFragmentCreationServiceImpl",
        "name": "AEM Communities Content Fragment Creation Service",
        "description": "Description for com.adobe.cq.social.content.fragments.services.impl.CommunitiesFragmentCreationServiceImpl",
        "bundleName": "com.adobe.cq.social.cq-social-content-fragments-impl",
        "attributes": {
            "cq.social.content.fragments.services.enabled": {
                "name": "Enable",
                "description": "Enable/Disable this service (enable).",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "cq.social.content.fragments.services.waitTimeSeconds": {
                "name": "Wait time (seconds)",
                "description": "The amount of time to wait (in seconds) before timing out when waiting for fragment to be created.",
                "type": "Long",
                "cardinality": "required",
                "default": 30
            }
        }
    },
    {
        "id": "com.adobe.cq.social.datastore.as.impl.ASResourceProviderFactory",
        "name": "AEM Communities Cloud Storage Resource Provider",
        "description": "A resource provider for AEM Communities Cloud Storage",
        "bundleName": "com.adobe.cq.social.cq-social-as-provider",
        "attributes": {
            "version.id": {
                "name": "version.id",
                "description": "version.id.description",
                "type": "String",
                "cardinality": "required",
                "default": "v1"
            },
            "cache.on": {
                "name": "use cache for reads",
                "description": "uncheck to turn cache off for reads",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "concurrency.level": {
                "name": "cache concurrency level",
                "description": "set the concurrency level of the cache",
                "type": "Long",
                "cardinality": "required",
                "default": 4
            },
            "cache.start.size": {
                "name": "cache start size",
                "description": "initial cache size of the cache",
                "type": "Long",
                "cardinality": "required",
                "default": 100
            },
            "cache.ttl": {
                "name": "expiration time for cache items",
                "description": "1000 equals 1 second",
                "type": "Long",
                "cardinality": "required",
                "default": 5000
            },
            "cache.size": {
                "name": "number of entries for cache",
                "description": "max number of cache entries to store",
                "type": "Long",
                "cardinality": "required",
                "default": 2500
            },
            "time.limit": {
                "name": "warning message time limit",
                "description": "log a warning message if response from cloud storage server is greater than this milliseconds",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "com.adobe.cq.social.datastore.op.impl.SocialMSResourceProviderFactory",
        "name": "AEM Communities Local Mongo Storage Resource Provider",
        "description": "A resource provider for AEM Communities Mongo Cloud Storage",
        "bundleName": "com.adobe.cq.social.cq-social-ms-provider",
        "attributes": {
            "solr.zk.timeout": {
                "name": "zookeeper timeout",
                "description": "the timeout to talk to the zookeeper ensemble in ms",
                "type": "String",
                "cardinality": "required",
                "default": "100"
            },
            "solr.commit": {
                "name": "commit interval",
                "description": "an override to the solr autocommit interval.",
                "type": "String",
                "cardinality": "required",
                "default": "0"
            },
            "cache.on": {
                "name": "use cache for reads",
                "description": "uncheck to turn cache off for reads",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "concurrency.level": {
                "name": "cache concurrency level",
                "description": "set the concurrency level of the cache",
                "type": "Long",
                "cardinality": "required",
                "default": 4
            },
            "cache.start.size": {
                "name": "cache start size",
                "description": "initial cache size of the cache",
                "type": "Long",
                "cardinality": "required",
                "default": 100
            },
            "cache.ttl": {
                "name": "expiration time for cache items",
                "description": "1000 equals 1 second",
                "type": "Long",
                "cardinality": "required",
                "default": 5000
            },
            "cache.size": {
                "name": "number of entries for cache",
                "description": "max number of cache entries to store",
                "type": "Long",
                "cardinality": "required",
                "default": 2500
            }
        }
    },
    {
        "id": "com.adobe.cq.social.datastore.rdb.impl.SocialRDBResourceProviderFactory",
        "name": "AEM Communities Local Relational Storage Resource Provider",
        "description": "A resource provider for AEM Communities Relational Storage",
        "bundleName": "com.adobe.cq.social.cq-social-rdb-provider",
        "attributes": {
            "solr.zk.timeout": {
                "name": "zookeeper timeout",
                "description": "the timeout to talk to the zookeeper ensemble in ms",
                "type": "String",
                "cardinality": "required",
                "default": "100"
            },
            "solr.commit": {
                "name": "commit interval",
                "description": "an override to the solr autocommit interval.",
                "type": "String",
                "cardinality": "required",
                "default": "0"
            },
            "cache.on": {
                "name": "use cache for reads",
                "description": "uncheck to turn cache off for reads",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "concurrency.level": {
                "name": "cache concurrency level",
                "description": "set the concurrency level of the cache",
                "type": "Long",
                "cardinality": "required",
                "default": 4
            },
            "cache.start.size": {
                "name": "cache start size",
                "description": "initial cache size of the cache",
                "type": "Long",
                "cardinality": "required",
                "default": 100
            },
            "cache.ttl": {
                "name": "expiration time for cache items",
                "description": "1000 equals 1 second",
                "type": "Long",
                "cardinality": "required",
                "default": 5000
            },
            "cache.size": {
                "name": "number of entries for cache",
                "description": "max number of cache entries to store",
                "type": "Long",
                "cardinality": "required",
                "default": 2500
            }
        }
    },
    {
        "id": "com.adobe.cq.social.enablement.adaptors.EnablementLearningPathAdaptorFactory",
        "name": "AEM Communities Enablement LearningPath Adapter Factory",
        "description": "Description for com.adobe.cq.social.enablement.adaptors.EnablementLearningPathAdaptorFactory",
        "bundleName": "com.adobe.cq.social.cq-social-enablement-impl",
        "attributes": {
            "isMemberCheck": {
                "name": "Enable membership check",
                "description": "Description for isMemberCheck",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.social.enablement.adaptors.EnablementResourceAdaptorFactory",
        "name": "AEM Communities Enablement Resource Adapter Factory",
        "description": "Description for com.adobe.cq.social.enablement.adaptors.EnablementResourceAdaptorFactory",
        "bundleName": "com.adobe.cq.social.cq-social-enablement-impl",
        "attributes": {
            "isMemberCheck": {
                "name": "Enable membership check",
                "description": "Description for isMemberCheck",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.social.enablement.learningpath.endpoints.impl.EnablementLearningPathModelOperationService",
        "name": "AEM Communities Enablement LearningPath Operation Provider",
        "description": "This component serves the enablement learningpath operations",
        "bundleName": "com.adobe.cq.social.cq-social-enablement-impl",
        "attributes": {
            "fieldAllowlist": {
                "name": "Property fieldAllowlist",
                "description": "List of allowed custom properties",
                "type": "String",
                "cardinality": 100
            }
        }
    },
    {
        "id": "com.adobe.cq.social.enablement.resource.endpoints.impl.EnablementResourceModelOperationService",
        "name": "AEM Communities Enablement Resource Operation Provider",
        "description": "This component serves the enablement resource operations",
        "bundleName": "com.adobe.cq.social.cq-social-enablement-impl",
        "attributes": {
            "fieldAllowist": {
                "name": "Property fieldAllowist",
                "description": "List of allowed custom properties",
                "type": "String",
                "cardinality": 100
            }
        }
    },
    {
        "id": "com.adobe.cq.social.filelibrary.client.endpoints.FilelibraryDownloadGetServlet",
        "name": "AEM Communities FilelibraryDownloadGetServlet",
        "description": "This servlet serves the GET request for social components",
        "bundleName": "com.adobe.cq.social.cq-social-filelibrary",
        "attributes": {
            "sling.servlet.selectors": {
                "name": "sling.servlet.selectors.name",
                "description": "sling.servlet.selectors.description",
                "type": "String",
                "cardinality": "required",
                "default": "download"
            },
            "sling.servlet.extensions": {
                "name": "sling.servlet.extensions.name",
                "description": "sling.servlet.extensions.description",
                "type": "String",
                "cardinality": "required",
                "default": "json"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.filelibrary.client.endpoints.impl.FileLibraryOperationsService",
        "name": "AEM Communities FileLibraryOperationProvider",
        "description": "This component serves the POST FileLibrary",
        "bundleName": "com.adobe.cq.social.cq-social-filelibrary",
        "attributes": {
            "fieldAllowlist": {
                "name": "fieldAllowlist.name",
                "description": "fieldAllowlist.description",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            },
            "attachmentTypeBlocklist": {
                "name": "Restricted mime types for Attachments",
                "description": "Block list of attachment mime types that are unsafe.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.forum.client.endpoints.impl.ForumOperationsService",
        "name": "AEM Communities ForumOperationProvider",
        "description": "This component serves the POST forums",
        "bundleName": "com.adobe.cq.social.cq-social-forum",
        "attributes": {
            "fieldAllowlist": {
                "name": "fieldAllowlist.name",
                "description": "fieldAllowlist.description",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            },
            "attachmentTypeBlocklist": {
                "name": "Restricted mime types for Attachments",
                "description": "Block list of attachment mime types that are unsafe.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.forum.dispatcher.impl.FlushOperations",
        "name": "Forum Dispatcher Flush Operation Extension",
        "description": "This operation extension uses the flush service to invalidate the dispatcher",
        "bundleName": "com.adobe.cq.social.cq-social-forum",
        "attributes": {
            "extension.order": {
                "name": "extension.order.name",
                "description": "extension.order.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 2147483647
            },
            "flush.forumontopic": {
                "name": "flush.forumontopic.name",
                "description": "flush.forumontopic.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.social.group.client.impl.CommunityGroupCollectionComponentFactory",
        "name": "AEM Communities Group Listing",
        "description": "Configurations for managing communities group listing pages",
        "bundleName": "com.adobe.cq.social.cq-social-group",
        "attributes": {
            "group.listing.pagination.enable": {
                "name": "Enable pagination on group listing",
                "description": "Enable/Disable pagination in group Listing Pages. Enabling this  will improve performance but overlays for group listing page would require changes from customer.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "group.listing.lazyloading.enable": {
                "name": "Enable shallow group listing",
                "description": "Enable/Disable shallow group on Listing Pages. Enabling this  will improve performance and fetch join/leave options on demand but overlays for group listing page would require changes from customer.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "page.size": {
                "name": "Number of groups displayed per page",
                "description": "Number of groups to be displayed per page",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "priority": {
                "name": "Property priority",
                "description": "Description for priority",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.cq.social.group.impl.GroupServiceImpl",
        "name": "AEM Communities GroupService",
        "description": "to create a copy of social group",
        "bundleName": "com.adobe.cq.social.cq-social-group",
        "attributes": {
            "maxWaitTime": {
                "name": "Property maxWaitTime",
                "description": "Description for maxWaitTime",
                "type": "Integer",
                "cardinality": "required",
                "default": 2000
            },
            "minWaitBetweenRetries": {
                "name": "Property minWaitBetweenRetries",
                "description": "Description for minWaitBetweenRetries",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.adobe.cq.social.ideation.client.endpoints.impl.IdeationOperationsService",
        "name": "AEM Communities IdeationOperationProvider",
        "description": "This component serves the ideations",
        "bundleName": "com.adobe.cq.social.cq-social-ideation-impl",
        "attributes": {
            "fieldAllowlist": {
                "name": "fieldAllowlist.name",
                "description": "fieldAllowlist.description",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            },
            "attachmentTypeBlocklist": {
                "name": "Restricted mime types for Attachments",
                "description": "Block list of attachment mime types that are unsafe.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.journal.client.endpoints.impl.JournalOperationsService",
        "name": "AEM Communities JournalOperationProvider",
        "description": "This component serves the journals",
        "bundleName": "com.adobe.cq.social.cq-social-journal",
        "attributes": {
            "fieldAllowlist": {
                "name": "fieldAllowlist.name",
                "description": "fieldAllowlist.description",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            },
            "attachmentTypeBlocklist": {
                "name": "Restricted mime types for Attachments",
                "description": "Block list of attachment mime types that are unsafe.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.members.endpoints.impl.CommunityMemberGroupProfileOperationService",
        "name": "MemberGroupOperationProvider",
        "description": "This component serves the POST Members Group",
        "bundleName": "com.adobe.cq.social.cq-social-members-impl",
        "attributes": {
            "fieldAllowlist": {
                "name": "Property fieldAllowlist",
                "description": "Description for fieldAllowlist",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "aboutMe",
                    "givenName"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.members.endpoints.impl.CommunityMemberUserProfileOperationService",
        "name": "AEM Communities MemberUserProfileOperationService",
        "description": "This component provides social member user profile operations",
        "bundleName": "com.adobe.cq.social.cq-social-members-impl",
        "attributes": {
            "fieldAllowlist": {
                "name": "Property fieldAllowlist",
                "description": "Description for fieldAllowlist",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "gender",
                    "aboutMe",
                    "region",
                    "streetAddress",
                    "city",
                    "email",
                    "familyName",
                    "country",
                    "birthday",
                    "givenName",
                    "displayName",
                    "postalCode",
                    "language",
                    "jobTitle",
                    "url",
                    "memberSince",
                    "friends",
                    "smartRendering"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.members.impl.CommunityMemberGroupProfileComponentFactory",
        "name": "AEM Communities MemberGroupProfileComponentFactory",
        "description": "Description for com.adobe.cq.social.members.impl.CommunityMemberGroupProfileComponentFactory",
        "bundleName": "com.adobe.cq.social.cq-social-members-impl",
        "attributes": {
            "everyoneLimit": {
                "name": "Property everyoneLimit",
                "description": "How many memebrs of everyone group should be listed. Default is 200, -1 for all - Iterating all users in the system may result into unacceptable delay of the response.",
                "type": "Integer",
                "cardinality": "required",
                "default": 200
            },
            "priority": {
                "name": "Property priority",
                "description": "Description for priority",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.cq.social.messaging.client.endpoints.impl.MessagingOperationsServiceImpl",
        "name": "AEM Communities Messaging Operations Service",
        "description": "This component serves the POST messages request",
        "bundleName": "com.adobe.cq.social.cq-social-messaging-impl",
        "attributes": {
            "message.properties": {
                "name": "Message Fields Allowlist",
                "description": "Message Fields Allowlist",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "content",
                    "subject"
                ]
            },
            "messageBoxSizeLimit": {
                "name": "Message box size limit",
                "description": "Size limit per user in bytes, -1 for unlimited size",
                "type": "Long",
                "cardinality": "required",
                "default": 1073741824
            },
            "messageCountLimit": {
                "name": "Message count limit",
                "description": "Total message count limit per user, -1 for unlimited count",
                "type": "Long",
                "cardinality": "required",
                "default": 10000
            },
            "notifyFailure": {
                "name": "Notify delivery failure",
                "description": "Notify sender if message delivery fails to some recipients",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "failureMessageFrom": {
                "name": "Failure delivery sender id",
                "description": "id/name in from field of failure delivery message",
                "type": "String",
                "cardinality": "required",
                "default": "failureNotifier"
            },
            "failureTemplatePath": {
                "name": "Failure message template path",
                "description": "Absolute path to the failure message template root",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/community/notifications/messaging/default",
                "hint": "path"
            },
            "maxRetries": {
                "name": "No of retries",
                "description": "Maximum no of retries",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "minWaitBetweenRetries": {
                "name": "Wait between retries",
                "description": "Wait between subsequent retries",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "countUpdatePoolSize": {
                "name": "Count update pool size",
                "description": "Number of concurrent threads for count update",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "inbox.path": {
                "name": "Inbox path",
                "description": "Path of inbox",
                "type": "String",
                "cardinality": "required",
                "default": "/mail/inbox"
            },
            "sentitems.path": {
                "name": "Sent items path",
                "description": "Path of sent items",
                "type": "String",
                "cardinality": "required",
                "default": "/mail/sentitems"
            },
            "supportAttachments": {
                "name": "Support attachments",
                "description": "Support message attachments",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "supportGroupMessaging": {
                "name": "Enable group messaging",
                "description": "Support messaging to groups",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "maxTotalRecipients": {
                "name": "Maximum no of total recipients",
                "description": "Maximum no of total recipients to which message can be sent at a time",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "batchSize": {
                "name": "Batch size",
                "description": "Batch size",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "maxTotalAttachmentSize": {
                "name": "Total attachment size",
                "description": "Maximum total size of all the attachments",
                "type": "Long",
                "cardinality": "required",
                "default": 104857600
            },
            "attachmentTypeBlocklist": {
                "name": "Attachment type block list",
                "description": "Block list of attachment types",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            },
            "allowedAttachmentTypes": {
                "name": "Allowed attachment types",
                "description": "Allowed types of attachment",
                "type": "String",
                "cardinality": "unlimited"
            },
            "serviceSelector": {
                "name": "Service selector",
                "description": "Service selector",
                "type": "String",
                "cardinality": "required",
                "default": "/bin/messaging"
            },
            "fieldAllowlist": {
                "name": "Field allowlist",
                "description": "Field allowlist",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.moderation.dashboard.api.FilterGroupSocialComponentFactory",
        "name": "AEM Communities Moderation Dashboard Filters",
        "description": "This component holds a group of search filters.",
        "bundleName": "com.adobe.cq.social.cq-social-moderation",
        "attributes": {
            "resourceType.filters": {
                "name": "ResourceType Filters",
                "description": "Specify resource types for searching: ScreenName=resource/type1:resource/type2... etc.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "priority": {
                "name": "Property priority",
                "description": "Description for priority",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.cq.social.moderation.dashboard.api.ModerationDashboardSocialComponentFactory",
        "name": "AEM Communities Moderation Dashboard",
        "description": "This component provides a dashboard for moderators to use.",
        "bundleName": "com.adobe.cq.social.cq-social-moderation",
        "attributes": {
            "priority": {
                "name": "Property priority",
                "description": "Description for priority",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.cq.social.moderation.dashboard.api.UserDetailsSocialComponentFactory",
        "name": "AEM Communities User Details",
        "description": "This component provides the details and activity stream of a given user.",
        "bundleName": "com.adobe.cq.social.cq-social-moderation",
        "attributes": {
            "priority": {
                "name": "Property priority",
                "description": "Description for priority",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.cq.social.moderation.dashboard.internal.impl.FilterGroupSocialComponentFactoryV2",
        "name": "AEM Communities Moderation Dashboard Filters V2",
        "description": "This component holds a group of search filters.",
        "bundleName": "com.adobe.cq.social.cq-social-moderation",
        "attributes": {
            "resourceType.filters": {
                "name": "ResourceType Filters",
                "description": "Specify resource types for searching: ScreenName=resource/type1:resource/type2... etc.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "priority": {
                "name": "Property priority",
                "description": "Description for priority",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.cq.social.notifications.impl.MentionsRouter",
        "name": "mentionsrouter.name",
        "description": "mentionsrouter.description",
        "bundleName": "com.adobe.cq.social.cq-social-notifications-impl",
        "attributes": {
            "event.topics": {
                "name": "mentionsrouter.topic.label",
                "description": "mentionsrouter.topic.description",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/cq/social/mentions/*"
            },
            "event.filter": {
                "name": "Event Filter",
                "description": "Event filter used to filtering activity generated from SocialActivityManager",
                "type": "String",
                "cardinality": "required",
                "default": "(!(component=com.adobe.cq.social.activitystreams.api.SocialActivityManager))"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.notifications.impl.NotificationManagerImpl",
        "name": "AEM Communities Notification Manager",
        "description": "Configurations for managing communities notification count",
        "bundleName": "com.adobe.cq.social.cq-social-notifications-impl",
        "attributes": {
            "max.unread.notification.count": {
                "name": "Number of unread notifications",
                "description": "Number of maximum unread notifications",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            }
        }
    },
    {
        "id": "com.adobe.cq.social.notifications.impl.NotificationsRouter",
        "name": "notificationsrouter.name",
        "description": "notificationsrouter.description",
        "bundleName": "com.adobe.cq.social.cq-social-notifications-impl",
        "attributes": {
            "event.topics": {
                "name": "notificationsrouter.topic.label",
                "description": "notificationsrouter.topic.description",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/cq/social/notifications/*"
            },
            "event.filter": {
                "name": "Event Filter",
                "description": "Event filter used to filtering activity generated from SocialActivityManager",
                "type": "String",
                "cardinality": "required",
                "default": "(!(component=com.adobe.cq.social.activitystreams.api.SocialActivityManager))"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.qna.client.endpoints.impl.QnaForumOperationsService",
        "name": "AEM Communities QnaForumOperationProvider",
        "description": "This component serves the POST forums",
        "bundleName": "com.adobe.cq.social.cq-social-qna",
        "attributes": {
            "fieldAllowlist": {
                "name": "fieldAllowlist.name",
                "description": "fieldAllowlist.description",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            },
            "attachmentTypeBlocklist": {
                "name": "Restricted mime types for Attachments",
                "description": "Block list of attachment mime types that are unsafe.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportImporterServiceImpl",
        "name": "AEM Communities Analytics Report Importer",
        "description": "Imports Analytics Reports periodically into AEM Communities SRP",
        "bundleName": "com.adobe.cq.social.cq-social-reporting-management",
        "attributes": {
            "cq.social.reporting.analytics.polling.importer.interval": {
                "name": "Import interval",
                "description": "Import interval in hours. Default is set to 12h.",
                "type": "Long",
                "cardinality": "required",
                "default": 12
            },
            "cq.social.reporting.analytics.polling.importer.pageSize": {
                "name": "Page size",
                "description": "Maximum number of items to fetch in a single call to Analytics (50,000 maximum)",
                "type": "Long",
                "cardinality": "required",
                "default": 50000
            }
        }
    },
    {
        "id": "com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportManagementServiceImpl",
        "name": "AEM Communities Analytics Report Management",
        "description": "Description for com.adobe.cq.social.reporting.analytics.services.impl.AnalyticsReportManagementServiceImpl",
        "bundleName": "com.adobe.cq.social.cq-social-reporting-management",
        "attributes": {
            "report.fetch.delay": {
                "name": "Fetch delay",
                "description": "Number in seconds between attempts to fetch a queued report. Default is set to 1.",
                "type": "Long",
                "cardinality": "required",
                "default": 1
            }
        }
    },
    {
        "id": "com.adobe.cq.social.reporting.analytics.services.impl.SiteTrendReportSocialComponentFactory",
        "name": "Site Trend Report Social Component Factory",
        "description": "Description for com.adobe.cq.social.reporting.analytics.services.impl.SiteTrendReportSocialComponentFactory",
        "bundleName": "com.adobe.cq.social.cq-social-reporting-management",
        "attributes": {
            "cq.social.console.analytics.sites.mapping": {
                "name": "Site URL Mappings",
                "description": "Site URL Mappings, if mappings done on publish as well. For example /content/sites/community/en:/community",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            },
            "priority": {
                "name": "Property priority",
                "description": "Description for priority",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.cq.social.review.client.endpoints.impl.ReviewOperationsService",
        "name": "AEM Communities ReviewOperationProvider",
        "description": "This component serves the POST reviews",
        "bundleName": "com.adobe.cq.social.cq-social-review",
        "attributes": {
            "fieldAllowlist": {
                "name": "fieldAllowlist.name",
                "description": "fieldAllowlist.description",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "cq:tags",
                    "tags",
                    "composedFor"
                ]
            },
            "attachmentTypeBlocklist": {
                "name": "Restricted mime types for Attachments",
                "description": "Block list of attachment mime types that are unsafe.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "DEFAULT"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.scf.core.operations.impl.SocialOperationsServlet",
        "name": "AEM Communities OperationsServlet",
        "description": "This servlet returns the APIs that is supported by all social component endpoints",
        "bundleName": "com.adobe.cq.social.cq-social-scf-impl",
        "attributes": {
            "sling.servlet.selectors": {
                "name": "Property sling.servlet.selectors",
                "description": "Description for sling.servlet.selectors",
                "type": "String",
                "cardinality": "required",
                "default": "social"
            },
            "sling.servlet.extensions": {
                "name": "Property sling.servlet.extensions",
                "description": "Description for sling.servlet.extensions",
                "type": "String",
                "cardinality": "required",
                "default": "api"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.scf.endpoints.impl.DefaultSocialGetServlet",
        "name": "AEM Communities DefaultSocialGetServlet",
        "description": "This servlet serves the GET request for social components",
        "bundleName": "com.adobe.cq.social.cq-social-scf-impl",
        "attributes": {
            "sling.servlet.selectors": {
                "name": "Property sling.servlet.selectors",
                "description": "Description for sling.servlet.selectors",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "social",
                    "social.query",
                    "index",
                    "social.translate"
                ]
            },
            "sling.servlet.extensions": {
                "name": "Property sling.servlet.extensions",
                "description": "Description for sling.servlet.extensions",
                "type": "String",
                "cardinality": "required",
                "default": "json"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.scoring.impl.ScoringEventListener",
        "name": "AEM Communities Scoring Event Listener",
        "description": "An event listener for scoring",
        "bundleName": "com.adobe.cq.social.cq-social-scoring-impl",
        "attributes": {
            "event.topics": {
                "name": "Property event.topics",
                "description": "Description for event.topics",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/cq/social/*"
            },
            "event.filter": {
                "name": "Property event.filter",
                "description": "Description for event.filter",
                "type": "String",
                "cardinality": "required",
                "default": "(&(!(event.topics=com/adobe/cq/social/activitystreams/activity/ADDED))(!(event.topics=com/adobe/cq/social/notifications/notify))(!(event.topics=com/adobe/cq/social/scoring/ADDED)))"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.serviceusers.internal.impl.ServiceUserWrapperImpl",
        "name": "AEM Communities Service User Wrapper",
        "description": "Maintains API compatibility in use of service users.",
        "bundleName": "com.adobe.cq.social.cq-social-serviceusers-impl",
        "attributes": {
            "enableFallback": {
                "name": "enableFallback",
                "description": "Enables the fallback mechanism to allow use of loginAdministrative when necessary.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.social.site.endpoints.impl.SiteOperationService",
        "name": "AEM Communities SiteOperationProvider",
        "description": "This component provides Communities operations",
        "bundleName": "com.adobe.cq.social.cq-social-console",
        "attributes": {
            "fieldAllowlist": {
                "name": "fieldAllowlist.name",
                "description": "fieldAllowlist.description",
                "type": "String",
                "cardinality": 100
            },
            "sitePathFilters": {
                "name": "sitePathFilters.name",
                "description": "sitePathFilters.description",
                "type": "String",
                "cardinality": 100
            },
            "sitePackageGroup": {
                "name": "sitePackageGroup.name",
                "description": "sitePackageGroup.description",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.site.impl.AnalyticsComponentConfigurationServiceImpl",
        "name": "AEM Communities Analytics Component Configuration",
        "description": "Configure which SCF components get Analytics mappings when Analytics is enabled for a site.",
        "bundleName": "com.adobe.cq.social.cq-social-console",
        "attributes": {
            "cq.social.console.analytics.components": {
                "name": "Analytics instrumented components",
                "description": "A list of components that have been instrumented for Analytics",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "social/enablement/components/hbs/view/resource/detail/resourceplayer",
                    "social/forum/components/hbs/forum",
                    "social/forum/components/hbs/topic",
                    "social/qna/components/hbs/qnaforum",
                    "social/qna/components/hbs/topic",
                    "social/journal/components/hbs/journal",
                    "social/journal/components/hbs/entry_topic",
                    "social/commons/components/hbs/comments",
                    "social/commons/components/hbs/comments/comment",
                    "social/forum/components/hbs/post",
                    "social/journal/components/hbs/comment",
                    "social/qna/components/hbs/post",
                    "social/calendar/components/hbs/calendar",
                    "social/calendar/components/hbs/event",
                    "social/filelibrary/components/hbs/filelibrary",
                    "social/filelibrary/components/hbs/folder",
                    "social/filelibrary/components/hbs/document",
                    "social/ideation/components/hbs/ideation",
                    "social/ideation/components/hbs/idea"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.site.impl.SiteConfiguratorImpl",
        "name": "AEM Communities Site Configuration",
        "description": "Community Site Configuration to modify components list that will accept configuration from the site wizard",
        "bundleName": "com.adobe.cq.social.cq-social-console",
        "attributes": {
            "componentsUsingTags": {
                "name": "componentsUsingTags.name",
                "description": "componentsUsingTags.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "social/forum/components/hbs/forum",
                    "social/filelibrary/components/hbs/filelibrary",
                    "social/qna/components/hbs/qnaforum",
                    "social/journal/components/hbs/journal",
                    "social/calendar/components/hbs/calendar",
                    "social/ideation/components/hbs/ideation"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.srp.impl.SocialSolrConnector",
        "name": "AEM Communities Solr Indexer",
        "description": "AEM Communities Social Solr Indexer. Any social SRP implementation who wants to use Solr for indexing UGC should add an osgi config populated with it respective srp type in the property 'srp.type'",
        "bundleName": "com.adobe.cq.social.cq-social-srp-impl",
        "attributes": {
            "srp.type": {
                "name": "Social SRP type",
                "description": "Specify the type of social SRP",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.sync.impl.DiffChangesObserver",
        "name": "Adobe Social Sync - Diff Observer Factory",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-sync",
        "attributes": {
            "enabled": {
                "name": "enabled",
                "description": "enabled.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "agentName": {
                "name": "agent name",
                "description": "agentName.description",
                "type": "String",
                "cardinality": "required",
                "default": "socialpubsync-reverse"
            },
            "diffPath": {
                "name": "diff nodes path",
                "description": "diffPath.description",
                "type": "String",
                "cardinality": "required",
                "default": "/var/community/distribution/diff"
            },
            "propertyNames": {
                "name": "looked properties names",
                "description": "propertyNames.description",
                "type": "String",
                "cardinality": "required",
                "default": "rep:members"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.sync.impl.GroupSyncListenerImpl",
        "name": "AEM Communities Group Sync Listener",
        "description": "A listener that allows publisher groups to distribute across a farm of publishers ",
        "bundleName": "com.adobe.cq.social.cq-social-sync",
        "attributes": {
            "nodetypes": {
                "name": "Node Types",
                "description": "The node types to listen for.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "nt:unstructured",
                    "rep:ACL"
                ]
            },
            "ignorableprops": {
                "name": "Ignorable Properties",
                "description": "Properties that do not need to be distributed",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq:lastModified",
                    "rep:members",
                    "cq:lastModifiedBy"
                ]
            },
            "ignorablenodes": {
                "name": "Ignorable Nodes",
                "description": "Subpaths that do not need to be distributed. Anything under these nodes will be ignored",
                "type": "String",
                "cardinality": "required",
                "default": "rep:membersList"
            },
            "enabled": {
                "name": "enabled",
                "description": "enabled.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "distfolders": {
                "name": "Distributed Folders",
                "description": "Usually folders are not distributed. There are some exceptions. They are listed here.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.sync.impl.PublisherSyncServiceImpl",
        "name": "AEM Communities Publisher Sync Service",
        "description": "A service that assists with syncing nodes between publishers.",
        "bundleName": "com.adobe.cq.social.cq-social-sync",
        "attributes": {
            "activeRunModes": {
                "name": "Run modes",
                "description": "Run modes in which this service should be active.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "publish"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.sync.impl.UserSyncListenerImpl",
        "name": "AEM Communities User Sync Listener",
        "description": "A listener that allows publisher users to distribute across a farm of publishers ",
        "bundleName": "com.adobe.cq.social.cq-social-sync",
        "attributes": {
            "nodetypes": {
                "name": "Node Types",
                "description": "The node types to listen for.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "rep:User",
                    "nt:unstructured",
                    "nt:resource",
                    "rep:ACL"
                ]
            },
            "ignorableprops": {
                "name": "Ignorable Properties",
                "description": "Properties that do not need to be distributed",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq:lastModified"
                ]
            },
            "ignorablenodes": {
                "name": "Ignorable Nodes",
                "description": "Subpaths that do not need to be distributed. Anything under these nodes will be ignored",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    ".tokens",
                    "system",
                    "rep:cache"
                ]
            },
            "enabled": {
                "name": "enabled",
                "description": "enabled.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "distfolders": {
                "name": "Distributed Folders",
                "description": "Usually folders are not distributed. There are some exceptions. They are listed here.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "segments/scoring",
                    "social/relationships",
                    "activities"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.translation.impl.TranslationServiceConfigManager",
        "name": "AEM Communities Translation Configuration Manager",
        "description": "Description for com.adobe.cq.social.translation.impl.TranslationServiceConfigManager",
        "bundleName": "com.adobe.cq.social.cq-social-translation",
        "attributes": {
            "translate.language": {
                "name": "Enabled Languages",
                "description": "Description for translate.language",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "en",
                    "fr",
                    "de",
                    "ja",
                    "it",
                    "es"
                ],
                "options": [
                    {
                        "label": "Afrikaans",
                        "value": "af"
                    },
                    {
                        "label": "Arabic",
                        "value": "ar"
                    },
                    {
                        "label": "Bosnian (Latin)",
                        "value": "bs-Latn"
                    },
                    {
                        "label": "Bulgarian",
                        "value": "bg"
                    },
                    {
                        "label": "Catalan",
                        "value": "ca"
                    },
                    {
                        "label": "Chinese Simplified",
                        "value": "zh-CHS"
                    },
                    {
                        "label": "Chinese Traditional",
                        "value": "zh_CHT"
                    },
                    {
                        "label": "Croatian",
                        "value": "hr"
                    },
                    {
                        "label": "Czech",
                        "value": "cs"
                    },
                    {
                        "label": "Danish",
                        "value": "da"
                    },
                    {
                        "label": "Dutch",
                        "value": "nl"
                    },
                    {
                        "label": "English",
                        "value": "en"
                    },
                    {
                        "label": "Estonian",
                        "value": "et"
                    },
                    {
                        "label": "Finnish",
                        "value": "fi"
                    },
                    {
                        "label": "French",
                        "value": "fr"
                    },
                    {
                        "label": "German",
                        "value": "de"
                    },
                    {
                        "label": "Greek",
                        "value": "el"
                    },
                    {
                        "label": "Haitian Creole",
                        "value": "ht"
                    },
                    {
                        "label": "Hebrew",
                        "value": "he"
                    },
                    {
                        "label": "Hindi",
                        "value": "hi"
                    },
                    {
                        "label": "Hmong Daw",
                        "value": "mww"
                    },
                    {
                        "label": "Hungarian",
                        "value": "hu"
                    },
                    {
                        "label": "Indonesian",
                        "value": "id"
                    },
                    {
                        "label": "Italian",
                        "value": "it"
                    },
                    {
                        "label": "Japanese",
                        "value": "ja"
                    },
                    {
                        "label": "Kiswahili",
                        "value": "sw"
                    },
                    {
                        "label": "Klingon",
                        "value": "tlh"
                    },
                    {
                        "label": "Klingon (pIqaD)",
                        "value": "tlh-Qaak"
                    },
                    {
                        "label": "Korean",
                        "value": "ko"
                    },
                    {
                        "label": "Latvian",
                        "value": "lv"
                    },
                    {
                        "label": "Lithuanian",
                        "value": "lt"
                    },
                    {
                        "label": "Malay",
                        "value": "ms"
                    },
                    {
                        "label": "Maltese",
                        "value": "mt"
                    },
                    {
                        "label": "Norwegian",
                        "value": "no"
                    },
                    {
                        "label": "Persian",
                        "value": "fa"
                    },
                    {
                        "label": "Polish",
                        "value": "pl"
                    },
                    {
                        "label": "Portuguese",
                        "value": "pt"
                    },
                    {
                        "label": "Querétaro Otomi",
                        "value": "otq"
                    },
                    {
                        "label": "Romanian",
                        "value": "ro"
                    },
                    {
                        "label": "Russian",
                        "value": "ru"
                    },
                    {
                        "label": "Serbian (Cyrillic)",
                        "value": "sr-Cyrl"
                    },
                    {
                        "label": "Serbian (Latin)",
                        "value": "sr-Latn"
                    },
                    {
                        "label": "Slovak",
                        "value": "sk"
                    },
                    {
                        "label": "Slovenian",
                        "value": "sl"
                    },
                    {
                        "label": "Spanish",
                        "value": "es"
                    },
                    {
                        "label": "Swedish",
                        "value": "sv"
                    },
                    {
                        "label": "Thai",
                        "value": "th"
                    },
                    {
                        "label": "Turkish",
                        "value": "tr"
                    },
                    {
                        "label": "Ukrainian",
                        "value": "uk"
                    },
                    {
                        "label": "Urdu",
                        "value": "ur"
                    },
                    {
                        "label": "Vietnamese",
                        "value": "vi"
                    },
                    {
                        "label": "Yucatec Maya",
                        "value": "yua"
                    },
                    {
                        "label": "Yue Chinese",
                        "value": "yue"
                    }
                ]
            },
            "translate.display": {
                "name": "Select Display Options",
                "description": "Description for translate.display",
                "type": "String",
                "cardinality": "required",
                "default": "replace",
                "options": [
                    {
                        "label": "Replace source content with the target translation",
                        "value": "replace"
                    },
                    {
                        "label": "Show target translation side by side with source content",
                        "value": "side"
                    }
                ]
            },
            "translate.attribution": {
                "name": "Attribution",
                "description": "Append translation service provider attribution to translated result. Attribution text is editable in the Cloud Service configuration page.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "translate.caching": {
                "name": "Select Persistence Options",
                "description": "Description for translate.caching",
                "type": "String",
                "cardinality": "required",
                "default": "cache_when_call",
                "options": [
                    {
                        "label": "Translate contributions on user request and persist afterwards",
                        "value": "cache_when_call"
                    },
                    {
                        "label": "Don't persist translations.",
                        "value": "no_caching"
                    },
                    {
                        "label": "Automatically translate new contributions and persist the new translations",
                        "value": "cache_when_post"
                    }
                ]
            },
            "translate.smart.rendering": {
                "name": "Smart Rendering",
                "description": "Description for translate.smart.rendering",
                "type": "String",
                "cardinality": "required",
                "default": "off",
                "options": [
                    {
                        "label": "Always show contributions in the original language",
                        "value": "off"
                    },
                    {
                        "label": "Always show contributions in user preferred language",
                        "value": "on"
                    },
                    {
                        "label": "Show contributions in user preferred language for only logged-in users",
                        "value": "logged_in_user"
                    }
                ]
            },
            "translate.caching.duration": {
                "name": "Set Machine Translation Refresh Interval",
                "description": "Refresh translation after designated interval (number of months). Enter 0 to disable this feature.",
                "type": "String",
                "cardinality": "required",
                "default": "0"
            },
            "translate.session.save.interval": {
                "name": "Set Machine Translation session save interval",
                "description": "Force session save after designated interval (number of seconds). Enter 0 to disable batch writing",
                "type": "String",
                "cardinality": "required",
                "default": "2"
            },
            "translate.session.save.batchLimit": {
                "name": "Set Machine Translation Save Queue batching limit",
                "description": "If the session save interval is 0, then this value is irrelevant",
                "type": "String",
                "cardinality": "required",
                "default": "250"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.translation.impl.UGCLanguageDetector",
        "name": "AEM Communities UGC Language Detector",
        "description": "UGC Language Detector",
        "bundleName": "com.adobe.cq.social.cq-social-translation",
        "attributes": {
            "event.topics": {
                "name": "Property event.topics",
                "description": "Description for event.topics",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/cq/social/*"
            },
            "event.filter": {
                "name": "Property event.filter",
                "description": "Description for event.filter",
                "type": "String",
                "cardinality": "required",
                "default": "(path=/content/usergenerated/*)"
            },
            "translate.listener.type": {
                "name": "Resource and property types to listen for",
                "description": "Enter the sling:resourceType and primary property used to determine the language of the content (space delimited). Only one property per resource type.",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "social/commons/components/comments/comment jcr:description"
                ]
            },
            "translate.property.list": {
                "name": "Resource and property types to translate by default",
                "description": "Enter the sling:resourceType and property to translate (space delimited).",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "social/commons/components/comments/comment jcr:description",
                    "social/commons/components/comments/comment jcr:title"
                ]
            },
            "poolSize": {
                "name": "Property poolSize",
                "description": "Description for poolSize",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "maxPoolSize": {
                "name": "Property maxPoolSize",
                "description": "Description for maxPoolSize",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "queueSize": {
                "name": "Property queueSize",
                "description": "Description for queueSize",
                "type": "Integer",
                "cardinality": "required",
                "default": 50
            },
            "keepAliveTime": {
                "name": "Property keepAliveTime",
                "description": "Description for keepAliveTime",
                "type": "Long",
                "cardinality": "required",
                "default": 1
            }
        }
    },
    {
        "id": "com.adobe.cq.social.ugcbase.dispatcher.impl.FlushServiceImpl",
        "name": "AEM Communities Dispatcher Flush Service",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-ugcbase-impl",
        "attributes": {
            "threadPoolSize": {
                "name": "Delay Pool size",
                "description": "Number of workers in the delay flush threadpool",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "delayTime": {
                "name": "Flush Delay",
                "description": "Number of milliseconds to wait between sending flush requests to the dispatcher",
                "type": "Long",
                "cardinality": "required",
                "default": 10000
            },
            "workerSleepTime": {
                "name": "Worker Sleep Interval",
                "description": "Number of milliseconds for a worker thread to sleep when there is nothing to do",
                "type": "Long",
                "cardinality": "required",
                "default": 500
            }
        }
    },
    {
        "id": "com.adobe.cq.social.ugcbase.impl.AysncReverseReplicatorImpl",
        "name": "AEM Communities Reverse Replicator",
        "description": "This service reverse replicates comments asynchronously",
        "bundleName": "com.adobe.cq.social.cq-social-ugcbase-impl",
        "attributes": {
            "poolSize": {
                "name": "poolSize.name",
                "description": "poolSize.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "maxPoolSize": {
                "name": "maxPoolSize.name",
                "description": "maxPoolSize.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "queueSize": {
                "name": "queueSize.name",
                "description": "queueSize.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 50
            },
            "keepAliveTime": {
                "name": "keepAliveTime.name",
                "description": "keepAliveTime.description",
                "type": "Long",
                "cardinality": "required",
                "default": 1
            }
        }
    },
    {
        "id": "com.adobe.cq.social.ugcbase.impl.PublisherConfigurationImpl",
        "name": "AEM Communities Publisher Configuration",
        "description": "This service is used to configure a publisher instance for AEM Communities-specific tasks.",
        "bundleName": "com.adobe.cq.social.cq-social-ugcbase-impl",
        "attributes": {
            "isPrimaryPublisher": {
                "name": "Primary Publisher",
                "description": "Specifies whether this a primary publisher. Certain AEM Communities tasks will be handled by the primary publisher only.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.social.ugcbase.impl.SocialUtilsImpl",
        "name": "AEM Communities Utilities",
        "description": "This service provides utilities used by Communities",
        "bundleName": "com.adobe.cq.social.cq-social-ugcbase-impl",
        "attributes": {
            "legacyCloudUGCPathMapping": {
                "name": "Cloud Storage Full Path UGC",
                "description": "Use full path in Cloud Storage UGC path generation. Truncated to page if false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.social.ugcbase.moderation.impl.AutoModerationImpl",
        "name": "AEM Communities Auto Moderation",
        "description": "This is used to register the services that will be called at the time User Generated Content is contributed, such as spam detection or sentiment analysis",
        "bundleName": "com.adobe.cq.social.cq-social-ugcbase-impl",
        "attributes": {
            "automoderation.sequence": {
                "name": "UGC Processing Filter",
                "description": "Name of the process processing user generated content upon submission",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "SentimentProcess"
                ]
            },
            "automoderation.onfailurestop": {
                "name": "Stop on failure",
                "description": "Stop execution when a failure is encountered.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.social.ugcbase.moderation.impl.SentimentProcess",
        "name": "AEM Communities Sentiment Process",
        "description": "Configuration for the watchwords for pre-moderation of UGC",
        "bundleName": "com.adobe.cq.social.cq-social-ugcbase-impl",
        "attributes": {
            "watchwords.positive": {
                "name": "Positive Watchwords",
                "description": "A comma separated list of words contributing to a positive sentiment that override the defaults.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "watchwords.negative": {
                "name": "Negative Watchwords",
                "description": "A comma separated list of words contributing to a negative sentiment that override the defaults.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "watchwords.path": {
                "name": "Explicit path to Watchwords node",
                "description": "The location of a node containing default 'positive' and 'negative' properties specifying watchwords.",
                "type": "String",
                "cardinality": "required",
                "hint": "path"
            },
            "sentiment.path": {
                "name": "Sentiment Rules",
                "description": "The location of the rules for calculating sentiment based on positive and negative watchwords.",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/cq/workflow/components/workflow/social/sentiments/rules",
                "hint": "path"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.ugcbase.security.impl.DefaultAttachmentTypeBlacklistService",
        "name": "AEM Communities DefaultAttachmentTypeBlacklistService",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-ugcbase-impl",
        "attributes": {
            "default.attachment.type.blacklist": {
                "name": "Default Attachment Type Blacklist",
                "description": "These file types will be rejected from upload to any AEM Social component whose blacklist is configured to \"DEFAULT\". Also rejected will be any listed on the baseline attachment type blacklist.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    ".ade",
                    ".adp",
                    ".app",
                    ".asa",
                    ".asp",
                    ".bas",
                    ".bat",
                    ".cer",
                    ".chm",
                    ".cmd",
                    ".com",
                    ".cpl",
                    ".crt",
                    ".csh",
                    ".dll",
                    ".exe",
                    ".fxp",
                    ".hlp",
                    ".hta",
                    ".htm",
                    ".html",
                    ".htr",
                    ".inf",
                    ".ins",
                    ".isp",
                    ".its",
                    ".js",
                    ".jse",
                    ".ksh",
                    ".lnk",
                    ".mad",
                    ".maf",
                    ".mag",
                    ".mam",
                    ".maq",
                    ".mar",
                    ".mas",
                    ".mat",
                    ".mau",
                    ".mav",
                    ".maw",
                    ".mda",
                    ".mdb",
                    ".mde",
                    ".mdt",
                    ".mdw",
                    ".mdz",
                    ".mht",
                    ".mhtm",
                    ".mhtml",
                    ".msc",
                    ".msi",
                    ".msp",
                    ".mst",
                    ".ocx",
                    ".ops",
                    ".pcd",
                    ".pif",
                    ".prf",
                    ".prg",
                    ".reg",
                    ".scf",
                    ".scr",
                    ".sct",
                    ".shb",
                    ".shs",
                    ".tmp",
                    ".url",
                    ".vb",
                    ".vbe",
                    ".vbs",
                    ".vbx",
                    ".vsmacros",
                    ".vss",
                    ".vst",
                    ".vsw",
                    ".ws",
                    ".wsc",
                    ".wsf",
                    ".wsh",
                    ".xsl"
                ]
            },
            "baseline.attachment.type.blacklist": {
                "name": "Baseline Attachment Type Blacklist",
                "description": "These file types will be rejected from upload to any AEM Social component whether configured to use its own blacklist, or to use the DEFAULT. To restore original configuration move these entries to the Default Attachment Type Blacklist and make this list empty.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    ".php",
                    ".shtml",
                    ".svg",
                    ".swf",
                    ".xml",
                    ".xaml"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.ugcbase.security.impl.SaferSlingPostValidatorImpl",
        "name": "AEM Communities SaferSlingPostValidator",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-ugcbase-impl",
        "attributes": {
            "parameter.whitelist": {
                "name": "Parameter Whitelist",
                "description": "Parameter names to be allowed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcr:description",
                    "jcr:title",
                    "jcr:lastModified",
                    "jcr:primaryType",
                    "jcr:mixinTypes",
                    "sling:resourceType",
                    "sling:resourceSuperType",
                    "cq:tags"
                ]
            },
            "parameter.whitelist.prefixes": {
                "name": "Parameter Prefix Whitelist",
                "description": "Parameter name prefixes to be allowed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "social:",
                    "scf:"
                ]
            },
            "binary.parameter.whitelist": {
                "name": "Binary Parameter Whitelist",
                "description": "Parameter names allowed to carry binary data.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "modifier.whitelist": {
                "name": "Sling @Modifier Whitelist",
                "description": "Sling uses suffixed parameter names to control processing. Only suffixes defined here will be allowed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "@TypeHint",
                    "@DefaultValue",
                    "@UseDefaultWhenMissing",
                    "@IgnoreBlanks",
                    "@ValueFrom",
                    "@Delete",
                    "@Patch"
                ]
            },
            "operation.whitelist": {
                "name": "Sling Operation Whitelist",
                "description": "Allowed values of the :operation parameter. In addition to this list an empty or missing value is allowed as well.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "delete",
                    "nop"
                ]
            },
            "operation.whitelist.prefixes": {
                "name": "Sling Operation Prefix Whitelist",
                "description": "Operations values starting with these prefixes will be allowed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "social:"
                ]
            },
            "typehint.whitelist": {
                "name": "@TypeHint Whitelist",
                "description": "Sling uses @TypeHint parameter name suffixes to control the JCR type of created items. Only the type values defined here will be allowed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq:CalendarEvent",
                    "nt:unstructured",
                    "nt:folder",
                    "nt:file",
                    "nt:resource",
                    "sling:Folder",
                    "sling:OrderedFolder",
                    "Binary",
                    "Boolean",
                    "Date",
                    "Double",
                    "Long",
                    "Name",
                    "Path",
                    "String"
                ]
            },
            "resourcetype.whitelist": {
                "name": "ResourceType Whitelist",
                "description": "Allowed values for sling:resourceType and sling:resourceSuperType properties.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "social/calendar/components/event"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.social.user.endpoints.impl.UsersGroupFromPublishServlet",
        "name": "TunnelUsersFetchServlet",
        "description": "This servlet is used to fetch users/groups from Publish using Tunnel Service.",
        "bundleName": "com.adobe.cq.social.cq-social-console",
        "attributes": {
            "sling.servlet.extensions": {
                "name": "sling.servlet.extensions.name",
                "description": "sling.servlet.extensions.description",
                "type": "String",
                "cardinality": "required",
                "default": "html"
            },
            "sling.servlet.paths": {
                "name": "sling.servlet.paths.name",
                "description": "sling.servlet.paths.description",
                "type": "String",
                "cardinality": "required",
                "default": "social/authorizable/fetchServlet"
            },
            "sling.servlet.methods": {
                "name": "sling.servlet.methods.name",
                "description": "sling.servlet.methods.description",
                "type": "String",
                "cardinality": "required",
                "default": "GET"
            }
        }
    },
    {
        "id": "com.adobe.cq.social.user.impl.transport.HttpToPublisher",
        "name": "AEM Communities Publish Tunnel Service",
        "description": "Service for performing Publish operations from an Author instance",
        "bundleName": "com.adobe.cq.social.cq-social-console",
        "attributes": {
            "enable": {
                "name": "enable",
                "description": "Enable/Disable this service",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "agent.configuration": {
                "name": "Replication Agent Config",
                "description": "The location of a replication agent's configuration containing the Publish login info",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/etc/replication/agents.author/publish"
                ],
                "hint": "path"
            },
            "context.path": {
                "name": "context path",
                "description": "The HTTP context path at the publish instance(s) if not the default \"/\"",
                "type": "String",
                "cardinality": "required"
            },
            "disabled.cipher.suites": {
                "name": "Disabled cipher suites",
                "description": "List of cipher suites that should be explicitly disabled. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "enabled.cipher.suites": {
                "name": "Enabled cipher suites",
                "description": "List of cipher suites that should be explicitly enabled. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.ui.wcm.commons.internal.servlets.rte.RTEFilterServletFactory.amended",
        "name": "RTE Filter Servlet Amendment",
        "description": "An amendment configuration for the RTE filter servlet.",
        "bundleName": "com.adobe.cq.com.adobe.cq.ui.commons",
        "attributes": {
            "resource.types": {
                "name": "Resource types",
                "description": "List of RTE based resource types for which XSS filter should be enabled.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.upgrades.cleanup.impl.UpgradeContentCleanup",
        "name": "Content Cleanup Component",
        "description": "Deletes content while upgrading, during repository initialization before the package manager starts",
        "bundleName": "com.adobe.cq.cq-pre-upgrade-cleanup",
        "attributes": {
            "delete.path.regexps": {
                "name": "Snapshot path regular expressions",
                "description": "Regular expressions that define which paths are allowed to be deleted",
                "type": "String",
                "cardinality": "unlimited"
            },
            "delete.sql2.query": {
                "name": "Delete selection query",
                "description": "SQL2 query that selects candidates for deletion",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.cq.upgrades.cleanup.impl.UpgradeInstallFolderCleanup",
        "name": "Install Folder Cleanup Component",
        "description": "Deletes install folders while upgrading, during repository initialization before the package manager starts",
        "bundleName": "com.adobe.cq.cq-pre-upgrade-cleanup",
        "attributes": {
            "delete.name.regexps": {
                "name": "Snapshot path regular expressions",
                "description": "Regular expressions that define which paths are allowed to be deleted",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.core.components.commons.forms.impl.CoreFormsHandlingServlet",
        "name": "Core Form Handling Servlet",
        "description": "Accepts posting to a form container component and performs validations",
        "bundleName": "com.adobe.cq.core.wcm.components.core",
        "attributes": {
            "name.whitelist": {
                "name": "Parameter Name Whitelist",
                "description": "List of name expressions that will pass request validation. A validation error will occur if any posted parameters are not in the whitelist and not defined on the form.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "allow.expressions": {
                "name": "Allow Expressoins",
                "description": "Evaluate expressions on form submissions.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.core.components.internal.servlets.AdaptiveImageServletMappingConfigurationFactory",
        "name": "AEM Core WCM Components Adaptive Image Servlet Mapping Configuration",
        "description": "Configuration for the adaptive image servlet mapping.",
        "bundleName": "com.adobe.cq.core.wcm.components.core",
        "attributes": {
            "resource.types": {
                "name": "Resource types",
                "description": "List of resource types for which the adaptive image servlet should be enabled.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "selectors": {
                "name": "Selectors",
                "description": "List of selectors for which the adaptive image servlet should be enabled.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "extensions": {
                "name": "File extensions",
                "description": "List of file extensions for which the adaptive image servlet should be enabled.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "defaultResizeWidth": {
                "name": "Default resize width",
                "description": "In case the requested image contains no width information in the request and the image also doesn't have a content policy that defines the allowed rendition widths, then the image processed by this server will be resized to this configured width, for images whose width is larger than this value.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1280
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.jobs.async.impl.AsyncDeleteConfigProviderService",
        "name": "Async Delete Operation Job Processing Configuration",
        "description": "Configurations related to the async delete operation processing.",
        "bundleName": "com.adobe.cq.wcm.com.adobe.cq.wcm.jobs.async",
        "attributes": {
            "threshold": {
                "name": "Threshold number of assets/references",
                "description": "Minimum number of assets/references required for asynchronous  job processing. If the number of assets is less than threshold, then synchronous processing will be done.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "jobTopicName": {
                "name": "Job Topic name for the operation",
                "description": "The topic name on which the operation of type will be published and subsequently processed by the job executor.",
                "type": "String",
                "cardinality": "required",
                "default": "async/delete"
            },
            "emailEnabled": {
                "name": "Enable email notification",
                "description": "Enable or Disable the email notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "inboxNotificationEnabled": {
                "name": "Enable inbox notification",
                "description": "Enable or Disable the inbox notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.jobs.async.impl.AsyncDeleteJobExecutor",
        "name": "Async Delete Operation Executor Configuration",
        "description": "Configurations related to the async Delete operation execution.",
        "bundleName": "com.adobe.cq.wcm.com.adobe.cq.wcm.jobs.async",
        "attributes": {
            "batchSize": {
                "name": "Number of assets delete in a single batch",
                "description": "The number of assets which should be deleted in single repository transaction. -1 indicates all assets will be delete in single transaction.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.jobs.async.impl.AsyncMoveConfigProviderService",
        "name": "Async Move Operation Job Processing Configuration",
        "description": "Configurations related to the async move operation processing.",
        "bundleName": "com.adobe.cq.wcm.com.adobe.cq.wcm.jobs.async",
        "attributes": {
            "threshold": {
                "name": "Threshold number of assets/references",
                "description": "Minimum number of asset/references required to process move operation asynchronously.",
                "type": "Integer",
                "cardinality": "required",
                "default": 150
            },
            "jobTopicName": {
                "name": "Job Topic name for the operation",
                "description": "The topic name on which the operation of type will be published and subsequently processed by the job executor.",
                "type": "String",
                "cardinality": "required",
                "default": "async/move"
            },
            "emailEnabled": {
                "name": "Enable email notification",
                "description": "Enable or Disable the email notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "inboxNotificationEnabled": {
                "name": "Enable inbox notification",
                "description": "Enable or Disable the inbox notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.jobs.async.impl.AsyncMoveJobExecutor",
        "name": "Async Asset Move Operation Executor Configuration",
        "description": "Configurations related to the async asset move operation execution.",
        "bundleName": "com.adobe.cq.wcm.com.adobe.cq.wcm.jobs.async",
        "attributes": {
            "batchSize": {
                "name": "Number of assets moved in a single batch",
                "description": "The number of assets which should be moved in single repository transaction. -1 indicates all assets will be moved in single transaction.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.jobs.async.impl.AsyncPageMoveConfigProviderService",
        "name": "Async Page Move Operation Job Processing Configuration",
        "description": "Configurations related to the async Page move operation processing.",
        "bundleName": "com.adobe.cq.wcm.com.adobe.cq.wcm.jobs.async",
        "attributes": {
            "jobTopicName": {
                "name": "Job Topic name for the operation",
                "description": "The topic name on which the operation of type will be published and subsequently processed by the job executor.",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/cq/wcm/jobs/async/pagemove"
            },
            "emailEnabled": {
                "name": "Enable email notification",
                "description": "Enable or Disable the email notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "inboxNotificationEnabled": {
                "name": "Enable inbox notification",
                "description": "Enable or Disable the inbox notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "referenceAdjustBatchSize": {
                "name": "Reference adjustment batch size",
                "description": "The size of batches in which the references will be adjusted, 0 would mean all references will be adjusted in a single commit/batch, default value set to 100",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "adjustReferenceRetryCount": {
                "name": "Failed References Max Retry Count",
                "description": "The number of times the reference will be retried for adjustment, when set to 0, the references will be tried only once for adjustment. Maximum retries can be 10.",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "failJobOnRefAdjustFailure": {
                "name": "Fail the job when some references could not be adjusted",
                "description": "When there are some reference that could not be adjusted the job will be marked failed when this flag is set to true. Setting false will ignore the reference adjustment failure",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.jobs.async.impl.AsyncRolloutConfigProviderService",
        "name": "Async MSM Rollout Operation Job Processing Configuration",
        "description": "Configurations related to the async rollout operation processing.",
        "bundleName": "com.adobe.cq.wcm.com.adobe.cq.wcm.jobs.async",
        "attributes": {
            "jobTopicName": {
                "name": "Job Topic name for the operation",
                "description": "The topic name on which the operation of type will be published and subsequently processed by the job executor.",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/cq/wcm/jobs/async/rollout"
            },
            "emailEnabled": {
                "name": "Enable email notification",
                "description": "Enable or Disable the email notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "inboxNotificationEnabled": {
                "name": "Enable inbox notification",
                "description": "Enable or Disable the inbox notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.launches.impl.LaunchesEventHandler",
        "name": "Adobe CQ Launches Event Handler",
        "description": "An event handler specific to CQ Launches",
        "bundleName": "com.adobe.cq.wcm.cq-wcm-launches-core",
        "attributes": {
            "event.filter": {
                "name": "event.filter.name",
                "description": "event.filter.description",
                "type": "String",
                "cardinality": "required",
                "default": "(!(event.application=*))"
            },
            "launches.eventhandler.threadpool.maxsize": {
                "name": "Background Thread Pool Size",
                "description": "The maximal amount of threads handling events in parallel",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "launches.eventhandler.threadpool.priority": {
                "name": "Background Thread Priority",
                "description": "The priority of the background thread to handle events",
                "type": "String",
                "cardinality": "required",
                "default": "MIN",
                "options": [
                    {
                        "label": "Normal",
                        "value": "NORM"
                    },
                    {
                        "label": "Maximal",
                        "value": "MAX"
                    },
                    {
                        "label": "Minimal",
                        "value": "MIN"
                    }
                ]
            },
            "launches.eventhandler.updatelastmodification": {
                "name": "Update last modification",
                "description": "Update last modification of the launch when one of the launch page is modified",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.mobile.qrcode.servlet.QRCodeImageGenerator",
        "name": "AEM WCM QR-Code Generator Servlet",
        "description": "Description for com.adobe.cq.wcm.mobile.qrcode.servlet.QRCodeImageGenerator",
        "bundleName": "com.day.cq.wcm.cq-wcm-mobile-qrcode",
        "attributes": {
            "cq.wcm.qrcode.servlet.whitelist": {
                "name": "Whitelist URL",
                "description": "List of regular expressions (regex) indicating which URLs are allowed for the creation of QR Codes images. The Author and Publish servers, based on the Externalizer service, are automatically whitelisted.",
                "type": "String",
                "cardinality": 1,
                "default": [
                    "(https://build.phonegap.com/.*)"
                ]
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.style.internal.ComponentStyleInfoCacheImpl",
        "name": "ComponentStyleInfo Cache Configuration",
        "description": "The configuration for the ComponentStyleInfo cache service",
        "bundleName": "com.adobe.cq.com.adobe.cq.wcm.style",
        "attributes": {
            "size": {
                "name": "Cache entry size",
                "description": "Maximum object entries of the cache",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            }
        }
    },
    {
        "id": "com.adobe.cq.wcm.translation.impl.TranslationPlatformConfigurationImpl",
        "name": "Translation Platform Configuration",
        "description": "Configures Translation Platform",
        "bundleName": "com.day.cq.wcm.cq-wcm-translation",
        "attributes": {
            "syncTranslationState.schedulingFormat": {
                "name": "Scheduler Cron",
                "description": "Please specify cron format for changing the scheduling",
                "type": "String",
                "cardinality": "required",
                "default": "0 0 1 1/1 * ? *"
            },
            "schedulingRepeatTranslation.schedulingFormat": {
                "name": "Scheduler Repeat Translation Cron",
                "description": "Please specify cron format for changing the scheduling for repeat translation",
                "type": "String",
                "cardinality": "required",
                "default": "0 0 0/1 1/1 * ? *"
            },
            "syncTranslationState.lockTimeoutInMinutes": {
                "name": "Sync lock timeout",
                "description": "Please specify value in minutes after which translation sync lock will timeout.",
                "type": "String",
                "cardinality": "required",
                "default": "1440"
            },
            "export.format": {
                "name": "Export Format",
                "description": "Please specify the format for exporting translation jobs",
                "type": "String",
                "cardinality": "required",
                "default": "xml",
                "options": [
                    {
                        "label": "XML",
                        "value": "xml"
                    },
                    {
                        "label": "JSON",
                        "value": "json"
                    },
                    {
                        "label": "XLIFF 1.2",
                        "value": "xliff_1.2"
                    },
                    {
                        "label": "XLIFF 2.0",
                        "value": "xliff_2.0"
                    }
                ]
            }
        }
    },
    {
        "id": "com.adobe.fd.fp.config.FormsPortalDraftsandSubmissionConfigService",
        "name": "Forms Portal Draft and Submission Configuration",
        "description": "Forms Portal Draft and Submission Configuration",
        "bundleName": "com.adobe.livecycle.formsportal-bundle",
        "attributes": {
            "portal.outboxes": {
                "name": "Outboxes to be used for Reverse Replication in Forms Portal",
                "description": "To configure outboxes for Forms Portal Draft Save and Submit Options",
                "type": "String",
                "cardinality": 2000,
                "default": [
                    "outbox"
                ]
            },
            "draft.data.service": {
                "name": "Forms Portal Draft Data Service",
                "description": "Identifier for draft data service",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.fd.fp.service.impl.DraftDataServiceImpl"
            },
            "draft.metadata.service": {
                "name": "Forms Portal Draft Metadata Service",
                "description": "Identifier for draft metadata service",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.fd.fp.service.impl.DraftMetadataServiceImpl"
            },
            "submit.data.service": {
                "name": "Forms Portal Submit Data Service",
                "description": "Identifier for submit data service",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.fd.fp.service.impl.SubmitDataServiceImpl"
            },
            "submit.metadata.service": {
                "name": "Forms Portal Submit Metadata Service",
                "description": "Identifier for submit metadata service",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.fd.fp.service.impl.SubmitMetadataServiceImpl"
            },
            "pendingSign.data.service": {
                "name": "Forms Portal Pending Sign Data Service",
                "description": "Identifier for pending sign data service",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.fd.fpaddon.service.impl.PendingSignDataServiceImpl"
            },
            "pendingSign.metadata.service": {
                "name": "Forms Portal Pending Sign Metadata Service",
                "description": "Identifier for pending sign metadata service",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.fd.fpaddon.service.impl.PendingSignMetadataServiceImpl"
            }
        }
    },
    {
        "id": "com.adobe.fd.fp.config.FormsPortalSchedulerService",
        "name": "Forms Portal Clean Up Configuration Service",
        "description": "Settings for the clean up thread",
        "bundleName": "com.adobe.livecycle.formsportal-bundle",
        "attributes": {
            "formportal.interval": {
                "name": "Interval(in hours)",
                "description": "Interval in which clean up thread should trigger",
                "type": "String",
                "cardinality": "required",
                "default": "12"
            }
        }
    },
    {
        "id": "com.adobe.forms.common.service.impl.DefaultDataProvider",
        "name": "Default Prefill Service Configuration",
        "description": "",
        "bundleName": "com.adobe.forms.common.adobe-xfaforms-common",
        "attributes": {
            "alloweddataFileLocations": {
                "name": "Data files locations",
                "description": "The list of paths allowed for prefill of Adaptive Forms. Paths can either be a string or a regex.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "crx://.*"
                ]
            }
        }
    },
    {
        "id": "com.adobe.forms.common.service.impl.FormsCommonConfigurationServiceImpl",
        "name": "Forms Common Configuration Service",
        "description": "",
        "bundleName": "com.adobe.forms.common.adobe-xfaforms-common",
        "attributes": {
            "tempStorageConfig": {
                "name": "Allow",
                "description": "Verify Step and File Preview functionality requires use of temporary storage for adaptive forms. It allows users of only specified type to use these features.",
                "type": "String",
                "cardinality": "required",
                "default": "loggedIn",
                "options": [
                    {
                        "label": "None - No user, anonymous or logged in, can preview attachments and use 'Verify Step' in forms.",
                        "value": "none"
                    },
                    {
                        "label": "Logged In users - Only logged in users can preview attachments and use 'Verify Step' in forms.",
                        "value": "loggedIn"
                    },
                    {
                        "label": "All users - All the users, anonymous or logged in, can preview attachments and use 'Verify Step' in forms.",
                        "value": "all"
                    }
                ]
            }
        }
    },
    {
        "id": "com.adobe.forms.common.servlet.TempCleanUpTask",
        "name": "AEM Forms Temporary Storage Cleaning Task",
        "description": "Cleans the temporary storage used by AEM Forms",
        "bundleName": "com.adobe.forms.common.adobe-xfaforms-common",
        "attributes": {
            "scheduler.expression": {
                "name": "Cron expression scheduling this job",
                "description": "Cron expression scheduling this job. Default is every hour. See http://www.docjar.com/docs/api/org/quartz/CronTrigger.html for a description of the format for this value",
                "type": "String",
                "cardinality": "required",
                "default": "0\\ 0\\ 12\\ *\\ *\\ ?"
            },
            "Duration for Temporary Storage": {
                "name": "Cleans the temporary folder older than(In Hours)",
                "description": "Service will delete temporary nodes that were created before the (duration_temp_storage) from the current time",
                "type": "String",
                "cardinality": "required",
                "default": "24"
            },
            "Duration for Anonymous Storage": {
                "name": "Cleans the anonymous temporary folder older than(In Hours)",
                "description": "Service will delete anonymous temporary nodes that were created before the (duration_temp_storage) from the current time",
                "type": "String",
                "cardinality": "required",
                "default": "1"
            }
        }
    },
    {
        "id": "com.adobe.granite.acp.platform.impl.PlatformConfigs",
        "name": "Adobe Granite ACP Platform Configs",
        "description": "Configuration for the Adobe Granite ACP Platform.",
        "bundleName": "com.adobe.granite.acp.platform",
        "attributes": {
            "change.locking.user.to.lower.case": {
                "name": "Change Locking User To Lower Case",
                "description": "Use this configuration to change the userid of the user who locks the asset to lower case while querying and fetching the asset metadata. (DO NOT CHANGE. Any change needed only in special cases.)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.acp.platform.PlatformServlet",
        "name": "Adobe Granite ACP Platform API",
        "description": "Configuration for the Adobe Granite ACP Platform API implementation.",
        "bundleName": "com.adobe.granite.acp.platform",
        "attributes": {
            "query.limit": {
                "name": "Query Limit",
                "description": "The maximum number of results that will be returned for any query. This includes queries for asset containing asearch string and for children of a directory.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10000
            },
            "file.type.extension.map": {
                "name": "File Type-Extension Mapping",
                "description": "Mappings that supplement the Apache Sling MIME Type Service to support filtering by file extension. The format for each entry is: <MIMEtype> <extension>, a MIME type followed by whitespace followed by an extension. Both MIME types and extensions may appear in multiple entries.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "application/x-adobe-indesign indt",
                    "application/vnd.adobe.indesign.template indt",
                    "application/x-indesign indt"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.activitystreams.impl.ActivityManagerImpl",
        "name": "Adobe Granite Activity Manager",
        "description": "Service responsible to collect and distribute activities and managing the activity streams.",
        "bundleName": "com.adobe.granite.activitystreams",
        "attributes": {
            "aggregate.relationships": {
                "name": "Aggregate Relationships",
                "description": "Defines the relationship types to use for default aggregation.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "following",
                    "member"
                ]
            },
            "aggregate.descend.virtual": {
                "name": "Descend Virtual Nodes",
                "description": "Defines if aggregation should follow virtual graph nodes.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.cert.impl.ClientCertAuthHandler",
        "name": "Adobe Granite Client Certificate Authentication Handler",
        "description": "Authentication Handler supporting single sign-on based on client certificate. This handler extracts client certificate from request and extracts subject's dn (distinguished name) from certificate. If mapping between dn and user ID is found, the request is authenticated with that user ID.",
        "bundleName": "com.adobe.granite.auth.cert",
        "attributes": {
            "path": {
                "name": "path.name",
                "description": "path.description",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "service.ranking": {
                "name": "Service Ranking",
                "description": "OSGi Framework Service Ranking value to indicate the order in which to call this service. This is an int value where higher values designate higher precedence. Default value is 0.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.ims.impl.ExternalUserIdMappingProviderExtension",
        "name": "Adobe Granite OAuth IMS External ID Mapping Provider Extension",
        "description": "This Provider Extension maps IMS User with their Oak external ID",
        "bundleName": "com.adobe.granite.auth.ims",
        "attributes": {
            "oauth.provider.id": {
                "name": "Provider ID",
                "description": "Assign a unique Provider ID",
                "type": "String",
                "cardinality": "required",
                "default": "ims"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.ims.impl.IMSAccessTokenRequestCustomizerImpl",
        "name": "Adobe Granite OAuth IMS Request Customizer",
        "description": "Access token request customizer for customizing the access token requests for Adobe IMS.",
        "bundleName": "com.adobe.granite.auth.ims",
        "attributes": {
            "auth.ims.client.secret": {
                "name": "Client Secret",
                "description": "Adobe IMS requires a valid client secret to be sent in the access token request.",
                "type": "Password",
                "cardinality": "required"
            },
            "customizer.type": {
                "name": "Request Customizer Type",
                "description": "This name should uniquely identify the request customizer type.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.ims.impl.ImsConfigProviderImpl",
        "name": "Adobe Granite OAuth IMS Configuration Provider",
        "description": "Provides a configuration aggregating the IMSProvider config. and OAuth config. for the configured configid.",
        "bundleName": "com.adobe.granite.auth.ims",
        "attributes": {
            "oauth.configmanager.ims.configid": {
                "name": "OAuth configuration ID",
                "description": "Identifier that must match a configured oauth.config.id.",
                "type": "String",
                "cardinality": "required",
                "default": "ims"
            },
            "ims.owningEntity": {
                "name": "IMS Owning Entity",
                "description": "IMS Organization Identifier",
                "type": "String",
                "cardinality": "required"
            },
            "aem.instanceId": {
                "name": "Instance Id",
                "description": "AEM instance unique identifier",
                "type": "String",
                "cardinality": "required"
            },
            "ims.serviceCode": {
                "name": "Service Code",
                "description": "IMS Service Code",
                "type": "String",
                "cardinality": "required",
                "default": "dma_aem_ams"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.ims.impl.IMSInstanceCredentialsValidator",
        "name": "Adobe Granite OAuth IMS Instance Credentials Validator",
        "description": "Validates that users have access to the instance",
        "bundleName": "com.adobe.granite.auth.ims",
        "attributes": {
            "oauth.provider.id": {
                "name": "Provider ID",
                "description": "Assign a unique Provider ID",
                "type": "String",
                "cardinality": "required",
                "default": "ims"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.ims.impl.IMSProviderImpl",
        "name": "Adobe Granite OAuth IMS Provider",
        "description": "Default IMS OAuth Provider",
        "bundleName": "com.adobe.granite.auth.ims",
        "attributes": {
            "oauth.provider.id": {
                "name": "Provider ID",
                "description": "Assign a unique Provider ID",
                "type": "String",
                "cardinality": "required",
                "default": "ims"
            },
            "oauth.provider.ims.authorization.url": {
                "name": "Authorization Endpoint",
                "description": "The URL of the IMS Authorization Endpoint",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.provider.ims.token.url": {
                "name": "Token Endpoint",
                "description": "The URL of the IMS Token Endpoint",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.provider.ims.profile.url": {
                "name": "Profile Endpoint",
                "description": "The URL of the IMS Profile Endpoint",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.provider.ims.extended.details.urls": {
                "name": "Extended Details URLs",
                "description": "The list of URLs used to fetch additional data",
                "type": "String",
                "cardinality": "unlimited"
            },
            "oauth.provider.ims.validate.token.url": {
                "name": "Validation URL",
                "description": "The URL of the IMS API - validate token (e.g. <ENV>/ims/validate_token/v1)",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.provider.ims.session.property": {
                "name": "Session Data Property",
                "description": "The name of the property that defines the session data url",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.provider.ims.service.token.client.id": {
                "name": "Service Token Client Id",
                "description": "The Service Token Client Id",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.provider.ims.service.token.client.secret": {
                "name": "Service Token Client Secret",
                "description": "The Service Token Client Secret",
                "type": "Password",
                "cardinality": "required"
            },
            "oauth.provider.ims.service.token": {
                "name": "Service Token",
                "description": "The Service Token",
                "type": "Password",
                "cardinality": "required"
            },
            "ims.org.ref": {
                "name": "Organization",
                "description": "IMS organization to sync from, in the form of <orgID> (with AdobeOrg as default auth source) or <orgID>@<authSrc> to specify the auth source as well. Optional, if not set will not sync groups.",
                "type": "String",
                "cardinality": "required"
            },
            "ims.group.mapping": {
                "name": "Group Mappings",
                "description": "Mappings of IMS groups to local groups. Each entry is one group mapping, with the form: '<groupName>:<groupRole>=<localGroupID>', for example: 'Administrators:GRP_ADMIN=my-administrators'. Wildcards (* = all chars, ? = single char) are supported, for example: '*:GRP_ADMIN=my-administrators'. Requires organization (ims.org_ref) to be set.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "oauth.provider.ims.only.license.group": {
                "name": "Sync Only License Group",
                "description": "Sync Only The Group Member of the License Group",
                "type": "Boolean",
                "cardinality": "required"
            },
            "oauth.provider.ims.logout": {
                "name": "Call IMS Logout",
                "description": "Call IMS Logout API on AEM Logout event",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.accesstoken.provider",
        "name": "Adobe Granite Access Token provider",
        "description": "Access Token provider",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "webconsole.configurationFactory.nameHint.name",
                "description": "webconsole.configurationFactory.nameHint.description",
                "type": "String",
                "cardinality": "required",
                "default": "AccessTokenProvider name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the AccessTokenProvider",
                "type": "String",
                "cardinality": "required"
            },
            "auth.token.provider.title": {
                "name": "Configuration title",
                "description": "Title used in configuration wizards",
                "type": "String",
                "cardinality": "required",
                "default": "Default"
            },
            "auth.token.provider.default.claims": {
                "name": "Default JWT Claims",
                "description": "Default JWT Claims in format: <claim-key>:<claim-value> (e.g. 'aud:\"service.audience.com\"'). Note: the string values must be provided in double quotes!",
                "type": "String",
                "cardinality": "unlimited"
            },
            "auth.token.provider.endpoint": {
                "name": "API endpoint",
                "description": "Authorization server API endpoint (e.g. gateway-api.omniture.com)",
                "type": "String",
                "cardinality": "required",
                "default": "gateway-api.omniture.com"
            },
            "auth.access.token.request": {
                "name": "Access Token Request URL",
                "description": "Format to build the access token request URL against the configured end point. The '%s' in the format is replaced by the end point.",
                "type": "String",
                "cardinality": "required",
                "default": "https://%s/token"
            },
            "auth.token.provider.keypair.alias": {
                "name": "KeyPair alias",
                "description": "Alias to get the key pair from the user KeyStore",
                "type": "String",
                "cardinality": "required",
                "default": "access-token-key-pair"
            },
            "auth.token.provider.conn.timeout": {
                "name": "Connection timeout",
                "description": "The timeout until a connection is established to the authorization server in milliseconds",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "auth.token.provider.so.timeout": {
                "name": "Socket timeout",
                "description": "The socket timeout which is the timeout for waiting for data from the authorization server in milliseconds",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "auth.token.provider.client.id": {
                "name": "Client Id",
                "description": "Client Identifier for the authorization server",
                "type": "String",
                "cardinality": "required",
                "default": "TestClient"
            },
            "auth.token.provider.scope": {
                "name": "Scope",
                "description": "The scope passed as request parameter to the authorization server",
                "type": "String",
                "cardinality": "required"
            },
            "auth.token.provider.reuse.access.token": {
                "name": "Cache access tokens",
                "description": "If checked, the provider caches the access tokens as long as they are valid (based on expiration claim) and only obtain a new access token from the authorization server when invalid.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "auth.token.provider.relaxed.ssl": {
                "name": "Enable Relaxed SSL",
                "description": "Enable Relaxed SSL (allow self signed certificates) for communication with a test authorization server. This configuration MUST BE DISABLED in production.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "token.request.customizer.type": {
                "name": "Name of token request customizer implementation",
                "description": "The name for referencing the token request customizer implementation to use. e.g. use 'default' to bind to services provided by the default implementation.",
                "type": "String",
                "cardinality": "required",
                "default": "default"
            },
            "auth.token.validator.type": {
                "name": "Token Validator Name",
                "description": "The name for referencing the token validator implementation to use. e.g. use 'default' to bind to services provided by the default implementation.",
                "type": "String",
                "cardinality": "required",
                "default": "default"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.impl.BearerAuthenticationHandler",
        "name": "Adobe Granite Bearer Authentication Handler",
        "description": "Authentication handler for the \"Bearer\" HTTP Authentication Scheme. This authentication handler implements a solution to validate a provided bearer token against an OAuth Provider.This authentication handler requires configuration to be active.",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "path": {
                "name": "Path",
                "description": "Repository path for which this authentication handler should be used by Sling. If this is empty, the authentication handler will be disabled. By default this is set to \"/\".",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "oauth.clientIds.allowed": {
                "name": "Allowed OAuth client ids",
                "description": "List of allowed OAuth client ids. If this is empty is not possible to authenticate using the Bearer Authentication Handler",
                "type": "String",
                "cardinality": "unlimited"
            },
            "auth.bearer.sync.ims": {
                "name": "Synchronize user with the Provider",
                "description": "If checked (default), then the crx user is synchronized with the Provider at each login",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "auth.tokenRequestParameter": {
                "name": "Access Token Request Parameter",
                "description": "The name of the request parameter property that is used if the authorization header is missing. If this property is empty, request parameter support is disabled (which is the default).",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.bearer.configid": {
                "name": "Configuration ID Request Parameter",
                "description": "The name of the request parameter property that is used for identifying the configuration.",
                "type": "String",
                "cardinality": "required",
                "default": "configid"
            },
            "oauth.jwt.support": {
                "name": "JWT validation support",
                "description": "Use JWT (JSON Web Token) standard for validation (if available)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.impl.DefaultTokenValidatorImpl",
        "name": "Default Token Validator",
        "description": "Default implementation of the token validator.",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "auth.token.validator.type": {
                "name": "Token Validator Name",
                "description": "The name for referencing the token validator implementation to use. e.g. use 'default' to bind to services provided by the default implementation.",
                "type": "String",
                "cardinality": "required",
                "default": "default"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.impl.FacebookProviderImpl",
        "name": "Adobe Granite OAuth Facebook Provider",
        "description": "Default Facebook OAuth Provider",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "oauth.provider.id": {
                "name": "Provider ID",
                "description": "Assign a unique Provider ID",
                "type": "String",
                "cardinality": "required",
                "default": "facebook"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.impl.GithubProviderImpl",
        "name": "Adobe Granite OAuth Github Provider",
        "description": "Default Github OAuth Provider",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "oauth.provider.id": {
                "name": "Provider ID",
                "description": "Assign a unique Provider ID",
                "type": "String",
                "cardinality": "required",
                "default": "github"
            },
            "oauth.provider.github.authorization.url": {
                "name": "Authorization Endpoint",
                "description": "The URL of the Github Authorization Endpoint",
                "type": "String",
                "cardinality": "required",
                "default": "https://github.com/login/oauth/authorize"
            },
            "oauth.provider.github.token.url": {
                "name": "Token Endpoint",
                "description": "The URL of the Github Token Endpoint",
                "type": "String",
                "cardinality": "required",
                "default": "https://github.com/login/oauth/access_token"
            },
            "oauth.provider.github.profile.url": {
                "name": "Profile Endpoint",
                "description": "The URL of the Github Profile Endpoint",
                "type": "String",
                "cardinality": "required",
                "default": "https://api.github.com/user"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.impl.GraniteProvider",
        "name": "com.adobe.granite.auth.oauth.impl.GraniteProvider",
        "description": "",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "oauth.provider.id": {
                "name": "oauth.provider.id",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "granite"
            },
            "oauth.provider.granite.authorization.url": {
                "name": "oauth.provider.granite.authorization.url",
                "description": "",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.provider.granite.token.url": {
                "name": "oauth.provider.granite.token.url",
                "description": "",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.provider.granite.profile.url": {
                "name": "oauth.provider.granite.profile.url",
                "description": "",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.provider.granite.extended.details.urls": {
                "name": "oauth.provider.granite.extended.details.urls",
                "description": "",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.impl.helper.ProviderConfigManagerInternal",
        "name": "Adobe Granite ProviderConfigManager Service",
        "description": "Private service for managing Provider, OAuthHelper, and ProviderConfig caches.",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "oauth.cookie.login.timeout": {
                "name": "OAuth Cookie Max-Age Before Authorization",
                "description": "Max-Age for the encrypted cookie before authorization has completed; -1 indicates a session cookie (only valid for the current browser session).",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.cookie.max.age": {
                "name": "OAuth Cookie Max-Age After Authorization",
                "description": "Max-Age for the encrypted cookie after authorization has succeeded; -1 indicates a session cookie (only valid for the current browser session)",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.impl.OAuthAuthenticationHandler",
        "name": "Adobe Granite OAuth Authentication Handler",
        "description": "Authentication Handler for OAuth 1.0a and OAuth 2.0 (draft) providers. Currently only Twitter and Facebook are supported. In future versions of this Authentication Handler further providers will be supported. Note that this Authentication Handler is only enabled if configuration exists and the Path property is not set to an empty string.",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "path": {
                "name": "Path",
                "description": "Repository path for which this authentication handler should be used by Sling. If this is empty, the authentication handler will be disabled. By default this is set to \"/\".",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.impl.TwitterProviderImpl",
        "name": "Adobe Granite OAuth Twitter Provider",
        "description": "Default Twitter OAuth Provider",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "oauth.provider.id": {
                "name": "Provider ID",
                "description": "Assign a unique Provider ID",
                "type": "String",
                "cardinality": "required",
                "default": "twitter"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.oauth.provider",
        "name": "Adobe Granite OAuth Application and Provider",
        "description": "Configures the OAuth Provider Application setup such that the Authentication Handler can authenticate users with the provider.",
        "bundleName": "com.adobe.granite.auth.oauth",
        "attributes": {
            "oauth.config.id": {
                "name": "Config ID",
                "description": "OAuth Configuration IDs must be unique. This ID will be used to determine which config will be used for a particular oauth request with the \"configid\" request parameter.",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.client.id": {
                "name": "Client ID",
                "description": "Application Client ID provided by the OAuth Provider. For OAuth 1.0a this is called the Consumer Key. This is required for the Authentication Handler to authenticate with OAuth for a specific Provider.",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.client.secret": {
                "name": "Client Secret",
                "description": "Application Client Secret provided by the OAuth Provider. For OAuth 1.0a this is called the Consumer Secret. This is required for the Authentication Handler to authenticate with OAuth for a specific Provider.",
                "type": "Password",
                "cardinality": "required"
            },
            "oauth.scope": {
                "name": "Scope",
                "description": "Scope for the authorization request to hand over to the provider",
                "type": "String",
                "cardinality": "unlimited"
            },
            "oauth.config.provider.id": {
                "name": "Provider ID",
                "description": "Assign the Provider ID used to match a ProviderConfig to a Provider",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.create.users": {
                "name": "Create users",
                "description": "Whether to automatically create users if there is no matching CRX user for an OAuth authenticated users. By default this is not enabled. Handle with care.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "oauth.userid.property": {
                "name": "User ID Property",
                "description": "The name of the property containing the user ID to use when automatically creating users. If this is left empty or invalid, user IDs will be generated in the format <provider prefix>-<external user id>.",
                "type": "String",
                "cardinality": "required"
            },
            "force.strict.username.matching": {
                "name": "Force Strict Username Matching",
                "description": "If enabled a strict username matching is applied, so two users are considered to be the same only and only if they have the same mapped OAuth username (and not only the same OAuthId property). By default this is not enabled. Handle with care.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "oauth.encode.userids": {
                "name": "Encode UserIds",
                "description": "Base.encode64 generated user ids for created users.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "oauth.hash.userids": {
                "name": "Hash UserIds",
                "description": "SHA-256 generated user ids for created users.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "oauth.callBackUrl": {
                "name": "Callback URL",
                "description": "URL configured with the OAuth providers to redirect the client back. Use a relative url to use the host of the original request. Leave empty to use the originally requested URL instead. Suffix \"/callback/j_security_check\" is automatically appended to this url. Note: the domain for the callback must be registered at the provider side (e.g. Facebook or Twitter).",
                "type": "String",
                "cardinality": "required"
            },
            "oauth.access.token.persist": {
                "name": "Save access token",
                "description": "Whether to save Oauth access token in users profile. If enabled, the token will be stored in encrypted form in the property specified by Provider.getAccessTokenPropertyPath().",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "oauth.access.token.persist.cookie": {
                "name": "Save access token in the Cookies",
                "description": "Whether to save Oauth access token in the cookies. If enabled, the token will be stored in encrypted form in the cookies (with the cookie name being the client Id)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "oauth.csrf.state.protection": {
                "name": "Enable Cross-Site Request Forgery state protection",
                "description": "Enable the Cross-Site Request Forgery state protection as per http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-10.12",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "oauth.redirect.request.params": {
                "name": "Enable Persisting Request Params in Callback URL",
                "description": "Enabling Persisting of Original Request Parameters in the Callback URL formed during Authorization so that it can be used as a means to redirect the user to original resource on successful authentication",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "oauth.config.siblings.allow": {
                "name": "Enable siblings configurations support",
                "description": "Enabling siblings configurations support to allow other configurations for the Provider ID (oauth.config.provider.id) to be authenticated.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.requirement.impl.DefaultRequirementHandler",
        "name": "Adobe Granite Authentication Requirement and Login Path Handler",
        "description": "RequirementHandler implementation that updates the Sling authentication requirements (and the corresponding exclusion for the associated (optional) login paths).",
        "bundleName": "com.day.cq.cq-authhandler",
        "attributes": {
            "supportedPaths": {
                "name": "Supported Paths",
                "description": "Paths under which authentication requirements will be respected by this handler. Leave this configuration unset if you want to add the 'granite:AuthenticationRequirement' mixin type to nodes without having them enforced (e.g. on author instances).",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.saml.SamlAuthenticationHandler",
        "name": "Adobe Granite SAML 2.0 Authentication Handler",
        "description": "Adobe Granite SAML 2.0 Authentication Handler",
        "bundleName": "com.adobe.granite.auth.saml",
        "attributes": {
            "path": {
                "name": "Path",
                "description": "Repository path for which this authentication handler should be used by Sling. If this is empty, the authentication handler will be disabled.",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "/"
                ]
            },
            "service.ranking": {
                "name": "Service Ranking",
                "description": "OSGi Framework Service Ranking value to indicate the order in which to call this service. This is an int value where higher values designate higher precedence. Default value is 0.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5002
            },
            "idpUrl": {
                "name": "IDP URL",
                "description": "URL of the IDP where the SAML Authentication Request should be sent to. If this property is empty the authentication handler is disabled.",
                "type": "String",
                "cardinality": "required"
            },
            "idpCertAlias": {
                "name": "IDP Certificate Alias",
                "description": "The alias of the IdP's certificate in the global truststore. If this property is empty the authentication handler is disabled.",
                "type": "String",
                "cardinality": "required"
            },
            "idpHttpRedirect": {
                "name": "IDP HTTP Redirect",
                "description": "Use an HTTP Redirect to the IDP URL instead of sending an AuthnRequest-message to request credentials. Use this for IDP initiated authentication.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "serviceProviderEntityId": {
                "name": "Service Provider Entity ID",
                "description": "ID which uniquely identifies this service provider with the identity provider. If this property is empty the authentication handler is disabled.",
                "type": "String",
                "cardinality": "required"
            },
            "assertionConsumerServiceURL": {
                "name": "Assertion Consumer Service URL",
                "description": "The (optional) AssertionConsumerServiceURL attribute of an Authn request specifies the location to which a <Response> message MUST be sent to the requester.",
                "type": "String",
                "cardinality": "required"
            },
            "spPrivateKeyAlias": {
                "name": "SP Private Key Alias",
                "description": "The alias of the SP's private key in the key-store of the 'authentication-service' system user. If this property is empty the handler will not be able to sign or decrypt messages.",
                "type": "String",
                "cardinality": "required"
            },
            "keyStorePassword": {
                "name": "Password of Key Store",
                "description": "The password of the key-store of the 'authentication-service' system user.",
                "type": "Password",
                "cardinality": "required"
            },
            "defaultRedirectUrl": {
                "name": "Default Redirect",
                "description": "The default location to redirect to after successful authentication.",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "userIDAttribute": {
                "name": "UserID Attribute",
                "description": "The name of the attribute containing the user ID used to authenticate and create the user in the CRX repository. Leave empty to use the Subject:NameId.",
                "type": "String",
                "cardinality": "required",
                "default": "uid"
            },
            "useEncryption": {
                "name": "Use Encryption",
                "description": "Whether or not this authentication handler expects encrypted SAML assertions. If this is enabled the SP's private key must be provided in the key-store of the 'authentication-service' system user (see SP Private Key Alias above).",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "createUser": {
                "name": "Autocreate CRX Users",
                "description": "Whether or not to autocreate nonexisting users in the repository.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "storeSAMLResponse": {
                "name": "Store SAML Response",
                "description": "Whether or not to store the samlResponse value on the user node. This is ignored and samlResponse is always stored if handleLogout is enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "userIntermediatePath": {
                "name": "Created User Intermediate Path",
                "description": "When creating new users, this value will be used as the intermediate path.",
                "type": "String",
                "cardinality": "required"
            },
            "addGroupMemberships": {
                "name": "Add to Groups",
                "description": "Whether or not a user should be automatically added to CRX groups after successful authentication.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "groupMembershipAttribute": {
                "name": "Group Membership",
                "description": "The name of the attribute containing a list of CRX groups this user should be added to.",
                "type": "String",
                "cardinality": "required",
                "default": "groupMembership"
            },
            "defaultGroups": {
                "name": "Default Groups",
                "description": "A list of default CRX groups users are added to after successful authentication.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "nameIdFormat": {
                "name": "NameIDPolicy Format",
                "description": "The value of the NameIDPolicy format parameter to send in the AuthnRequest message.",
                "type": "String",
                "cardinality": "required",
                "default": "urn:oasis:names:tc:SAML:2.0:nameid-format:transient"
            },
            "synchronizeAttributes": {
                "name": "Synchronized Attributes",
                "description": "A list of attribute mappings (in the format \"attributename=path/relative/to/user/node\") which should be stored in the repository on user-synchronization.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "handleLogout": {
                "name": "Handle Logout",
                "description": "Whether or not logout (dropCredentials) requests will be processed by this handler.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "logoutUrl": {
                "name": "Logout URL",
                "description": "URL of the IDP where the SAML Logout Request should be sent to. If this property is empty the authentication handler won't handle logouts.",
                "type": "String",
                "cardinality": "required"
            },
            "clockTolerance": {
                "name": "Clock Tolerance",
                "description": "Time tolerance in seconds to compensate clock skew between IDP and SP when validating Assertions.",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "digestMethod": {
                "name": "Digest Method",
                "description": "The digest algorithm to use when signing a SAML message.",
                "type": "String",
                "cardinality": "required",
                "default": "http://www.w3.org/2001/04/xmlenc#sha256"
            },
            "signatureMethod": {
                "name": "Signature Method",
                "description": "The signature algorithm to use when signing a SAML message.",
                "type": "String",
                "cardinality": "required",
                "default": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"
            },
            "identitySyncType": {
                "name": "Identity Sync Type",
                "description": "Changes the synchronisation mechanism. This requires migration of the existing users, groups.",
                "type": "String",
                "cardinality": "required",
                "default": "default",
                "options": [
                    {
                        "label": "default sync",
                        "value": "default"
                    },
                    {
                        "label": "oak external idp sync",
                        "value": "idp"
                    }
                ]
            },
            "idpIdentifier": {
                "name": "IDP Identifier",
                "description": "Identifier for IDP to ensure principal name uniqueness in the IDP context. If this property is empty, the 'Service Provider Entity ID' will be used instead.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.granite.auth.sso.impl.SsoAuthenticationHandler",
        "name": "Adobe Granite SSO Authentication Handler",
        "description": "Authentication Handler supporting single sign-on systems such as Siteminder or IIS NTLM. This handler just extracts the user ID from the HTTP Request and ignores any password information. The user ID can be extract from HTTP Request Headers, Cookies or Parameters.",
        "bundleName": "com.adobe.granite.auth.sso",
        "attributes": {
            "path": {
                "name": "Path",
                "description": "Repository path for which this authentication handler should be used by Sling. If this is empty, the authentication handler will be disabled.",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "service.ranking": {
                "name": "Service Ranking",
                "description": "OSGi Framework Service Ranking value to indicate the order in which to call this service. This is an int value where higher values designate higher precedence. Default value is 0.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "jaas.controlFlag": {
                "name": "JAAS Control Flag",
                "description": "Property name specifying whether or not a LoginModule is REQUIRED, REQUISITE, SUFFICIENT or OPTIONAL. Refer to the JAAS configuration documentation for more details around the meaning of these flags. Jackrabbit Oak only.",
                "type": "String",
                "cardinality": "required",
                "default": "sufficient"
            },
            "jaas.realmName": {
                "name": "JAAS Realm",
                "description": "Property name specifying the realm name (or application name) against which the LoginModule is be registered. If no realm name is provided then LoginModule is registered with a default realm as configured in the Felix JAAS configuration. Jackrabbit Oak only.",
                "type": "String",
                "cardinality": "required",
                "default": "jackrabbit.oak"
            },
            "jaas.ranking": {
                "name": "JAAS Ranking",
                "description": "Property name specifying the ranking (i.e. sort order) of the configured login module entries. The entries are sorted in a descending order (i.e. higher value ranked configurations come first). Jackrabbit Oak only.",
                "type": "Integer",
                "cardinality": "required",
                "default": 90
            },
            "headers": {
                "name": "Header Names",
                "description": "One or more HTTP Headers which might provide the user ID.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cookies": {
                "name": "Cookie Names",
                "description": "One or more names of Cookies which might provide the user ID.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cqpsso"
                ]
            },
            "parameters": {
                "name": "Parameter Names",
                "description": "One or more names of Request Parameters which might provide the user ID.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "usermap": {
                "name": "User Map",
                "description": "For selected users, the user name extracted from the HTTP request can be replaced with a different one in the credentials object. The mapping is defined here. If the user name \"admin\" appears on either side of the map, the mapping will be ignored . The character \"=\" has to be escaped with a leading \"\\\".",
                "type": "String",
                "cardinality": "unlimited"
            },
            "format": {
                "name": "Format",
                "description": "Indication of the format in which the user ID is provided. Use \"Basic\" if the user ID is encoded in the HTTP Basic Authentication format, \"AsIs\" if the user ID is provided in plain text or any regular expression applied value should be used as is or any regular expression.",
                "type": "String",
                "cardinality": "required",
                "default": "Basic"
            },
            "trustedCredentialsAttribute": {
                "name": "Trusted Credential Attribute",
                "description": "The name of the attribute which is set with the user information in the trusted credentials. This needs to match the \"trust_credentials_attribute\" configuration of the default login module in Jackrabbit.However, this feature is deprecated and will no longer be supported in Jackrabbit Oak.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.CodeCacheHealthCheck",
        "name": "Granite Code Cache Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "java",
                    "performance"
                ]
            },
            "minimum.code.cache.size": {
                "name": "Minimum code cache size",
                "description": "Threshold for the code cache size, under which the health check will return a warning",
                "type": "Integer",
                "cardinality": "required",
                "default": 90
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.CrxdeSupportBundleHealthCheck",
        "name": "Adobe Granite CRXDE Support Bundle Health Check",
        "description": "This health check checks if the crxde-support bundle is active.",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "bundles",
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.DavExBundleHealthCheck",
        "name": "Adobe Granite DavEx Health Check",
        "description": "This health check checks if the DavEx bundle is active or not",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "bundles",
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.InactiveBundlesHealthCheck",
        "name": "Adobe Granite Active Bundles Health Check",
        "description": "This health check scans the current set of OSGi bundles for inactive bundles.",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "bundles"
                ]
            },
            "ignored.bundles": {
                "name": "Ignored Bundles",
                "description": "One or more Bundle Symbolic Names to be ignored.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "com.day.crx.crxde-support",
                    "com.adobe.granite.crx-explorer",
                    "com.adobe.granite.crxde-lite"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.JobsHealthCheck",
        "name": "Apache Sling Jobs Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "sling",
                    "jobs"
                ]
            },
            "max.queued.jobs": {
                "name": "Maximum Number of Queued Jobs",
                "description": "Threshold on the number of queued jobs that could exist at a certain moment",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.SlingGetServletHealthCheck",
        "name": "Adobe Granite Sling Get Servlet Health Check",
        "description": "Checks if the default Sling Get Servlet configuration follows the security guidelines.",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "dos",
                    "sling",
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.SlingJavaScriptHandlerHealthCheck",
        "name": "Apache Sling Java Script Handler Health Check",
        "description": "Checks if the Sling Java Script Handler configuration follows the security guidelines.",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "sling",
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.SlingJspScriptHandlerHealthCheck",
        "name": "Apache Sling Jsp Script Handler Health Check",
        "description": "Checks if the Sling Jsp Script Handler configuration follows the security guidelines.",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "sling",
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.SlingReferrerFilterHealthCheck",
        "name": "Apache Sling Referrer Filter Health Check",
        "description": "Checks if the Sling Referrer Filter is configured in order to prevent CSRF attacks.",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "sling",
                    "security",
                    "production",
                    "csrf"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.bundles.hc.impl.WebDavBundleHealthCheck",
        "name": "Adobe Granite WebDav Access Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.bundles.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "bundles",
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.comments.internal.CommentReplicationContentFilterFactory",
        "name": "Component com.adobe.granite.comments.internal.CommentReplicationContentFilterFactory",
        "description": "Description for com.adobe.granite.comments.internal.CommentReplicationContentFilterFactory",
        "bundleName": "com.adobe.granite.comments",
        "attributes": {
            "replicate.comment.resourceTypes": {
                "name": "Sling resource types",
                "description": "Comments collection sling resource types allowed for replication, add exact values",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.compatrouter.impl.CompatSwitchingServiceImpl",
        "name": "Compat Switches",
        "description": "",
        "bundleName": "com.adobe.granite.compat-router",
        "attributes": {
            "compatgroups": {
                "name": "Compat Groups",
                "description": "Groups turned on for compat mode",
                "type": "String",
                "cardinality": "unlimited"
            },
            "enabled": {
                "name": "Routing enabled",
                "description": "Switches compat routing on (bidirectional)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.compatrouter.impl.RoutingConfig",
        "name": "Routing Config",
        "description": "",
        "bundleName": "com.adobe.granite.compat-router",
        "attributes": {
            "id": {
                "name": "Compat id",
                "description": "ID for a location to toggle compat mode (Compat Flag)",
                "type": "String",
                "cardinality": "required"
            },
            "compatPath": {
                "name": "Compatibility Path",
                "description": "Compatibility Path for routing",
                "type": "String",
                "cardinality": "required"
            },
            "newPath": {
                "name": "New Path",
                "description": "New Path for routing",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.granite.compatrouter.impl.SwitchMappingConfig",
        "name": "Compat Group Mapping",
        "description": "",
        "bundleName": "com.adobe.granite.compat-router",
        "attributes": {
            "group": {
                "name": "Compat Group",
                "description": "Group identifier for a group of compat ids",
                "type": "String",
                "cardinality": "required"
            },
            "ids": {
                "name": "Compat IDs",
                "description": "IDs mapped to given group",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.conf.impl.RuntimeAwareConfigurationResourceResolvingStrategy",
        "name": "Adobe AEM Runtime-aware Resource Resolving Strategy",
        "description": "Resource resolving strategy which takes current runmode into account when resolving configurations.",
        "bundleName": "com.adobe.granite.conf",
        "attributes": {
            "enabled": {
                "name": "Enabled",
                "description": "Enable this configuration resource resolving strategy.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "fallbackPaths": {
                "name": "Fallback paths",
                "description": "Global fallback configurations, ordered from most specific (checked first) to least specific.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/conf/global",
                    "/apps",
                    "/libs"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.adobe.granite.contexthub.impl.ContextHubImpl",
        "name": "Adobe Granite ContextHub",
        "description": "Description for com.adobe.granite.contexthub.impl.ContextHubImpl",
        "bundleName": "com.adobe.granite.contexthub.commons",
        "attributes": {
            "com.adobe.granite.contexthub.silent_mode": {
                "name": "Silent Mode",
                "description": "Silent mode - turn this option on to disable ContextHub's debug output.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "com.adobe.granite.contexthub.show_ui": {
                "name": "Show UI",
                "description": "Indicates weather ContextHub's UI should be displayed.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.cors.impl.CORSPolicyImpl",
        "name": "Adobe Granite Cross-Origin Resource Sharing Policy",
        "description": "CORS policy as specified by its configuration.",
        "bundleName": "com.adobe.granite.cors",
        "attributes": {
            "alloworigin": {
                "name": "Allowed Origins",
                "description": "List of allowed origins. Use * to allow any. Default is empty (allow none).",
                "type": "String",
                "cardinality": "unlimited"
            },
            "alloworiginregexp": {
                "name": "Allowed Origins (Regexp)",
                "description": "List of allowed regular expressions as origins. Example: 'http://.*\\.example\\.com' to allow all subdomains of example.com. To allow any origin, leave empty and set 'Allowed Origins' to *. Default is empty (allow none).",
                "type": "String",
                "cardinality": "unlimited"
            },
            "allowedpaths": {
                "name": "Allowed paths",
                "description": "Regular expressions of paths the filter applies. Default is .*",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    ".*"
                ]
            },
            "exposedheaders": {
                "name": "Exposed Headers",
                "description": "List of exposed headers. Default is empty (none).",
                "type": "String",
                "cardinality": "unlimited"
            },
            "maxage": {
                "name": "Maximum Age",
                "description": "Number of seconds how long the results of a preflight request can be cached. A value of -1 indicates no caching. Default is 1800 (30min.).",
                "type": "Integer",
                "cardinality": "required",
                "default": 1800
            },
            "supportedheaders": {
                "name": "Supported Headers",
                "description": "List of allowed headers. Use * to allow any. Default is (Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method and Access-Control-Request-Headers)",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "Origin",
                    "Accept",
                    "X-Requested-With",
                    "Content-Type",
                    "Access-Control-Request-Method",
                    "Access-Control-Request-Headers"
                ]
            },
            "supportedmethods": {
                "name": "Allowed Methods",
                "description": "List of allowed methods. Default is (GET,HEAD,POST).",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "GET",
                    "HEAD",
                    "POST"
                ]
            },
            "supportscredentials": {
                "name": "Supports Credentials",
                "description": "Indicates that the actual request can include user credentials. Default is true.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.csrf.impl.CSRFFilter",
        "name": "Adobe Granite CSRF Filter",
        "description": "Request filter checking the CSRF token of modification requests.",
        "bundleName": "com.adobe.granite.csrf",
        "attributes": {
            "filter.methods": {
                "name": "Filter Methods",
                "description": "These methods are checked by the filter.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "POST",
                    "PUT",
                    "DELETE"
                ]
            },
            "filter.enable.safe.user.agents": {
                "name": "Filter non-browser User Agents",
                "description": "If this setting is enabled, browser and not browser agents will be checked by the filter. If this setting is disabled, only browsers will be checked, non-browser clients will not be checked by the filter. The Safe User Agents will never be checked regardless of this setting.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "filter.safe.user.agents": {
                "name": "Safe User Agents",
                "description": "These safe User Agents are not checked by the filter.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "filter.excluded.paths": {
                "name": "Excluded Paths",
                "description": "These paths are excluded by the filter. Each entry is of the form 'path'.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.csrf.impl.CSRFServlet",
        "name": "Adobe Granite CSRF Servlet",
        "description": "Servlet that return the CSRF token for a given user.",
        "bundleName": "com.adobe.granite.csrf",
        "attributes": {
            "csrf.token.expires.in": {
                "name": "CSRF Token Expires In",
                "description": "The lifetime in seconds of the csrf token (min 600 seconds/10 minutes)",
                "type": "Long",
                "cardinality": "required",
                "default": 600
            },
            "sling.auth.requirements": {
                "name": "Property sling.auth.requirements",
                "description": "Description for sling.auth.requirements",
                "type": "String",
                "cardinality": "required",
                "default": "-/libs/granite/csrf/token"
            }
        }
    },
    {
        "id": "com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider",
        "name": "Adobe Granite Distribution - Encrypted Password Transport Secret Provider",
        "description": "Description for com.adobe.granite.distribution.core.impl.CryptoDistributionTransportSecretProvider",
        "bundleName": "com.adobe.granite.distribution.core",
        "attributes": {
            "name": {
                "name": "Property name",
                "description": "Description for name",
                "type": "String",
                "cardinality": "required"
            },
            "username": {
                "name": "Property username",
                "description": "Description for username",
                "type": "String",
                "cardinality": "required"
            },
            "encryptedPassword": {
                "name": "Property encryptedPassword",
                "description": "Description for encryptedPassword",
                "type": "Password",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver",
        "name": "Adobe Granite Distribution - Diff Observer Factory",
        "description": "Description for com.adobe.granite.distribution.core.impl.diff.DiffChangesObserver",
        "bundleName": "com.adobe.granite.distribution.core",
        "attributes": {
            "enabled": {
                "name": "enabled",
                "description": "Description for enabled",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "agentName": {
                "name": "agent name",
                "description": "Description for agentName",
                "type": "String",
                "cardinality": "required",
                "default": "soco-reverse"
            },
            "diffPath": {
                "name": "diff nodes path",
                "description": "Description for diffPath",
                "type": "String",
                "cardinality": "required",
                "default": "/var/sling/distribution/diff",
                "hint": "path"
            },
            "observedPath": {
                "name": "observed path",
                "description": "Description for observedPath",
                "type": "String",
                "cardinality": "required",
                "default": "/home/groups",
                "hint": "path"
            },
            "serviceName": {
                "name": "resource resolution sub service name",
                "description": "Description for serviceName",
                "type": "String",
                "cardinality": "required"
            },
            "propertyNames": {
                "name": "looked properties names",
                "description": "Description for propertyNames",
                "type": "String",
                "cardinality": "required",
                "default": "rep:members"
            },
            "distributionDelay": {
                "name": "diff distribution delay",
                "description": "time (seconds) between detection of changes and triggering of distribution",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "serviceUser.target": {
                "name": "Property serviceUser.target",
                "description": "Description for serviceUser.target",
                "type": "String",
                "cardinality": "required",
                "default": "(.serviceName=com.adobe.granite.distribution.core)"
            }
        }
    },
    {
        "id": "com.adobe.granite.distribution.core.impl.diff.DiffEventListener",
        "name": "Adobe Granite Distribution - Diff Event Listener",
        "description": "Description for com.adobe.granite.distribution.core.impl.diff.DiffEventListener",
        "bundleName": "com.adobe.granite.distribution.core",
        "attributes": {
            "diffPath": {
                "name": "diff nodes path",
                "description": "Description for diffPath",
                "type": "String",
                "cardinality": "required",
                "default": "/var/sling/distribution/diff"
            },
            "serviceName": {
                "name": "resource resolution sub service name",
                "description": "Description for serviceName",
                "type": "String",
                "cardinality": "required"
            },
            "serviceUser.target": {
                "name": "Property serviceUser.target",
                "description": "Description for serviceUser.target",
                "type": "String",
                "cardinality": "required",
                "default": "(.serviceName=com.adobe.granite.distribution.core)"
            }
        }
    },
    {
        "id": "com.adobe.granite.distribution.core.impl.DistributionToReplicationEventTransformer",
        "name": "Adobe Granite Distribution - Distribution to Replication Event Transformer",
        "description": "Description for com.adobe.granite.distribution.core.impl.DistributionToReplicationEventTransformer",
        "bundleName": "com.adobe.granite.distribution.core",
        "attributes": {
            "importer.name": {
                "name": "Importer Names",
                "description": "The list of importer names for which to enable the event transformer.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider",
        "name": "Component com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider",
        "description": "Description for com.adobe.granite.distribution.core.impl.replication.adapters.ReplicationAgentProvider",
        "bundleName": "com.adobe.granite.distribution.core",
        "attributes": {
            "providerName": {
                "name": "Property providerName",
                "description": "Description for providerName",
                "type": "String",
                "cardinality": "required",
                "default": "distribution"
            },
            "forward.requests": {
                "name": "Property forward.requests",
                "description": "Set this to true if the replication actions should be forwarded directly to distribution",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.distribution.core.impl.replication.DistributionTransportHandler",
        "name": "Distribution Transport Handler",
        "description": "Executes a replication action by forwarding it to distribution system",
        "bundleName": "com.adobe.granite.distribution.core",
        "attributes": {
            "forward.requests": {
                "name": "Property forward.requests",
                "description": "Set this to true if the replication actions should be forwarded directly to distribution",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider",
        "name": "Adobe Granite Distribution Transport Credentials - Access Token DistributionTransportSecretProvider",
        "description": "Description for com.adobe.granite.distribution.core.impl.transport.AccessTokenDistributionTransportSecretProvider",
        "bundleName": "com.adobe.granite.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Secret provider name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the secret provider.",
                "type": "String",
                "cardinality": "required"
            },
            "serviceName": {
                "name": "Resource resolution sub service name",
                "description": "Description for serviceName",
                "type": "String",
                "cardinality": "required"
            },
            "userId": {
                "name": "User id",
                "description": "The identifier of the user which has access to the cryptographic material required to obtain access tokens",
                "type": "String",
                "cardinality": "required"
            },
            "accessTokenProvider.target": {
                "name": "Access Token Provider",
                "description": "The target reference for the AccessTokenProvider used to obtain access tokens, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=...)"
            }
        }
    },
    {
        "id": "com.adobe.granite.frags.impl.CheckHttpHeaderFlag",
        "name": "Adobe Granite HTTP Header Feature Flag",
        "description": "Displays the feature only for clients sending a special HTTP Header",
        "bundleName": "com.adobe.granite.frags.impl",
        "attributes": {
            "feature.name": {
                "name": "Name",
                "description": "feature.name.description",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.granite.frags.CheckHttpHeaderFlag"
            },
            "feature.description": {
                "name": "Description",
                "description": "feature.description.description",
                "type": "String",
                "cardinality": "required",
                "default": "Displays\\ the\\ feature\\ only\\ for\\ clients\\ sending\\ a\\ special\\ HTTP\\ Header"
            },
            "http.header.name": {
                "name": "HTTP Header Name",
                "description": "The HTTP Header name has to be sent from client",
                "type": "String",
                "cardinality": "required",
                "default": "X-Sling-Flag"
            },
            "http.header.valuepattern": {
                "name": "HTTP Header value pattern",
                "description": "The regexp pattern of HTTP Header value sent from client - see Java regular expression (http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html)",
                "type": "String",
                "cardinality": "required",
                "default": ".*"
            }
        }
    },
    {
        "id": "com.adobe.granite.frags.impl.RandomFeature",
        "name": "Adobe Granite Random Feature Flag",
        "description": "Displays the feature only for a small percentage of users",
        "bundleName": "com.adobe.granite.frags.impl",
        "attributes": {
            "feature.name": {
                "name": "Name",
                "description": "feature.name.description",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.granite.frags.RandomFeature"
            },
            "feature.description": {
                "name": "Description",
                "description": "feature.description.description",
                "type": "String",
                "cardinality": "required",
                "default": "Displays\\ the\\ feature\\ only\\ for\\ a\\ small\\ percentage\\ of\\ users"
            },
            "active.percentage": {
                "name": "Active percentage",
                "description": "How often this flag returns true, randomly, in percent",
                "type": "String",
                "cardinality": "required"
            },
            "cookie.name": {
                "name": "Cookie name",
                "description": "The Cookie name where stored RandomFeature informations",
                "type": "String",
                "cardinality": "required",
                "default": "Granite-Random-Feature"
            },
            "cookie.maxAge": {
                "name": "Cookie max age",
                "description": "The Cookie max age",
                "type": "Integer",
                "cardinality": "required",
                "default": 2147483647
            }
        }
    },
    {
        "id": "com.adobe.granite.httpcache.file.FileCacheStore",
        "name": "Adobe Granite HTTP File Cache Store",
        "description": "File Cache Store",
        "bundleName": "com.adobe.granite.httpcache.core",
        "attributes": {
            "com.adobe.granite.httpcache.file.documentRoot": {
                "name": "Directory",
                "description": "Cache document root",
                "type": "String",
                "cardinality": "required"
            },
            "com.adobe.granite.httpcache.file.includeHost": {
                "name": "IncludeHost",
                "description": "Whether to include host name in document root",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.granite.httpcache.impl.OuterCacheFilter",
        "name": "Adobe Granite HTTP Cache Filter",
        "description": "Cache Filter",
        "bundleName": "com.adobe.granite.httpcache.core",
        "attributes": {
            "com.adobe.granite.httpcache.url.paths": {
                "name": "Prefixes",
                "description": "URL path prefixes",
                "type": "String",
                "cardinality": 1024,
                "default": [
                    "/content"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.adobe.granite.i18n.impl.bundle.PseudoTranslations",
        "name": "Adobe Granite Pseudo Translations",
        "description": "Providing a pseudo locale \"zz\" with automated translations for testing. Wraps the string part with a prefix and suffix for the translation. Expects keys in the format: \"string ((comment))\".",
        "bundleName": "com.day.cq.cq-i18n",
        "attributes": {
            "pseudo.patterns": {
                "name": "Patterns",
                "description": "List of patterns for different countries within the \"zz\" language. Entries must have the form \"<country> <pattern>\" (space delimited), where country is a country code such as \"zz\" and pattern is the translation pattern which can use {string} for the original string and {comment} for the translation comment (optional)",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "zz USR_{string}_尠",
                    "pg PAGE_{string}_尠"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.i18n.impl.PreferencesLocaleResolverService",
        "name": "Adobe Granite Preference Locale Resolver",
        "description": "This locale resolver reads the locale for a request from the current user's preference for the language.",
        "bundleName": "com.day.cq.cq-i18n",
        "attributes": {
            "security.preferences.name": {
                "name": "Preference Name",
                "description": "Name of the preference the user's locale is stored. Be careful when changing this value as it affects the whole installation.",
                "type": "String",
                "cardinality": "required",
                "default": "language"
            }
        }
    },
    {
        "id": "com.adobe.granite.infocollector.InfoCollector",
        "name": "Granite System Information Collector",
        "description": "Collects in a Zipped stream all the system informations",
        "bundleName": "com.adobe.granite.infocollector",
        "attributes": {
            "granite.infocollector.includeThreadDumps": {
                "name": "Include Thread Dumps",
                "description": "Include thread dump files",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "granite.infocollector.includeHeapDump": {
                "name": "Include Heap Dump",
                "description": "Include heap dump file",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.jetty.ssl.internal.GraniteSslConnectorFactory",
        "name": "Adobe Granite SSL Connector Factory",
        "description": "Factory for the SSL Connector",
        "bundleName": "com.adobe.granite.jetty.ssl",
        "attributes": {
            "com.adobe.granite.jetty.ssl.port": {
                "name": "HTTPS Port",
                "description": "Port to listen on for HTTPS requests. Defaults to 8443.",
                "type": "Integer",
                "cardinality": "required",
                "default": 8443
            },
            "com.adobe.granite.jetty.ssl.keystore.user": {
                "name": "Keystore User",
                "description": "The userID of the Keystore user",
                "type": "String",
                "cardinality": "required"
            },
            "com.adobe.granite.jetty.ssl.keystore.password": {
                "name": "Keystore Password",
                "description": "Password to access the Keystore.",
                "type": "Password",
                "cardinality": "required"
            },
            "com.adobe.granite.jetty.ssl.ciphersuites.excluded": {
                "name": "Excluded cipher suites",
                "description": "List of cipher suites that should be excluded. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "com.adobe.granite.jetty.ssl.ciphersuites.included": {
                "name": "Included cipher suites",
                "description": "List of cipher suites that should be included. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "com.adobe.granite.jetty.ssl.client.certificate": {
                "name": "Client Certificate",
                "description": "Requirement for the Client to provide a valid certifcate. Defaults to none.",
                "type": "String",
                "cardinality": "required",
                "default": "none",
                "options": [
                    {
                        "label": "No Client Certificate",
                        "value": "none"
                    },
                    {
                        "label": "Client Certficate Wanted",
                        "value": "wants"
                    },
                    {
                        "label": "Client Certificate Needed",
                        "value": "needs"
                    }
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.jobs.async.impl.AsyncJobCleanUpTask",
        "name": "Adobe Granite Async Jobs Purge Scheduled Job",
        "description": "Schedule a background job for purging the async jobs which are older than threshold number of days",
        "bundleName": "com.adobe.granite.jobs.async",
        "attributes": {
            "job.purge.threshold": {
                "name": "Threshold number of days to delete jobs",
                "description": "Number of days after which a job should be deleted",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "job.purge.max.jobs": {
                "name": "Threshold number of maximum jobs to keep in history",
                "description": "Number of jobs in job history after which extra jobs should be deleted",
                "type": "Integer",
                "cardinality": "required",
                "default": 2147483647
            },
            "scheduler.expression": {
                "name": "Scheduler Expression",
                "description": "Cron Scheduler Expression defining the Cleanup schedule",
                "type": "String",
                "cardinality": "required",
                "default": "0 0 1 * * ?"
            }
        }
    },
    {
        "id": "com.adobe.granite.license.impl.LicenseCheckFilter",
        "name": "Adobe Granite License Filter",
        "description": "This filter handles all license related tasks.",
        "bundleName": "com.adobe.granite.license",
        "attributes": {
            "checkInternval": {
                "name": "Ping Interval",
                "description": "The time in milliseconds between two license pings.",
                "type": "Long",
                "cardinality": "required",
                "default": 86400000
            },
            "excludeIds": {
                "name": "Exclude Ids",
                "description": "List of server ids to be excluded from the license ping.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "encryptPing": {
                "name": "Encrypt Ping",
                "description": "Controls whether the ping is sent as plain text or encrypted.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.logging.impl.LogAnalyserImpl",
        "name": "Adobe Granite Log Analysis Service",
        "description": "Log analysis service for the operations dashboard",
        "bundleName": "com.adobe.granite.logging",
        "attributes": {
            "messages.queue.size": {
                "name": "Queue Size",
                "description": "Number of logging events to keep. A size below 1 disables keeping the log events.",
                "type": "Integer",
                "cardinality": "required",
                "default": 200
            },
            "logger.config": {
                "name": "Logger Configuration",
                "description": "Each configuration entry should have the format {category}:{level}.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "messages.size": {
                "name": "Message Size",
                "description": "Maximum size of a message in kilo byte to be stored. A size lower than 1 means the whole message is stored.",
                "type": "Integer",
                "cardinality": "required",
                "default": 25
            }
        }
    },
    {
        "id": "com.adobe.granite.logging.impl.LogErrorHealthCheck",
        "name": "Adobe Granite Log Health Check",
        "description": "This health check checks for error log messages in the log output.",
        "bundleName": "com.adobe.granite.logging",
        "attributes": {
            "hc.tags": {
                "name": "Tags",
                "description": "The tags for this health check to be used in a composite health check",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.maintenance.crx.impl.RevisionCleanupTask",
        "name": "Component com.adobe.granite.maintenance.crx.impl.RevisionCleanupTask",
        "description": "Description for com.adobe.granite.maintenance.crx.impl.RevisionCleanupTask",
        "bundleName": "com.adobe.granite.maintenance.oak",
        "attributes": {
            "full.gc.days": {
                "name": "full compaction schedule",
                "description": "The week days on which a full compaction should run (permissible values are \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\")",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "Sun"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.monitoring.impl.ScriptConfigImpl",
        "name": "Adobe Granite Monitor Handler",
        "description": "The Monitor Handler provides methods for automated monitoring of operating system conditions.",
        "bundleName": "com.adobe.granite.monitoring.core",
        "attributes": {
            "script.filename": {
                "name": "Script Name",
                "description": "The script file relative to the execution directory.",
                "type": "String",
                "cardinality": "required"
            },
            "script.display": {
                "name": "Display Name",
                "description": "The name of the script which shall be used (if different from the file name)",
                "type": "String",
                "cardinality": "required"
            },
            "script.path": {
                "name": "Script relative Path",
                "description": "Optional repository path relative to the script folder.",
                "type": "String",
                "cardinality": "required"
            },
            "script.platform": {
                "name": "Platform Filter",
                "description": "List of regexp that are matched against os.name. Prefix with a '-' to exclude.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "interval": {
                "name": "Time Interval",
                "description": "If set to a positive number (in seconds) the script will be executable automatically",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "jmxdomain": {
                "name": "JMX MBean Domain Name",
                "description": "The JMX MBean will be registered with this domain prefix",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.granite.monitoring"
            }
        }
    },
    {
        "id": "com.adobe.granite.oauth.server.auth.impl.OAuth2ServerAuthenticationHandler",
        "name": "Adobe Granite OAuth Server Authentication Handler",
        "description": "Authentication Handler for OAuth 2.0 (server side). Note that this Authentication Handler is only enabled if configuration exists and the Path property is not set to an empty string.",
        "bundleName": "com.adobe.granite.oauth.server",
        "attributes": {
            "path": {
                "name": "Path",
                "description": "Repository path for which this authentication handler should be used by Sling. If this is empty, the authentication handler will be disabled. By default this is set to \"/\".",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "jaas.controlFlag": {
                "name": "jaas.controlFlag.name",
                "description": "jaas.controlFlag.description",
                "type": "String",
                "cardinality": "required",
                "default": "sufficient"
            },
            "jaas.realmName": {
                "name": "jaas.realmName.name",
                "description": "jaas.realmName.description",
                "type": "String",
                "cardinality": "required",
                "default": "jackrabbit.oak"
            },
            "jaas.ranking": {
                "name": "jaas.ranking.name",
                "description": "jaas.ranking.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "oauth.offline.validation": {
                "name": "Offline Validation",
                "description": "Enable offline validation (through JWT).",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.oauth.server.impl.AccessTokenCleanupTask",
        "name": "Adobe OAuth2 Access Token Authentication Handler: Cleanup Task",
        "description": "Task to regularly purge expired access tokens from the repository",
        "bundleName": "com.adobe.granite.oauth.server",
        "attributes": {
            "scheduler.expression": {
                "name": "Schedule",
                "description": "Cron expression scheudling this job. Default is hourly 07m23s after the hour. See http://www.docjar.com/docs/api/org/quartz/CronTrigger.html for a description of the format for this value.",
                "type": "String",
                "cardinality": "required",
                "default": "23 07 * * * ?"
            }
        }
    },
    {
        "id": "com.adobe.granite.oauth.server.impl.OAuth2ClientRevocationServlet",
        "name": "Adobe Granite OAuth Client Token Revocation Endpoint",
        "description": "OAuth Client Token Revocation Endpoint",
        "bundleName": "com.adobe.granite.oauth.server",
        "attributes": {
            "oauth.client.revocation.active": {
                "name": "Active",
                "description": "Enable/Disable token revocation functionality on a per client basis",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.oauth.server.impl.OAuth2RevocationEndpointServlet",
        "name": "Adobe Granite OAuth Revocation Endpoint",
        "description": "",
        "bundleName": "com.adobe.granite.oauth.server",
        "attributes": {
            "sling.servlet.paths": {
                "name": "Servlet paths",
                "description": "The servlet paths",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/granite/oauth/revoke"
            },
            "oauth.revocation.active": {
                "name": "Active",
                "description": "Enable/Disable token revocation functionality on a per client basis",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.oauth.server.impl.OAuth2TokenEndpointServlet",
        "name": "Adobe Granite OAuth Token Endpoint",
        "description": "OAuth Token Endpoint as defined in http://tools.ietf.org/html/rfc6749#section-3.2",
        "bundleName": "com.adobe.granite.oauth.server",
        "attributes": {
            "oauth.issuer": {
                "name": "OAuth Issuer",
                "description": "The name of the issuer of the token",
                "type": "String",
                "cardinality": "required",
                "default": "Adobe Granite"
            },
            "oauth.access.token.expires.in": {
                "name": "OAuth Access Token Expires In",
                "description": "The lifetime in seconds of the access token",
                "type": "String",
                "cardinality": "required",
                "default": "3600"
            },
            "osgi.http.whiteboard.servlet.pattern": {
                "name": "osgi.http.whiteboard.servlet.pattern.name",
                "description": "osgi.http.whiteboard.servlet.pattern.description",
                "type": "String",
                "cardinality": "required",
                "default": "/token/*"
            },
            "osgi.http.whiteboard.context.select": {
                "name": "osgi.http.whiteboard.context.select.name",
                "description": "osgi.http.whiteboard.context.select.description",
                "type": "String",
                "cardinality": "required",
                "default": "(osgi.http.whiteboard.context.name=com.adobe.granite.oauth)"
            }
        }
    },
    {
        "id": "com.adobe.granite.oauth.server.impl.OAuth2TokenRevocationServlet",
        "name": "Adobe Granite OAuth Token Revocation Endpoint",
        "description": "OAuth Token Revocation Endpoint",
        "bundleName": "com.adobe.granite.oauth.server",
        "attributes": {
            "oauth.token.revocation.active": {
                "name": "Active",
                "description": "Enable/Disable token revocation functionality",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.offloading.impl.OffloadingConfigurator",
        "name": "Adobe Granite Offloading Configuration",
        "description": "The central offloading configuration component",
        "bundleName": "com.adobe.granite.offloading.core",
        "attributes": {
            "offloading.transporter": {
                "name": "Offloading Transporter",
                "description": "Name of the offloading transporter implementation. Transporter name must  match the service property 'offloading.transporter.name' of the transporter service implementation of choice. The value ''offloading.transporter.default'' selects the default implementation (replication based transport).",
                "type": "String",
                "cardinality": "required",
                "default": "offloading.transporter.default"
            },
            "offloading.cleanup.payload": {
                "name": "Cleanup Offloading Payload",
                "description": "Enable to cleanup the offloading payload on the worker instances after a successful offloading cycle. Enabled by default. When disabled, the offloading payload must become purged otherwise, in order to properly releases resources for Revision GC and Shared DataStore GC maintenance tasks.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.offloading.impl.OffloadingJobCloner",
        "name": "Adobe Granite Offloading - Job Cloner",
        "description": "",
        "bundleName": "com.adobe.granite.offloading.core",
        "attributes": {
            "offloading.jobcloner.enabled": {
                "name": "Job Cloner Enabled",
                "description": "Allows to enable/disable the job cloner in general.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.offloading.impl.OffloadingJobOffloader",
        "name": "Adobe Granite Offloading - Job Offloader",
        "description": "",
        "bundleName": "com.adobe.granite.offloading.core",
        "attributes": {
            "offloading.offloader.enabled": {
                "name": "Offloader Enabled",
                "description": "Allows to enable/disable the offloader in general.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.offloading.impl.transporter.OffloadingAgentManager",
        "name": "Adobe Granite Offloading Replication Agents Manager",
        "description": "The Adobe Granite Offloading Replication Agents Manager manages replication agents based on topology announcements",
        "bundleName": "com.adobe.granite.offloading.core",
        "attributes": {
            "offloading.agentmanager.enabled": {
                "name": "Automatic Agent Management",
                "description": "Allows to enable/disable the automatic creation replication agents for offloading",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.offloading.impl.transporter.OffloadingDefaultTransporter",
        "name": "Adobe Granite Offloading Default Transporter",
        "description": "The default offloading transporter implementation.",
        "bundleName": "com.adobe.granite.offloading.core",
        "attributes": {
            "default.transport.agent-to-worker.prefix": {
                "name": "To Worker Agent Prefix",
                "description": "The prefix of the agent name for the agent to the worker.",
                "type": "String",
                "cardinality": "required",
                "default": "offloading"
            },
            "default.transport.agent-to-master.prefix": {
                "name": "To Master Agent Prefix",
                "description": "The prefix of the agent name for the agent to the master.",
                "type": "String",
                "cardinality": "required",
                "default": "offloading"
            },
            "default.transport.input.package": {
                "name": "Input Package Name",
                "description": "The package name of the job input for use. Only relevant if property 'default.transport.contentpackage' is set to true.",
                "type": "String",
                "cardinality": "required",
                "default": "offloadingInput.zip"
            },
            "default.transport.output.package": {
                "name": "Output Page Name",
                "description": "The package name of the job output for use. Only relevant if property 'default.transport.contentpackage' is set to true.",
                "type": "String",
                "cardinality": "required",
                "default": "offloadingOutput.zip"
            },
            "default.transport.replication.synchronous": {
                "name": "Replicate Synchronous",
                "description": "Whether to use synchronous replication or not.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "default.transport.contentpackage": {
                "name": "Replication Package",
                "description": "Whether to transport the job input/output as content package over replication.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "offloading.transporter.default.enabled": {
                "name": "Transport Enabled",
                "description": "Allows to enable/disable offloading transport in general.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.omnisearch.impl.core.OmniSearchServiceImpl",
        "name": "com.adobe.granite.omnisearch.impl.core.OmniSearchServiceImpl",
        "description": "",
        "bundleName": "com.adobe.granite.omnisearch.core",
        "attributes": {
            "omnisearch.suggestion.requiretext.min": {
                "name": "Min Text Length for Suggestions",
                "description": "min length of text that is require to show suggestions",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "omnisearch.suggestion.spellcheck.require": {
                "name": "Include spellcheck in suggestions",
                "description": "check if spellcheck suggestions are require in suggestions of omnisearch",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.optout.impl.OptOutServiceImpl",
        "name": "Adobe Granite Opt-Out Service",
        "description": "Allows configuration of opt-out cookie names, header/value pairs and a white list of allowed cookies. Also provides JSON access to this configuration. Provides convenience method to determine whether a request is opted out or not.",
        "bundleName": "com.adobe.granite.optout",
        "attributes": {
            "optout.cookies": {
                "name": "Opt-Out Cookies",
                "description": "A list of names of cookies that a client can set to opt-out of tracking.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq-opt-out",
                    "omniture_optout"
                ]
            },
            "optout.headers": {
                "name": "Opt-Out HTTP Headers",
                "description": "A list of name/value pairs of HTTP headers that a client can set to opt-out of tracking. The format for specifying a header and its expected value is: <header-name>;<header-value>, e.g. \"NoCookies;on\".",
                "type": "String",
                "cardinality": "unlimited"
            },
            "optout.whitelist.cookies": {
                "name": "White-List Cookies",
                "description": "A list of names of cookies that are still allowed to be set regardless of the client opting out.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq-show-clientcontext",
                    "cq-scrollpos",
                    "cq-sk-collapsed",
                    "login-token",
                    "ys-cq-siteadmin-tree",
                    "ys-cq-damadmin-tree",
                    "ys-cq-collabadmin-tree",
                    "ys-cq-miscadmin-tree",
                    "ys-cq-tagadmin",
                    "ys-cq-cf-clipboard",
                    "ys-cq-cf-tabpanel",
                    "ys-cq-sk-tabpanel",
                    "SessionPersistence",
                    "wcmmode",
                    "cq-authoring-mode"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.queries.impl.hc.AsyncIndexHealthCheck",
        "name": "Asynchronous Index Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.queries",
        "attributes": {
            "indexing.critical.threshold": {
                "name": "Critical Threshold",
                "description": "Critical Threshold",
                "type": "Integer",
                "cardinality": "required",
                "default": 120
            },
            "indexing.warn.threshold": {
                "name": "Warn Threshold",
                "description": "Warn Threshold",
                "type": "Integer",
                "cardinality": "required",
                "default": 45
            },
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "query",
                    "index",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.queries.impl.hc.ChildNodesHealthCheck",
        "name": "Child Nodes Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.queries",
        "attributes": {
            "child.nodes.critical.threshold": {
                "name": "Critical Threshold",
                "description": "Critical Threshold",
                "type": "Integer",
                "cardinality": "required",
                "default": 450000000
            },
            "child.nodes.warn.threshold": {
                "name": "Warn Threshold",
                "description": "Warn Threshold",
                "type": "Integer",
                "cardinality": "required",
                "default": 400000000
            },
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "segment",
                    "child nodes",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.queries.impl.hc.LargeIndexHealthCheck",
        "name": "Large Lucene Index Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.queries",
        "attributes": {
            "large.index.critical.threshold": {
                "name": "Critical Threshold",
                "description": "Critical Threshold",
                "type": "Long",
                "cardinality": "required",
                "default": 1500000000
            },
            "large.index.warn.threshold": {
                "name": "Warn Threshold",
                "description": "Warn Threshold",
                "type": "Long",
                "cardinality": "required",
                "default": 1000000000
            },
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "query",
                    "index",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.queries.impl.hc.QueriesStatusHealthCheck",
        "name": "Query Performance Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.queries",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "query"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.queries.impl.hc.QueryHealthCheckMetrics",
        "name": "Query Health Check Configuration",
        "description": "Service Configuration",
        "bundleName": "com.adobe.granite.queries",
        "attributes": {
            "getPeriod": {
                "name": "Period",
                "description": "Job Period",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            }
        }
    },
    {
        "id": "com.adobe.granite.queries.impl.hc.QueryLimitsHealthCheck",
        "name": "Query Traversal Limits Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.queries",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "query",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.replication.hc.impl.ReplicationQueueHealthCheck",
        "name": "Replication Queue Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.replication.hc.impl",
        "attributes": {
            "number.of.retries.allowed": {
                "name": "Number of Allowed Retries",
                "description": "This is the number of allowed retries for an entry.",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "replication"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.replication.hc.impl.ReplicationTransportUsersHealthCheck",
        "name": "Adobe Granite Replication & Transport Users Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.replication.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "security",
                    "replication",
                    "cq"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.repository.hc.impl.AuthorizableNodeNameHealthCheck",
        "name": "Adobe Granite Authorizable Node Name Health Check",
        "description": "This health check verifies if the default node name generation for user/group nodes has been replace in order to avoid exposing the authorizable ID in the node name and path.",
        "bundleName": "com.adobe.granite.maintenance.oak",
        "attributes": {
            "hc.tags": {
                "name": "Tags",
                "description": "Tags for this check to be used by composite health checks.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "security",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.repository.hc.impl.ContinuousRGCHealthCheck",
        "name": "Adobe Granite Continuous Revision GC Health Check",
        "description": "This health check verifies if continuous revision GC is enabled and whether it is running on a regular basis.",
        "bundleName": "com.adobe.granite.maintenance.oak",
        "attributes": {
            "hc.tags": {
                "name": "Tags",
                "description": "Tags for this check to be used by composite health checks.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "system"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.repository.hc.impl.DefaultAccessUserProfileHealthCheck",
        "name": "Adobe Granite User Profile Access Health Check",
        "description": "This health check checks if the everyone principal has not read access to user profiles.",
        "bundleName": "com.adobe.granite.repository.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "acl",
                    "security"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.repository.hc.impl.DefaultLoginsHealthCheck",
        "name": "Adobe Granite Repository Default Login Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.repository.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "login",
                    "security",
                    "production"
                ]
            },
            "account.logins": {
                "name": "Logins",
                "description": "The logins to check",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "admin:admin",
                    "author:author"
                ]
            },
            "console.logins": {
                "name": "Console Logins",
                "description": "The logins for the console to check",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "admin:admin"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.repository.hc.impl.DiskSpaceHealthCheck",
        "name": "Adobe Granite Disk Space Health Check",
        "description": "This health check verifies if there is enough free disk space for the repository to expand",
        "bundleName": "com.adobe.granite.repository.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "repository",
                    "disk"
                ]
            },
            "disk.space.warn.threshold": {
                "name": "Disk Space Warning Threshold",
                "description": "The threshold over which this health check returns a warning. If this is set to 10, the health check will return a warning if the usable disk space is less than 10 times the node store size.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "disk.space.error.threshold": {
                "name": "Disk Space Critical Threshold",
                "description": "The threshold over which this health check returns critical. If this is set to 2, the health check will return an error if the usable disk space is less than 2 times the node store size.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            }
        }
    },
    {
        "id": "com.adobe.granite.repository.hc.impl.ObservationQueueLengthHealthCheck",
        "name": "Adobe Granite Observation Queue Length Health Check",
        "description": "This health report checks the state of the Oak observation queue",
        "bundleName": "com.adobe.granite.repository.hc.impl",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "repository",
                    "observation",
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.repository.impl.CommitStatsConfig",
        "name": "CommitStats Configuration",
        "description": "Configuration for CommitStats hook (Yes! This config can be updated at runtime without side-effects!) This is an Oak-level CommitHook that tracks some simple information about each commit. Every configured interval the CommitStats hook issues a log.info with statistics about commits in this period. The information tracked is composed of two parts: type and location (type:location). It is derived from three different sources:  1) org.slf4j.MDC.get(CommitStats.MDC_COMMIT_STATS_CONTEXT): when this is set, this defines the type:location info.  2) Thread.currentThread().getName() filtered by the configured threadNameMatchers that contain the resulting type:location  3) Thread.currentThread().getStackTrace() filtered by greedyStackMatchers first (and if that matches, it wins), or otherwise by the 4 stackFilters/stackMatchers/stackCategorizers/stackShorteners with which each stack element of the current stack is visited until there is a definite match ('stackFilters' first allows to filter anything uninteresting, 'stackMatchers' allows to directly match anything non-filtered, 'stackCategorizers' allows to categorize the next non-filtered stack element, and 'stackShorteners' finally allows to beautify that next non-filtered stack element to have it easier readable)",
        "bundleName": "com.adobe.granite.repository",
        "attributes": {
            "enabled": {
                "name": "enabled",
                "description": "enables or disables CommitStats.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "intervalSeconds": {
                "name": "interval in seconds",
                "description": "interval in seconds after which a new info statement is logged (if there is anything to log).",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "commitsPerIntervalThreshold": {
                "name": "commits per interval threshold",
                "description": "Number of commits per threshold that must be reached before logging at INFO, otherwise logging at DEBUG",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "maxLocationLength": {
                "name": "maximum location length",
                "description": "maximum length of the location string tracked in statistics - if longer it is capped with '...'",
                "type": "Integer",
                "cardinality": "required",
                "default": 59
            },
            "maxDetailsShown": {
                "name": "maximum num details shown",
                "description": "maximum number of details shown in the statistics, the remainder is listed under 'others'",
                "type": "Integer",
                "cardinality": "required",
                "default": 8
            },
            "minDetailsPercentage": {
                "name": "minimum details percentage",
                "description": "minimum percentage necessary to be listed, if lower it is listed under 'others'",
                "type": "Integer",
                "cardinality": "required",
                "default": 4
            },
            "threadMatchers": {
                "name": "thread name matchers",
                "description": "list of matcher=type:location which are matched against thread name. Matcher can be 'startsWith', 'wildcard' or 'regexp'. Type:Location can contain replace groups (eg '(1):(2)') when used with regexp.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "OsgiInstallerImpl=osgi-thread:osgi-installer",
                    "FelixStartLevel=osgi-thread:felix-start",
                    "FelixDispatchQueue=osgi-thread:felix-disaptch-queue",
                    "^.*\\[[^\\]]*\\] ([^ ]*) (.*) HTTP/1.[01]=HTTP-(1):(2)",
                    "^JobHandler: (.*$)=jobhandler:(1)"
                ]
            },
            "maxGreedyDepth": {
                "name": "maximum greedy depth",
                "description": "maximum number of stack elements inspected for greedyStackMatchers. This number helps avoiding scanning large stacks unnecessarily.",
                "type": "Long",
                "cardinality": "required",
                "default": 32
            },
            "greedyStackMatchers": {
                "name": "greedy stack element matchers",
                "description": "list of matcher=type:location which are matched against the stack part restricted by maxGreedyDepth. GreedyStackMatchers thus come before stackFilters/stackMatchers/stackCategorizers. Matcher can be 'startsWith', 'wildcard' or 'regexp'. Type:Location can contain replace groups (eg '(1):(2)') when used with regexp.",
                "type": "String",
                "cardinality": "required",
                "default": "org.apache.sling.auth.core.impl.SlingAuthenticator*=sling:login"
            },
            "stackFilters": {
                "name": "stack filters",
                "description": "list of matchers which will be filtered out during stack scanning.  Matcher can be 'startsWith', 'wildcard' or 'regexp'.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "java.lang.Thread*=:",
                    "java.util.concurrent.FutureTask*=:",
                    "org.apache.sling.commons.threads*=:",
                    "org.quartz.core.JobRunShell*=:",
                    "org.apache.sling.resourceresolver.impl.observation.OsgiObservationBridge*=:",
                    "org.apache.felix.eventadmin.impl*=:"
                ]
            },
            "stackMatchers": {
                "name": "stack matchers",
                "description": "list of matcher=type:location which, when matching, will be treated as immediate match and action is evaluated (unlike stackCategorizers where the next stack elements are taken). Matcher can be 'startsWith', 'wildcard' or 'regexp'. Type:Location can contain replace groups (eg '(1):(2)') when used with regexp.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "org.apache.sling.discovery.*=service:discovery",
                    "org.eclipse.jetty.util.thread.QueuedThreadPool.*=service:jetty",
                    "org.apache.sling.event.impl.jobs.queues.JobQueueImpl.finishedJob.*=jobmanager:job.finishJob",
                    "org.apache.sling.event.impl.jobs.JobHandler.reschedule.*=jobmanager:job.reschedule",
                    "org.apache.sling.event.impl.jobs.queues.JobQueueImpl.startJobs.*=jobmanager:job-startJobs",
                    "org\\.apache\\.sling\\.event\\.impl\\.(jobs\\.tasks.*Task)\\..*\\(.*$=jobs-task:(1)"
                ]
            },
            "stackCategorizers": {
                "name": "stack categorizers",
                "description": "list of matcher=type: which, when matching, will categorize the next non-filtered stack element  (unlike stackMatchers which directly identify the entire action string). Matcher can be 'startsWith', 'wildcard' or 'regexp'. Type (as in 'category') is a string followed with a colon ':'.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "org.apache.sling.commons.scheduler.impl.*=scheduled:",
                    "org.apache.felix.eventadmin.impl.*=eventhandlr:",
                    "org.apache.sling.event.dea.*=dea-eventhndlr:",
                    "java.util.concurrent.ThreadPool*=threadpool:",
                    "java.util.concurrent.Executors*=threadpool:",
                    "org.apache.sling.event.impl.jobs*=jobhandlr4:"
                ]
            },
            "stackShorteners": {
                "name": "stack shorteners",
                "description": "list of matcher=:location that are applied after an earlier stack element matched with a stackCategorizer. Matcher can be 'startsWith', 'wildcard' or 'regexp'. Location can contain replace groups (eg ':(1)') when used with regexp.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "com.day.cq.wcm.mobile.core.impl.devicespecs.Wurfl.*=:wcm-mobile",
                    "com.adobe.granite.workflow.core.launcher.WorkflowLauncherListener*=:workflow-launcher-listener",
                    "com.day.crx.statistics.Statistics.run*=:crx-statistics",
                    "com.day.cq.rewriter.linkchecker.impl.LinkInfoStorage*=:rewriter-linkchecker",
                    "com.day.cq.replication.audit.impl.EventProcessor*=:replication-audit",
                    "com.day.cq.dam.core.impl.event.DamEventAuditListe*=:dam-auditlistener",
                    "com.day.cq.dam.core.impl.ui.preview.FolderPreviewUpdater*=:dam-folder-preview-updater",
                    "org\\.apache\\.(.*$)=:o.a.(1)",
                    "com\\.day\\.(.*$)=:c.d.(1)",
                    "com\\.adobe\\.(.*$)=:c.a.(1)"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.repository.ServiceUserConfiguration",
        "name": "Adobe Granite Repository Service User Configuration",
        "description": "Configuration values associated with Service Users.",
        "bundleName": "com.adobe.granite.repository",
        "attributes": {
            "service.ranking": {
                "name": "Ranking",
                "description": "Configurations are processed in order of their ranking, a configuration with a higher ranking has precedence over a configuration with a lower ranking.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "ServiceUserConfiguration: ranking: {service.ranking} simpleSubjectPopulation: {serviceusers.simpleSubjectPopulation} for service users: {serviceusers.list}"
            },
            "serviceusers.simpleSubjectPopulation": {
                "name": "Simple Subject Population",
                "description": "Determines whether the named service users are eligible for loginService or getServiceResourceResolver to avoid group membership lookups.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "serviceusers.list": {
                "name": "Service Users",
                "description": "A list of the service users for whom the fast path should be enabled or disabled.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.requests.logging.impl.hc.RequestsStatusHealthCheckImpl",
        "name": "Adobe Granite Requests Status Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.requests.logging",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "production"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.resourcestatus.impl.CompositeStatusType",
        "name": "Granite Resource Status - Composite Status Types",
        "description": "A composite status type groups together multiple actual status types to allow retrieving statuses matching multiple types with one call to the status resource provider",
        "bundleName": "com.adobe.granite.resourcestatus",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "{name}: {types}"
            },
            "name": {
                "name": "Name",
                "description": "The name of this composite status type",
                "type": "String",
                "cardinality": "required"
            },
            "types": {
                "name": "Status types",
                "description": "The actual status types contained in this composite status type",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.resourcestatus.impl.StatusResourceProviderImpl",
        "name": "Granite Resource Status - ResourceProvider",
        "description": "Description for com.adobe.granite.resourcestatus.impl.StatusResourceProviderImpl",
        "bundleName": "com.adobe.granite.resourcestatus",
        "attributes": {
            "provider.root": {
                "name": "Root path",
                "description": "The root path of the resources provided by the status resource provider",
                "type": "String",
                "cardinality": "required",
                "default": "/resource-status"
            }
        }
    },
    {
        "id": "com.adobe.granite.rest.assets.impl.AssetContentDispositionFilter",
        "name": "Adobe Granite REST Assets Content-Disposition Filter",
        "description": "Request filter handling Content-Disposition header for certain content types",
        "bundleName": "com.adobe.granite.rest.assets",
        "attributes": {
            "mime.allowEmpty": {
                "name": "Allow empty MIME",
                "description": "Allow content with empty/unknown MIME types to be served inline. Disable to ensure that content with unknown MIME types is served as an attachment",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "mime.allowed": {
                "name": "Allowed MIME types",
                "description": "MIME types which should not be served as attachment",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.rest.impl.ApiEndpointResourceProviderFactoryImpl",
        "name": "Adobe Granite REST ApiEndpointResourceProviderFactory",
        "description": "Description for com.adobe.granite.rest.impl.ApiEndpointResourceProviderFactoryImpl",
        "bundleName": "com.adobe.granite.rest.api",
        "attributes": {
            "provider.roots": {
                "name": "Property provider.roots",
                "description": "Description for provider.roots",
                "type": "String",
                "cardinality": "required",
                "default": "api"
            }
        }
    },
    {
        "id": "com.adobe.granite.rest.impl.servlet.DefaultGETServlet",
        "name": "Adobe Granite REST Default GET Servlet",
        "description": "Default servlet handling REST API GET requests",
        "bundleName": "com.adobe.granite.rest.api",
        "attributes": {
            "default.limit": {
                "name": "Limit parameter default",
                "description": "Default value for the limit request parameter. Default is 20.",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "use.absolute.uri": {
                "name": "Use absolute URIs",
                "description": "Forces usage of absolutes URIs in the response. Default is true.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.security.user.ui.internal.servlets.SSLConfigurationServlet",
        "name": "SSL Configuration Health Check",
        "description": "",
        "bundleName": "com.adobe.granite.security.ui",
        "attributes": {
            "hc.tags": {
                "name": "Health Check Tags",
                "description": "Health Check Tags",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "security",
                    "production",
                    "ssl"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.security.user.UserPropertiesService",
        "name": "Adobe Granite UserProperties Service",
        "description": "Service used to retrieve the UserPropertiesManager for a given Session.",
        "bundleName": "com.adobe.granite.security.user",
        "attributes": {
            "adapter.condition": {
                "name": "Property adapter.condition",
                "description": "Description for adapter.condition",
                "type": "String",
                "cardinality": "required",
                "default": "If the Resource can be adapted to a JCR Node and is one of the configured resource types."
            },
            "granite.userproperties.nodetypes": {
                "name": "Node Types",
                "description": "Node types to use for the creation of the preferences or profile nodes. (Format: regexp=resourceType)",
                "type": "String",
                "cardinality": 1024,
                "default": [
                    "preferences=nt:unstructured",
                    "profiles/.*=nt:unstructured"
                ]
            },
            "granite.userproperties.resourcetypes": {
                "name": "Resource Types",
                "description": "Resource type to use for preferences or profile nodes. (Format: regexp=resourceType)",
                "type": "String",
                "cardinality": 1024,
                "default": [
                    "preferences=cq:Preferences",
                    "profiles/.*=cq/security/components/profile",
                    "profile=cq/security/components/profile"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.socialgraph.impl.SocialGraphFactoryImpl",
        "name": "Adobe Granite Social Graph Factory",
        "description": "Factory service that configures and creates the social graph bindings.",
        "bundleName": "com.adobe.granite.socialgraph",
        "attributes": {
            "group2member.relationship.outgoing": {
                "name": "GroupToMember RT",
                "description": "Defines the relationship type between a group and his group member.",
                "type": "String",
                "cardinality": "required",
                "default": "following"
            },
            "group2member.excluded.outgoing": {
                "name": "Excluded GroupToMember",
                "description": "Defines the groups that do not create relationships to their group members.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "group2member.relationship.incoming": {
                "name": "GroupFromMember RT",
                "description": "Defines the relationship type between a group member and his group.",
                "type": "String",
                "cardinality": "required",
                "default": "member"
            },
            "group2member.excluded.incoming": {
                "name": "Excluded MemberToGroup",
                "description": "Defines the groups that do not create relationships from their group members.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "contributor",
                    "content-authors"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.system.monitoring.impl.SystemStatsMBeanImpl",
        "name": "Adobe Granite System Statistics MBean",
        "description": "",
        "bundleName": "com.adobe.granite.monitoring.core",
        "attributes": {
            "scheduler.expression": {
                "name": "scheduler.expression.name",
                "description": "scheduler.expression.description",
                "type": "String",
                "cardinality": "required",
                "default": "0 * * * * ?"
            },
            "jmx.objectname": {
                "name": "jmx.objectname.name",
                "description": "jmx.objectname.description",
                "type": "String",
                "cardinality": "required",
                "default": "com.adobe.granite:type=GraniteSystemStats,name=Granite System Statistics"
            }
        }
    },
    {
        "id": "com.adobe.granite.taskmanagement.impl.jcr.TaskAdapterFactory",
        "name": "Adobe Granite Task Adapter Factory",
        "description": "Adapts JCR node or Apache Sling resource to a task instance.",
        "bundleName": "com.adobe.granite.taskmanagement.core",
        "attributes": {
            "adapter.condition": {
                "name": "Property adapter.condition",
                "description": "Description for adapter.condition",
                "type": "String",
                "cardinality": "required",
                "default": "If the Node or Resource points is of type cq:WorkItem"
            }
        }
    },
    {
        "id": "com.adobe.granite.taskmanagement.impl.jcr.TaskArchiveService",
        "name": "Adobe Granite TaskManagement Archiving Service",
        "description": "Archives old tasks to a history location to improve runtime performance",
        "bundleName": "com.adobe.granite.taskmanagement.core",
        "attributes": {
            "archiving.enabled": {
                "name": "Enable Archiving",
                "description": "Enable or disable archiving of tasks",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "scheduler.expression": {
                "name": "cron expression",
                "description": "scheduler cron expression.  example: '30 0 * * * ?' runs at 00:30 AM",
                "type": "String",
                "cardinality": "required",
                "default": "30 0 * * * ?"
            },
            "archive.since.days.completed": {
                "name": "Age of Tasks to Archive",
                "description": "Number of days after a task is completed before archiving a task.  Value must be > 0",
                "type": "Integer",
                "cardinality": "required",
                "default": 365
            }
        }
    },
    {
        "id": "com.adobe.granite.taskmanagement.impl.purge.TaskPurgeMaintenanceTask",
        "name": "Ad-hoc Task Purge",
        "description": "For purging ad-hoc tasks.",
        "bundleName": "com.adobe.granite.taskmanagement.core",
        "attributes": {
            "purgeCompleted": {
                "name": "Purge Completed",
                "description": "Purge completed ad-hoc tasks?",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "completedAge": {
                "name": "Completed age",
                "description": "Age (in days) of completed ad-hoc tasks to purge.",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            },
            "purgeActive": {
                "name": "Purge Active",
                "description": "Purge active ad-hoc tasks?",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "activeAge": {
                "name": "Active age",
                "description": "Age (in days) of active ad-hoc tasks to purge.",
                "type": "Integer",
                "cardinality": "required",
                "default": 90
            },
            "saveThreshold": {
                "name": "Save threshold",
                "description": "Save every threshold deletes.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.adobe.granite.taskmanagement.impl.service.TaskManagerAdapterFactory",
        "name": "Adobe Granite Task Manager Adapter Factory",
        "description": "Adapts JCR sessions or Apache Sling resource resolvers to a taskmanager instance.",
        "bundleName": "com.adobe.granite.taskmanagement.core",
        "attributes": {
            "adapter.condition": {
                "name": "Property adapter.condition",
                "description": "Description for adapter.condition",
                "type": "String",
                "cardinality": "required",
                "default": "If the ResourceResolver is a JcrResourceResolver or a Session."
            },
            "taskmanager.admingroups": {
                "name": "Task Administrator Group",
                "description": "The name of the group of users with task administrative rights.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "administrators",
                    "taskmanagement-service",
                    "projects-service",
                    "repository-reader-service"
                ]
            }
        }
    },
    {
        "id": "com.adobe.granite.threaddump.ThreadDumpCollector",
        "name": "Adobe Granite Thread Dumps Collector",
        "description": "Collects and persists Java thread dumps inside compressed GZipped files",
        "bundleName": "com.adobe.granite.threaddump",
        "attributes": {
            "scheduler.period": {
                "name": "Schedule",
                "description": "Interval (in number of seconds) between each thread dump - collector will not be executed if this property value is missing",
                "type": "Long",
                "cardinality": "required",
                "default": 60
            },
            "scheduler.runOn": {
                "name": "Cluster",
                "description": "Set 'Each node' to execute this service on multiple nodes within a cluster, 'Leader only' otherwise",
                "type": "String",
                "cardinality": "required",
                "default": "SINGLE",
                "options": [
                    {
                        "label": "Each node",
                        "value": "SINGLE"
                    },
                    {
                        "label": "Leader only",
                        "value": "LEADER"
                    }
                ]
            },
            "granite.threaddump.enabled": {
                "name": "Enable/Disable",
                "description": "Enable or disable the Thread Dumps collection",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "granite.threaddump.dumpsPerFile": {
                "name": "Dumps per file",
                "description": "Number of dumps to be stored in each file",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "granite.threaddump.enableGzipCompression": {
                "name": "GZIP Compression",
                "description": "Flag to enable/disable GZIP compression on dump files",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "granite.threaddump.enableDirectoriesCompression": {
                "name": "Directories Compression",
                "description": "Flag to enable/disable ZIP compression on daily dump directories",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "granite.threaddump.enableJStack": {
                "name": "Enable JStack",
                "description": "Use native JStack JDK application to perform the thread dump",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "granite.threaddump.maxBackupDays": {
                "name": "Max Backup Days",
                "description": "The maximum number of backup files/directories to keep around",
                "type": "Integer",
                "cardinality": "required",
                "default": 7
            },
            "granite.threaddump.backupCleanTrigger": {
                "name": "Backup Clean Trigger",
                "description": "The Quartz expression to trigger the backup clean operation",
                "type": "String",
                "cardinality": "required",
                "default": "0 0 0 * * ?"
            }
        }
    },
    {
        "id": "com.adobe.granite.translation.connector.msft.core.impl.MicrosoftTranslationServiceFactoryImpl",
        "name": "Microsoft Translation Connector Factory",
        "description": "Description for com.adobe.granite.translation.connector.msft.core.impl.MicrosoftTranslationServiceFactoryImpl",
        "bundleName": "com.adobe.granite.translation.connector.msft.core",
        "attributes": {
            "translationFactory": {
                "name": "Microsoft Translation Factory Name",
                "description": "The Unique ID associated with this Translation Factory Connector",
                "type": "String",
                "cardinality": "required",
                "default": "microsoft"
            },
            "defaultConnectorLabel": {
                "name": "Microsoft Connector default label",
                "description": "The default Translation Label to be used when describing this connector from a UI perspective.",
                "type": "String",
                "cardinality": "required",
                "default": "Microsoft"
            },
            "defaultConnectorAttribution": {
                "name": "Microsoft Connector default attribution",
                "description": "The default Translation Attribution to be used when attributing TranslationService calls to this connector.",
                "type": "String",
                "cardinality": "required",
                "default": "Translations by Microsoft"
            },
            "defaultConnectorWorkspaceId": {
                "name": "Microsoft Connector default Workspace ID",
                "description": "The default Workspace ID to be used when calling the TranslationService for this connector.",
                "type": "String",
                "cardinality": "required"
            },
            "defaultConnectorSubscriptionKey": {
                "name": "Microsoft Connector default Subscription Key",
                "description": "The default Subscription Key to be used when calling the TranslationService for this connector.",
                "type": "String",
                "cardinality": "required"
            },
            "languageMapLocation": {
                "name": "Microsoft Connector Language Map",
                "description": "The location of the language mapping nodes for the Microsoft Connector",
                "type": "String",
                "cardinality": "required",
                "default": "granite/translation/connector/config/msft/languageMapping"
            },
            "categoryMapLocation": {
                "name": "Microsoft Connector Category Map",
                "description": "The location of the category mapping nodes for the Microsoft Connector",
                "type": "String",
                "cardinality": "required",
                "default": "granite/translation/connector/config/msft/categoryMapping"
            },
            "retryAttempts": {
                "name": "Set Retry Attempts",
                "description": "Configure the number of API retry attempts.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "timeoutCount": {
                "name": "Set Timeout limit (millisecond)",
                "description": "Configure the timeout limit for http API call (millisecond). 0 means no timeout limit",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.adobe.granite.translation.core.impl.TranslationManagerImpl",
        "name": "Translation Integration Default Config",
        "description": "Description for com.adobe.granite.translation.core.impl.TranslationManagerImpl",
        "bundleName": "com.adobe.granite.translation.core",
        "attributes": {
            "defaultConnectorName": {
                "name": "Translation Integration default connector",
                "description": "The connector name of the system default implementation.",
                "type": "String",
                "cardinality": "required"
            },
            "defaultCategory": {
                "name": "Translation Integration default category",
                "description": "The system configured default category for the Translation Integration framework.  This value should correspond to a node name found within /libs/granite/translation/resources/categories",
                "type": "String",
                "cardinality": "required",
                "default": "general"
            }
        }
    },
    {
        "id": "com.adobe.granite.ui.clientlibs.impl.HtmlLibraryManagerImpl",
        "name": "Adobe Granite HTML Library Manager",
        "description": "Provides methods for including js/css files stored in the repository and resolves categories and dependencies.",
        "bundleName": "com.adobe.granite.ui.clientlibs",
        "attributes": {
            "htmllibmanager.timing": {
                "name": "Timing",
                "description": "Enable JS load timing statistics. Show the statistics by [ctrl][shift][u] after a page has been loaded.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "htmllibmanager.debug.init.js": {
                "name": "Debug Init Script",
                "description": "A Javascript snippet for enabling debugging and/or show the console.",
                "type": "String",
                "cardinality": "required",
                "default": "window.CQ_initial_log_level='INFO';"
            },
            "htmllibmanager.minify": {
                "name": "Minify",
                "description": "Compress js/css files using the YUI compressor (whitespace removal etc.)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "htmllibmanager.debug": {
                "name": "Debug",
                "description": "Serve js/css files individually instead of concatenating them for better client-side debugging.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "htmllibmanager.gzip": {
                "name": "Gzip",
                "description": "Use gzip compression for delivering js/css files.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "htmllibmanager.maxDataUriSize": {
                "name": "Max Data URI size",
                "description": "Specifies the maximum size (in bytes) of referenced resource in CSS to auto-line them as data-uris.",
                "type": "Long",
                "cardinality": "required",
                "default": 0
            },
            "htmllibmanager.maxage": {
                "name": "Max-Age",
                "description": "Defines the max-age in seconds set in the cache-control header. < 0 to disable (which is the default).",
                "type": "Long",
                "cardinality": "required",
                "default": -1
            },
            "htmllibmanager.forceCQUrlInfo": {
                "name": "Force CQURLInfo",
                "description": "Controls if the CQURLInfo object should always be injected (default is false)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "htmllibmanager.defaultthemename": {
                "name": "Default theme name",
                "description": "The name of the default theme that is used if it does not exist as the requested one.",
                "type": "String",
                "cardinality": "required",
                "default": "default"
            },
            "htmllibmanager.defaultuserthemename": {
                "name": "Default user theme name",
                "description": "The name of the default theme that is used if non specified",
                "type": "String",
                "cardinality": "required",
                "default": "default"
            },
            "htmllibmanager.clientmanager": {
                "name": "Library Manager Category",
                "description": "Category name of the client side library manager.",
                "type": "String",
                "cardinality": "required",
                "default": "granite.clientlibrarymanager"
            },
            "htmllibmanager.path.list": {
                "name": "Allowed Library Paths",
                "description": "List of paths that you are allowed to create CQ client libraries under.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/apps",
                    "/libs",
                    "/etc"
                ],
                "hint": "path"
            },
            "htmllibmanager.excluded.path.list": {
                "name": "Excluded Library Paths",
                "description": "List of paths that you are excluded to create CQ client libraries under.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/etc/workflow/instances",
                    "/etc/taskmanagement"
                ],
                "hint": "path"
            },
            "htmllibmanager.processor.js": {
                "name": "JS Processor Default Configs",
                "description": "Default config for JS processors in the format: \"mode:(name(;options))\". eg: min:yui;obfuscate=true",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "min:yui"
                ]
            },
            "htmllibmanager.processor.css": {
                "name": "CSS Processor Default Configs",
                "description": "Default config for CSS processors in the format: \"mode:(name(;options))\". eg: min:yui;obfuscate=true",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "min:yui"
                ]
            },
            "htmllibmanager.longcache.patterns": {
                "name": "Long term client side cache key",
                "description": "The path pattern list for long-caching in the format \"regexp;key\". if key equals to 'auto' it is automatically generated when this service restarts. use 'none' to disable it. Note that libraries having a 'longCacheKey' property overwrite whatever pattern would match them.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "htmllibmanager.longcache.format": {
                "name": "Long term cache key format",
                "description": "String.format() pattern to apply on the keys.",
                "type": "String",
                "cardinality": "required",
                "default": "lc-%s-lc"
            },
            "htmllibmanager.useFileSystemOutputCache": {
                "name": "Use filesystem output cache",
                "description": "Controls if the output cache is stored in the file system. (default is true)",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "htmllibmanager.fileSystemOutputCacheLocation": {
                "name": "Location of the filesystem output cache",
                "description": "Controls where the filesystem output cache is stored. When the value is set to null (default) the cache is stored on the bundle persistent storage area.",
                "type": "String",
                "cardinality": "required"
            },
            "htmllibmanager.disable.replacement": {
                "name": "Disabled replacements",
                "description": "List of libraries (paths) where library replacement is disabled.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.console.frags.WorkflowWithdrawFeature",
        "name": "AEM Workflow Withdraw Feature Flag",
        "description": "This Feature Flag would govern the AEM Workflow Withdraw Feature.",
        "bundleName": "com.adobe.granite.workflow.console",
        "attributes": {
            "enabled": {
                "name": "Enabled",
                "description": "Boolean flag indicating whether the Workflow Withdraw feature is enabled or not by this configuration",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.console.publish.WorkflowPublishEventService",
        "name": "Adobe Granite Workflow Publish Configuration",
        "description": "Description for com.adobe.granite.workflow.console.publish.WorkflowPublishEventService",
        "bundleName": "com.adobe.granite.workflow.console",
        "attributes": {
            "granite.workflow.WorkflowPublishEventService.enabled": {
                "name": "Enable workflow model generation on publish",
                "description": "When true, design time models modified on publish servers will generate a new runtime",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.core.jcr.WorkflowBucketManager",
        "name": "Adobe Granite Workflow Bucket Manager",
        "description": "workflow instance bucket manager",
        "bundleName": "com.adobe.granite.workflow.core",
        "attributes": {
            "bucketSize": {
                "name": "bucketSize.name",
                "description": "bucketSize.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.core.job.ExternalProcessJobHandler",
        "name": "Adobe Granite Workflow External Process Job Handler",
        "description": "Workflow job handler for external workflow processes",
        "bundleName": "com.adobe.granite.workflow.core",
        "attributes": {
            "default.timeout": {
                "name": "Default Timeout",
                "description": "The default polling timeout (in seconds). Used, if the timeout is not set on the workflow node.",
                "type": "Long",
                "cardinality": "required",
                "default": 3600
            },
            "max.timeout": {
                "name": "Max Timeout",
                "description": "The maximum timeout allowed (in seconds).",
                "type": "Long",
                "cardinality": "required",
                "default": 10800
            },
            "default.period": {
                "name": "Default Period",
                "description": "The default polling retry period (in seconds). Used if the period is not set on the workflow node.",
                "type": "Long",
                "cardinality": "required",
                "default": 300
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.core.job.JobHandler",
        "name": "Adobe Granite Workflow Job Handler",
        "description": "",
        "bundleName": "com.adobe.granite.workflow.core",
        "attributes": {
            "job.topics": {
                "name": "job.topics.name",
                "description": "job.topics.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "com/adobe/granite/workflow/job/**",
                    "com/adobe/granite/workflow/job",
                    "com/adobe/granite/workflow/transient/job/**"
                ]
            },
            "allow.self.process.termination": {
                "name": "Allow self process termination",
                "description": "when true a workflow process which calls WorkflowSession.terminate() will stop the workflow processing.  Provided for backwards compatibility.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.core.offloading.WorkflowOffloadingJobConsumer",
        "name": "Adobe Granite Workflow Offloading JobConsumer",
        "description": "A JobConsumer that allows executing and offloading  workflows.",
        "bundleName": "com.adobe.granite.offloading.workflow",
        "attributes": {
            "job.topics": {
                "name": "Job Topic",
                "description": "The job topic this instance of the job consumer is bound to.",
                "type": "String",
                "cardinality": "required",
                "default": "com/adobe/granite/workflow/offloading"
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.core.payloadmap.PayloadMoveListener",
        "name": "Adobe Granite Workflow PayloadMoveListener",
        "description": "PayloadMove Listener",
        "bundleName": "com.adobe.granite.workflow.core",
        "attributes": {
            "payload.move.white.list": {
                "name": "Payload White List",
                "description": "Payload paths which will have running workflows modified for if the payload is moved using repository operation",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content/dam(/.*)"
                ],
                "hint": "path"
            },
            "payload.move.handle.from.workflow.process": {
                "name": "Modify payload on move from a Workflow Process",
                "description": "Whether or not to modify the payload when a move event originates from a workflow process",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.core.PayloadMapCache",
        "name": "Workflow Payload Map Cache",
        "description": "PayloadMap Cache to speedup workflow-related operations.",
        "bundleName": "com.adobe.granite.workflow.core",
        "attributes": {
            "getSystemWorkflowModels": {
                "name": "System Models",
                "description": "Workflows to be treated as system workflows",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/var/workflow/models/scheduled_activation",
                    "/var/workflow/models/scheduled_deactivation"
                ]
            },
            "getPackageRootPath": {
                "name": "Deprecated Workflow Package root path",
                "description": "This setting has been moved to the com.adobe.granite.workflow.core.WorkflowConfig component and should be configured there.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.core.WorkflowConfig",
        "name": "Adobe Granite Workflow Configuration Service",
        "description": "",
        "bundleName": "com.adobe.granite.workflow.core",
        "attributes": {
            "cq.workflow.config.workflow.packages.root.path": {
                "name": "Workflow Packages Root Locations",
                "description": "Specifies the root paths under which workflow packages may be located.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/var/workflow/packages"
                ]
            },
            "cq.workflow.config.workflow.process.legacy.mode": {
                "name": "Workflow Process Legacy Mode",
                "description": "When true, WorkflowProcess implementations will receive an admin session to work with.  Provided for backwards compatibility.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "cq.workflow.config.allow.locking": {
                "name": "Enable lock and unlock WorkflowProcess",
                "description": "When false, the LockProcess and UnlockProcess operations become No-Ops.  When true, the operations are performed, for backwards compatibility.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.core.WorkflowSessionFactory",
        "name": "Adobe Granite Workflow Service",
        "description": "Manages access to workflow sessions as well as the lifecycle of the workflow engine.",
        "bundleName": "com.adobe.granite.workflow.core",
        "attributes": {
            "granite.workflowinbox.sort.propertyName": {
                "name": "Default Inbox Sort Property Name",
                "description": "The default name of the property on which to sort the inbox items",
                "type": "String",
                "cardinality": "required",
                "default": "startTime",
                "options": [
                    {
                        "label": "Creation Date",
                        "value": "startTime"
                    },
                    {
                        "label": "Start Date",
                        "value": "progressBeginTime"
                    },
                    {
                        "label": "Due Date",
                        "value": "dueTime"
                    },
                    {
                        "label": "Completion Date",
                        "value": "endTime"
                    },
                    {
                        "label": "Priority",
                        "value": "priority"
                    }
                ]
            },
            "granite.workflowinbox.sort.order": {
                "name": "Default Inbox Search Order",
                "description": "Whether inbox should sort in ASC (oldest first) or DESC (newest first) order on inboxitem start time",
                "type": "String",
                "cardinality": "required",
                "default": "DESC"
            },
            "cq.workflow.job.retry": {
                "name": "Job Retry Count",
                "description": "Specifies how often execution of a job should be retried before escalation procedure takes place",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "cq.workflow.superuser": {
                "name": "Superuser",
                "description": "List of superusers and superuser groups",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "admin",
                    "administrators",
                    "workflow-process-service",
                    "workflow-service",
                    "workflow-administrators",
                    "wcm-workflow-service"
                ]
            },
            "granite.workflow.inboxQuerySize": {
                "name": "Max Inbox Query Size",
                "description": "Maximum Inbox Query Size",
                "type": "Integer",
                "cardinality": "required",
                "default": 2000
            },
            "granite.workflow.adminUserGroupFilter": {
                "name": "Admin User and Group query filter",
                "description": "Whether or not admin group and user filters are performed in query for inbox items",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "granite.workflow.enforceWorkitemAssigneePermissions": {
                "name": "Enforce workitem assignee permissions",
                "description": "Restrict workitem access to only its assignee, superusers and the users with whom the workitem is shared",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "granite.workflow.enforceWorkflowInitiatorPermissions": {
                "name": "Enforce workflow initiator permissions",
                "description": "Restrict workflow access to only its initiator and superusers",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "granite.workflow.injectTenantIdInJobTopics": {
                "name": "Add TenantId to Job Topics",
                "description": "Adds tenant id to job topics so separate workflow queues can be created for different tenants",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "granite.workflow.maxPurgeSaveThreshold": {
                "name": "Purge Session Save Threshold",
                "description": "Maximum number of workflows to purge between session saves",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "granite.workflow.maxPurgeQueryCount": {
                "name": "Purge Query Result Count",
                "description": "Maximum number of rows to return per a purge query",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "com.adobe.granite.workflow.purge.Scheduler",
        "name": "Adobe Granite Workflow Purge Configuration",
        "description": "Add configurations for different purges to execute during maintenance",
        "bundleName": "com.adobe.granite.workflow.core",
        "attributes": {
            "scheduledpurge.name": {
                "name": "Job Name",
                "description": "Enter a descriptive name for this scheduled purge",
                "type": "String",
                "cardinality": "required"
            },
            "scheduledpurge.workflowStatus": {
                "name": "Workflow Status",
                "description": "Choose which status of WorkFlows to purge",
                "type": "String",
                "cardinality": "required",
                "default": "COMPLETED",
                "options": [
                    {
                        "label": "RUNNING",
                        "value": "RUNNING"
                    },
                    {
                        "label": "COMPLETED",
                        "value": "COMPLETED"
                    }
                ]
            },
            "scheduledpurge.modelIds": {
                "name": "Models To Purge",
                "description": "Enter model id for models to purge. Leave blank for all models",
                "type": "String",
                "cardinality": "unlimited"
            },
            "scheduledpurge.daysold": {
                "name": "Workflow Age",
                "description": "Enter how old workflows are before they are purged",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            }
        }
    },
    {
        "id": "com.adobe.octopus.ncomm.bootstrap",
        "name": "Adobe Octopus NComm Defaults",
        "description": "NativeComm configuration defaults",
        "bundleName": "com.adobe.suitetech.nativecomm",
        "attributes": {
            "maxConnections": {
                "name": "maxConnections.name",
                "description": "ncomm process pool size (0 == number of cpu cores)",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "maxRequests": {
                "name": "maxRequests.name",
                "description": "maximum number of requests per process (0 == unlimited)",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "requestTimeout": {
                "name": "requestTimeout.name",
                "description": "request timeout in milliseconds (0 == no timeout)",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "requestRetries": {
                "name": "requestRetries.name",
                "description": "maximum number of request retries (0 == do not retry)",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "launchTimeout": {
                "name": "launchTimeout.name",
                "description": "maximum time to wait for a spawned child process connection in milliseconds",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            }
        }
    },
    {
        "id": "com.adobe.social.integrations.livefyre.user.pingforpull.impl.PingPullServlet",
        "name": "com.adobe.social.integrations.livefyre.user.pingforpull.impl.PingPullServlet",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-livefyre",
        "attributes": {
            "communities.integration.livefyre.sling.event.filter": {
                "name": "Sling Event Filter for profiles",
                "description": "A filter to use for getting events when parts of the profile change",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.adobe.xmp.worker.files.ncomm.XMPFilesNComm",
        "name": "com.adobe.xmp.worker.files.ncomm.XMPFilesNComm",
        "description": "",
        "bundleName": "com.adobe.xmp.worker.files.host",
        "attributes": {
            "maxConnections": {
                "name": "maxConnections.name",
                "description": "maxConnections.description",
                "type": "String",
                "cardinality": "required",
                "default": "4"
            },
            "maxRequests": {
                "name": "maxRequests.name",
                "description": "maxRequests.description",
                "type": "String",
                "cardinality": "required",
                "default": "50000"
            },
            "requestTimeout": {
                "name": "requestTimeout.name",
                "description": "requestTimeout.description",
                "type": "String",
                "cardinality": "required",
                "default": "30000"
            },
            "logDir": {
                "name": "logDir.name",
                "description": "logDir.description",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.commons.datasource.jdbcpool.JdbcPoolService",
        "name": "Day Commons JDBC Connections Pool",
        "description": "Provides JDBC Datasources for the Datasource Pool Service",
        "bundleName": "day.commons.datasource.jdbcpool",
        "attributes": {
            "jdbc.driver.class": {
                "name": "JDBC driver class",
                "description": "Java class name of the JDBC driver to use",
                "type": "String",
                "cardinality": "required",
                "default": "com.somevendor.somedriver.Driver"
            },
            "jdbc.connection.uri": {
                "name": "JDBC connection URI",
                "description": "URI of the JDBC connection to use",
                "type": "String",
                "cardinality": "required",
                "default": "jdbc:somedriver:someDB;param=value"
            },
            "jdbc.username": {
                "name": "Username",
                "description": "JDBC authentication username",
                "type": "String",
                "cardinality": "required"
            },
            "jdbc.password": {
                "name": "Password",
                "description": "",
                "type": "Password",
                "cardinality": "required",
                "default": null
            },
            "jdbc.validation.query": {
                "name": "Validation query",
                "description": "Optional JDBC query used to validate connections",
                "type": "String",
                "cardinality": "required"
            },
            "default.readonly": {
                "name": "Readonly by default?",
                "description": "Set JDBC Connections to readonly mode by default",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "default.autocommit": {
                "name": "Autocommit by default?",
                "description": "Set JDBC Connections to autocommit mode by default",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "pool.size": {
                "name": "Pool size",
                "description": " Maximum number of Connections that this pool can open",
                "type": "Long",
                "cardinality": "required",
                "default": 10
            },
            "pool.max.wait.msec": {
                "name": "Pool wait (msec)",
                "description": "Maximum wait time, in milliseconds, before throwing an exception if all pooled Connections are in use",
                "type": "Long",
                "cardinality": "required",
                "default": 1000
            },
            "datasource.name": {
                "name": "Datasource name",
                "description": "Name of this data source",
                "type": "String",
                "cardinality": "required"
            },
            "datasource.svc.properties": {
                "name": "Additional Service Properties",
                "description": "Properties that are added additionally to the registered datasource service (name=value pairs)",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.commons.httpclient",
        "name": "Day Commons HTTP Client 3.1",
        "description": "Configuration for the Day Commons HTTP Client Wrapper",
        "bundleName": "com.day.commons.osgi.wrapper.commons-httpclient",
        "attributes": {
            "proxy.enabled": {
                "name": "Enable HTTP Proxy",
                "description": "Whether to enable or disable HTTP Proxying globally. Setting this property to false disables HTTP Proxying and the other configurtion properties have no effect. The default value is false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "proxy.host": {
                "name": "HTTP Proxy Host",
                "description": "Host name (or IP Address) and port of the HTTP Proxy. in the format host:port, e.g. proxy.corp.com:3128. This property is ignored if HTTP Proxying is disabled. This property does not have default value. Enabling HTTP Proxying but not setting the HTTP Proxy Host  causes HTTP Proxying to actually be disabled.",
                "type": "String",
                "cardinality": "required"
            },
            "proxy.user": {
                "name": "HTTP Proxy User",
                "description": "The name of the user to authenticate as with the HTTP Proxy Host. If this field is empty, the proxy is considered to not be authenticated. The default is empty. This property is ignored if proxying is disabled or the proxy host is not properly configured.",
                "type": "String",
                "cardinality": "required"
            },
            "proxy.password": {
                "name": "HTTP Proxy Password",
                "description": "The password of the HTTP Proxy user to authenticate with. The default is empty. This property is ignored if proxying is disabled or the proxy host is not properly configured.",
                "type": "Password",
                "cardinality": "required"
            },
            "proxy.ntlm.host": {
                "name": "HTTP Proxy NTLM Host",
                "description": "The host the authentication request is originating from.  Essentially, the computer name for this machine. By default the credentials assume simple username password authentication. If the proxy happens to be a Microsoft IIS Server using NTLM authentication this property must be set to the NT Domain name  of the user to authenticate as. This is not set by default.",
                "type": "String",
                "cardinality": "required"
            },
            "proxy.ntlm.domain": {
                "name": "HTTP Proxy NTLM Domain",
                "description": "The NTLM domain to authenticate within. By default the credentials assume simple username password authentication. If the proxy happens to be a Microsoft IIS Server using NTLM authentication this property must be set to the NT Domain name of the user to authenticate as. This is not set by default.",
                "type": "String",
                "cardinality": "required"
            },
            "proxy.exceptions": {
                "name": "No Proxy For",
                "description": "Lists domain names, host names, IP Addresses or or network addresses for which the HTTP Proxy Host should not be used. A domain name indicating all hosts of a domain is indicated by a leading dot, e.g. \".day.com\". A network address is indicated with subnet mask notation indicating the number of bits make up the network address, e.g 192.168.1.0/24 means the class C network \"192.168.1\". Note that for proxy selection, the host name of URL is not resolved but directly compared to the list of exceptions. For this reason you might want to indicate both the network address and the domain for targets which should not be passed through the proxy. This property has no effect if HTTP Proxying is  disabled. The default value is [ localhost, 127.0.0.1 ].",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "localhost",
                    "127.0.0.1"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.analytics.impl.StorePropertiesChangeListener",
        "name": "Client Context Store Properties Observation Service",
        "description": "Monitors changes in store 'properties' value  in order to invalidate the analytics query cache",
        "bundleName": "com.adobe.cq.cq-analytics-integration",
        "attributes": {
            "cq.store.listener.additionalStorePaths": {
                "name": "Store paths to observe for changes",
                "description": "Store paths to monitor for properties change",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/etc/clientcontext/"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.analytics.sitecatalyst.impl.exporter.ClassificationsExporter",
        "name": "Adobe AEM Classifications Exporter",
        "description": "Exports classification data to Analytics",
        "bundleName": "com.adobe.cq.cq-analytics-integration",
        "attributes": {
            "allowed.paths": {
                "name": "Allowed Source Paths",
                "description": "Allowed source paths for exporting data.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/var/export(/.*)?"
                ]
            },
            "cq.analytics.saint.exporter.pagesize": {
                "name": "Export Page Size",
                "description": "Page size for SAINT ImportJob population.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "com.day.cq.analytics.sitecatalyst.impl.importer.ReportImporter",
        "name": "Adobe AEM Analytics Report Importer",
        "description": "Imports Analytics Reports periodically into AEM",
        "bundleName": "com.adobe.cq.cq-analytics-integration",
        "attributes": {
            "report.fetch.attempts": {
                "name": "Fetch attempts",
                "description": "Number of attempts to fetch a queued report. Default is set to 6.",
                "type": "Integer",
                "cardinality": "required",
                "default": 6
            },
            "report.fetch.delay": {
                "name": "Fetch delay",
                "description": "Number in milliseconds between attempts to fetch a queued report. Default is set to 10000 (10s).",
                "type": "Long",
                "cardinality": "required",
                "default": 10000
            }
        }
    },
    {
        "id": "com.day.cq.analytics.sitecatalyst.impl.SitecatalystAdapterFactory",
        "name": "Adobe AEM Analytics Adapter Factory",
        "description": "Provides adapter functionality for Analytics objects",
        "bundleName": "com.adobe.cq.cq-analytics-integration",
        "attributes": {
            "cq.analytics.adapterfactory.contextstores": {
                "name": "Context stores",
                "description": "Context stores exposed for instrumentation.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "activitystream",
                    "eventdata",
                    "geolocation",
                    "mouseposition",
                    "pagedata",
                    "profile",
                    "resolvedsegments",
                    "socialgraph",
                    "surferinfo",
                    "tagcloud"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.analytics.sitecatalyst.impl.SitecatalystHttpClientImpl",
        "name": "Adobe AEM Analytics HTTP Client",
        "description": "HTTP Client for Analytics API",
        "bundleName": "com.adobe.cq.cq-analytics-integration",
        "attributes": {
            "cq.analytics.sitecatalyst.service.datacenter.url": {
                "name": "Data center URL",
                "description": "Default data center URL",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "https://api.omniture.com/admin/1.4/rest/",
                    "https://api2.omniture.com/admin/1.4/rest/",
                    "https://api3.omniture.com/admin/1.4/rest/",
                    "https://api4.omniture.com/admin/1.4/rest/",
                    "https://api5.omniture.com/admin/1.4/rest/",
                    "https://beta-api.omniture.com/admin/1.4/rest/",
                    "https://beta-api2.omniture.com/admin/1.4/rest/",
                    "https://api-sbx1.omniture.com/admin/1.4/rest/"
                ]
            },
            "devhostnamepatterns": {
                "name": "Hostname patterns",
                "description": "Development machines hostname regular expression patterns",
                "type": "String",
                "cardinality": 1024,
                "default": [
                    ".*(\\.dev|\\.ut1)+\\.omniture\\.com$"
                ]
            },
            "connection.timeout": {
                "name": "Connection timeout",
                "description": "Timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "socket.timeout": {
                "name": "Socket timeout",
                "description": "Timeout in milliseconds for waiting for data or a maximum period of inactivity between two consecutive data packets. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            }
        }
    },
    {
        "id": "com.day.cq.analytics.testandtarget.impl.AccountOptionsUpdater",
        "name": "Adobe Target account options updater",
        "description": "Updates the Adobe Target cloud configuration options with the account options from Taget",
        "bundleName": "com.adobe.cq.cq-target-integration",
        "attributes": {
            "cq.analytics.testandtarget.accountoptionsupdater.enabled": {
                "name": "Enabled",
                "description": "Controls whether this importer is enabled or not. Defaults to true on author instances and false on publish instances.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.analytics.testandtarget.impl.DeleteAuthorActivityListener",
        "name": "Delete Adobe Target activity listener",
        "description": "Deletes the activity in Adobe Target when the activity is deleted in AEM",
        "bundleName": "com.adobe.cq.cq-target-integration",
        "attributes": {
            "cq.analytics.testandtarget.deleteauthoractivitylistener.enabled": {
                "name": "Service enabled",
                "description": "Enable/disable page listener",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.analytics.testandtarget.impl.PushAuthorCampaignPageListener",
        "name": "Day CQ Analytics Push Author Campaign Page Listener",
        "description": "Pushes author campaign data to Adobe Target",
        "bundleName": "com.adobe.cq.cq-target-integration",
        "attributes": {
            "cq.analytics.testandtarget.pushauthorcampaignpagelistener.enabled": {
                "name": "Service enabled",
                "description": "Enable/disable page listener",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.analytics.testandtarget.impl.SegmentImporter",
        "name": "Day CQ Analytics Segment Importer",
        "description": "Imports segments defined in Test and Target into the CQ instance.",
        "bundleName": "com.adobe.cq.cq-target-integration",
        "attributes": {
            "cq.analytics.testandtarget.segmentimporter.enabled": {
                "name": "Enabled",
                "description": "Controls whether this importer is enabled or not. Defaults to true on author instances and false on publish instances.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.analytics.testandtarget.impl.service.WebServiceImpl",
        "name": "Adobe Target HTTP Client",
        "description": "HTTP Client used to communicate with Adobe Target API",
        "bundleName": "com.adobe.cq.cq-target-integration",
        "attributes": {
            "endpointUri": {
                "name": "API endpoint URI",
                "description": "The Adobe Target API endpoint URI. Default is https://mc.adobe.io",
                "type": "String",
                "cardinality": "required",
                "default": "https://mc.adobe.io"
            },
            "connectionTimeout": {
                "name": "Connection timeout",
                "description": "Timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout. Default is 60000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            },
            "socketTimeout": {
                "name": "Socket timeout",
                "description": "Timeout in milliseconds for waiting for data or a maximum period of inactivity between two consecutive data packets. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            }
        }
    },
    {
        "id": "com.day.cq.analytics.testandtarget.impl.servlets.AdminServerServlet",
        "name": "Adobe Test & Target Endpoint Configuration",
        "description": "",
        "bundleName": "com.adobe.cq.cq-target-integration",
        "attributes": {
            "testandtarget.endpoint.url": {
                "name": "T&T endpoint URL",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "https://admin.testandtarget.omniture.com/rest/v1/endpoint"
            }
        }
    },
    {
        "id": "com.day.cq.analytics.testandtarget.impl.TestandtargetHttpClientImpl",
        "name": "Adobe AEM Target HTTP Client",
        "description": "HTTP Client for Adobe Target",
        "bundleName": "com.adobe.cq.cq-target-integration",
        "attributes": {
            "cq.analytics.testandtarget.api.url": {
                "name": "Adobe Target API URL",
                "description": "URL of the Adobe Target API",
                "type": "String",
                "cardinality": "required",
                "default": "https://admin.testandtarget.omniture.com/api"
            },
            "cq.analytics.testandtarget.timeout": {
                "name": "Connection timeout",
                "description": "Timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout. Default is 60000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            },
            "cq.analytics.testandtarget.sockettimeout": {
                "name": "Socket timeout",
                "description": "Timeout in milliseconds for waiting for data or a maximum period of inactivity between two consecutive data packets. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "cq.analytics.testandtarget.recommendations.url.replace": {
                "name": "Adobe Target Recommendations URL replace regex token",
                "description": "Controls the token in Adobe Target endpoint URL that needs to be replaced to point to the Target Recommendations API URL",
                "type": "String",
                "cardinality": "required",
                "default": "/rest"
            },
            "cq.analytics.testandtarget.recommendations.url.replacewith": {
                "name": "Adobe Target Recommendations URL replace with token",
                "description": "Replacement for the regex above so that the resulting URL will point to Target Recommendations API",
                "type": "String",
                "cardinality": "required",
                "default": "/rest/recs"
            }
        }
    },
    {
        "id": "com.day.cq.auth.impl.cug.CugSupportImpl",
        "name": "Adobe Granite Closed User Group (CUG) Support",
        "description": "Configures the support for Closed User Groups. Please note, that Closed User Group configuration must be available for Closed User Group support to be available at all. In addition, existing Closed User Group configuration may still disable Closed User Groups by setting the \"Enable CUG Roots\" property to false. This may for example be used to preserve the list of exempted principals while still (temporarily) disable support for Closed User Groups.",
        "bundleName": "com.day.cq.cq-authhandler",
        "attributes": {
            "cug.exempted.principals": {
                "name": "CUG Exempted Principals",
                "description": "List of Principals for which any CUG restrictions do not apply.",
                "type": "String",
                "cardinality": 200,
                "default": [
                    "administrators"
                ]
            },
            "cug.enabled": {
                "name": "Enable CUG Roots",
                "description": "Whether or not CUG roots are enabled on a global level or not. If this flag is not set (the default), CUG roots are not enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "cug.principals.regex": {
                "name": "Regular expression",
                "description": "The regular expression to which the principle name is to be matched while creating ACEs.",
                "type": "String",
                "cardinality": "required"
            },
            "cug.principals.replacement": {
                "name": "Replacement",
                "description": "The string to be substituted for each match",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.auth.impl.LoginSelectorHandler",
        "name": "Adobe Granite Login Selector Authentication Handler",
        "description": "Selects a login form based on a mapping configuration.",
        "bundleName": "com.day.cq.cq-authhandler",
        "attributes": {
            "path": {
                "name": "Path",
                "description": "Repository path for which this authentication handler should be used by Sling. If this is empty, the authentication handler will be disabled.",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "service.ranking": {
                "name": "Service Ranking",
                "description": "OSGi Framework Service Ranking value to indicate the order in which to call this service. This is an int value where higher values designate higher precendence. Default value is 5000.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "auth.loginselector.mappings": {
                "name": "Login Page Mappings",
                "description": "Maps login pages to content trees. The format is <login-page-path>:<content-tree>, e.g. /content/mysite/login:/content/mysite. Any mappings defined here are overriden by any Login Page Mappings Configuration via a content page (see below).",
                "type": "String",
                "cardinality": 100
            },
            "auth.loginselector.changepw.mappings": {
                "name": "Change Password Page Mappings",
                "description": "Maps change password pages to content trees. The format is <login-page-path>:<content-tree>, e.g. /content/mysite/login:/content/mysite.",
                "type": "String",
                "cardinality": 100
            },
            "auth.loginselector.defaultloginpage": {
                "name": "Default Login Page",
                "description": "If no mappings are defined, nor no mapping matches the request, this is the default login page being redirected to. This can be overridden in the content page configuration.",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/cq/core/content/login",
                "hint": "path"
            },
            "auth.loginselector.defaultchangepwpage": {
                "name": "Default Change Password Page",
                "description": "If no mappings are defined, nor no mapping matches the request, this is the default change password page being redirected to.",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/granite/core/content/changepassword",
                "hint": "path"
            },
            "auth.loginselector.handle": {
                "name": "Path Info",
                "description": "A list of request extensions indicating requests for which the Login Selector Authentication Handler may request credentials. Any request whose extension is not one the listed extensions will not cause the credentials to be requested. If this list is empty the default list of html and htm is used. Note that the list entries must not have leading dots. Requests without extension or requests with trailing slashes (/) are always handled by the Login Selector Authentication Handler regardless of this configuration. ",
                "type": "String",
                "cardinality": 2000,
                "default": [
                    "html",
                    "htm"
                ]
            },
            "auth.loginselector.handle.all.extensions": {
                "name": "Handle all Extensions",
                "description": "If enabled, the Login Selector Handler will request credentials for all extensions, regardless of the above configuration.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.commons.impl.ExternalizerImpl",
        "name": "Day CQ Link Externalizer",
        "description": "Creates absolute URLs",
        "bundleName": "com.day.cq.cq-commons",
        "attributes": {
            "externalizer.domains": {
                "name": "Domains",
                "description": "List of domain mappings. In the form: \"name [scheme://]domain.com[:port][/contextpath]\". Standard required names are \"publish\" (public website DNS, such as \"http://www.mysite.com\"), \"author\" (author DNS, such as \"https://author.mysite.com\") and \"local\" (this instance directly). The scheme will be used as default scheme (if not specified by the code) and can globally define whether http or https is desired. The context path must match the installation of the sling launchpad webapp on that instance. Additional custom domains can be added, each with a unique name.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "local http://localhost:4502",
                    "author http://localhost:4502",
                    "publish http://localhost:4503"
                ]
            },
            "externalizer.host": {
                "name": "Host name",
                "description": "Deprecated - use \"local\" under domains instead and keep this property empty. - Host and port of the server as adressed from the outside, e.g. \"server.com\" or \"server.com:8080\".",
                "type": "String",
                "cardinality": "required"
            },
            "externalizer.contextpath": {
                "name": "Context path",
                "description": "Deprecated - use \"local\" under domains instead and keep this property empty. - Context path under which the CQ/Sling launchpad webapp is running, e.g. \"/contextpath\".",
                "type": "String",
                "cardinality": "required"
            },
            "externalizer.encodedpath": {
                "name": "Assume encoded path",
                "description": "If active, Externalizer assumes that resource paths passed to its methods are URL-encoded. This might be necessary if your resource paths potentially contain \"?\" and/or \"#\" (which would be considered to start the query string/the fragment of the URL otherwise). Note that activating this setting may cause issues with other parts of the application that assume non-encoded paths if affected resource paths contain characters that need to be URL-encoded.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.commons.servlets.RootMappingServlet",
        "name": "Day CQ Root Mapping",
        "description": "rootmapping.desc",
        "bundleName": "com.day.cq.cq-commons",
        "attributes": {
            "rootmapping.target": {
                "name": "Target Path",
                "description": "rootmapping.target.desc",
                "type": "String",
                "cardinality": "required",
                "default": "/content",
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.compat.codeupgrade.impl.CodeUpgradeExecutionConditionChecker",
        "name": "Upgradeexecutor Precondition Checks",
        "description": "Does verify that all configured preconditions are met before triggering the upgrades executor.",
        "bundleName": "com.day.cq.cq-compat-codeupgrade",
        "attributes": {
            "codeupgradetasks": {
                "name": "codeupgradetasks",
                "description": "CodeUpgradeTasks that need to be registered as services before marker service is registered.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "com.day.cq.compat.codeupgrade.impl.cq561.Cq561ProjectContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq60.Cq60MSMContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq61.Cq61CloudServicesContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq62.Cq62FormsContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq62.Cq62ConfContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq62.CQ62Html5SmartFileUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq62.Cq62MediaContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq62.Cq62ProjectsCodeUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq62.Cq62TargetCampaignsContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq62.Cq62TargetContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq62.Cq62WorkflowContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq63.CQ63InboxItemsUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq63.CQ63MobileAppsNavUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.mergebackup.CqMergeBackupUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq63.CQ63MetadataSchemaConfigUpdate",
                    "com.day.cq.compat.codeupgrade.impl.cq63.CQ63ProcessingProfileConfigUpdate",
                    "com.day.cq.compat.codeupgrade.impl.cq63.CQ63AssetsMetadataFormsUpdate",
                    "com.day.cq.compat.codeupgrade.impl.cq63.CQ63AssetsSearchFacetsUpdate",
                    "com.day.cq.compat.codeupgrade.impl.cq63.CQ63ToolsMenuEntriesContentUpgrade",
                    "com.day.cq.compat.codeupgrade.impl.cq64.CQ64UsersTitleFixTask"
                ]
            },
            "codeupgradetaskfilters": {
                "name": "CodeUpgradeTaskFilters",
                "description": "The list of CodeUpgradeTaskFilters that has to be registered as service for the upgrade executor to proceed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "com.day.cq.compat.codeupgrade.impl.UpgradeTaskIgnoreList",
                    "com.day.cq.compat.codeupgrade.impl.VersionRangeTaskIgnorelist"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.compat.codeupgrade.impl.UpgradeTaskIgnoreList",
        "name": "UpgradeTask Ignore List",
        "description": "CodeUpgradeTaskFilter that allows definition of CodeUpgradeTasks to skip via Fully Qualified Classname listed in OSGI Configuration",
        "bundleName": "com.day.cq.cq-compat-codeupgrade",
        "attributes": {
            "upgradeTaskIgnoreList": {
                "name": "codeupgradetasks",
                "description": "Define classes to be ignored via Fully Qualified Classnames to mark them as ignored in upgrade execution",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.compat.codeupgrade.impl.VersionRangeTaskIgnorelist",
        "name": "VersionRange Task Ignore List",
        "description": "CodeUpgradeTaskFilter that checks VersionRange annotations in CodeUpgradeTasks and compares against provided bundle list from source instance when provided. Does skip when VersionRange is configured and found version is not in range.",
        "bundleName": "com.day.cq.cq-compat-codeupgrade",
        "attributes": {
            "effectiveBundleListPath": {
                "name": "Filesystem Path to Bundlelist",
                "description": "Define filesystem path to (exported) Bundlelist (/system/console/bundles.json) of source instance to autoignore unnecessary CodeUpgradeTasks, defaults to conf/sourceInstanceBundles.json in sling.home",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.contentsync.impl.ContentSyncManagerImpl",
        "name": "Day CQ Content Sync Manager",
        "description": "Responsible for cache updates and content delivery using zip files.",
        "bundleName": "com.day.cq.cq-content-sync",
        "attributes": {
            "contentsync.fallback.authorizable": {
                "name": "Fallback cache authorizable",
                "description": "Fallback authorizable for cache operations in case it is not properly set on a configuration",
                "type": "String",
                "cardinality": "required",
                "default": "everyone"
            },
            "contentsync.fallback.updateuser": {
                "name": "Fallback content update user",
                "description": "Fallback user for content updates in case it is not properly set on a configuration",
                "type": "String",
                "cardinality": "required",
                "default": "contentsync-service"
            }
        }
    },
    {
        "id": "com.day.cq.dam.commons.handler.StandardImageHandler",
        "name": "Component com.day.cq.dam.commons.handler.StandardImageHandler",
        "description": "Description for com.day.cq.dam.commons.handler.StandardImageHandler",
        "bundleName": "com.day.cq.dam.cq-dam-commons",
        "attributes": {
            "large_file_threshold": {
                "name": "Threshold size to use intermediate temporary file",
                "description": "Asset size greater than threshold use temporary file instead of memory buffer to avoid OutOfMemoryError. Value of -1 means that the use of temporary file is disabled. 0 means it is enabled for all sizes.",
                "type": "Long",
                "cardinality": "required",
                "default": 0
            },
            "large_comment_threshold": {
                "name": "Threshold size to skip comments being stored",
                "description": "Comment size greater than threshold will not be stored. Value of -1 means that all comments would be stored irrespective of their size.",
                "type": "Long",
                "cardinality": "required",
                "default": 5000
            },
            "cq.dam.enable.ext.meta.extraction": {
                "name": "Property cq.dam.enable.ext.meta.extraction",
                "description": "Description for cq.dam.enable.ext.meta.extraction",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.commons.metadata.XmpFilterBlackWhite",
        "name": "Adobe CQ DAM XmpFilter",
        "description": "Filtering Xmp Properties by black-/white-listing names and namespaces",
        "bundleName": "com.day.cq.dam.cq-dam-commons",
        "attributes": {
            "xmp.filter.apply_whitelist": {
                "name": "Apply Whitelist to XMP Properties",
                "description": "Only let the whitelisted xmp properties through, applied before any blacklist",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "xmp.filter.whitelist": {
                "name": "Whitelisted XML Names for XMP filtering",
                "description": "XML Names, such as '{namespace-uri}name', '{namespace-uri}*', 'prefix:name' and 'prefix:*', passed on during XMP filtering. Use '[>n]' or '[<n]' to limit the values accepted for multi-valued XMP properties. Example: 'history[<100]' will only let the first 99 values through",
                "type": "String",
                "cardinality": "unlimited"
            },
            "xmp.filter.apply_blacklist": {
                "name": "Apply Blacklist to XMP Properties",
                "description": "Filter out the blacklisted xmp properties, applied after any whitelisting",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "xmp.filter.blacklist": {
                "name": "Blacklisted XML Names for XMP filtering",
                "description": "XML Names, such as '{namespace-uri}name', '{namespace-uri}*', 'prefix:name' and 'prefix:*', filtered out during XMP processing. Use '[>n]' or '[<n]' to limit the values removed for multi-valued XMP properties. Example: 'history[>100]' discards the 101st and following values.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "{http://ns.adobe.com/photoshop/1.0/}DocumentAncestors[>100]"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.commons.util.impl.AssetCacheImpl",
        "name": "Adobe CQ DAM Asset Cache",
        "description": "Manages asset caching during processing",
        "bundleName": "com.day.cq.dam.cq-dam-commons",
        "attributes": {
            "large.file.min": {
                "name": "Asset Size Threshold",
                "description": "Assets with this size or larger are processed using temporary file storage. Use -1 to disable.",
                "type": "Long",
                "cardinality": "required",
                "default": 1024
            },
            "cache.apply": {
                "name": "Active",
                "description": "When not active, the cache will not try to keep temporary files around for future use.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "mime.types": {
                "name": "Mime types for which Asset content is being cached.",
                "description": "Mime Types of assets where content is cached when size exceeds threshold. Use '/*' to match a whole group of types, e.g. 'image/*'. Use '*' or '*/*' to use caching for all types of content",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "image/*"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.annotation.pdf.AnnotationPdfConfig",
        "name": "Annotation PDF Config",
        "description": "Configuration for printing asset annotations to a PDF document",
        "bundleName": "com.day.cq.dam.cq-dam-annotation-print",
        "attributes": {
            "cq.dam.config.annotation.pdf.document.width": {
                "name": "Document Width",
                "description": "Defines the width of the PDF document in points",
                "type": "Integer",
                "cardinality": "required",
                "default": 612
            },
            "cq.dam.config.annotation.pdf.document.height": {
                "name": "Document Height",
                "description": "Defines the height of the PDF document in points",
                "type": "Integer",
                "cardinality": "required",
                "default": 792
            },
            "cq.dam.config.annotation.pdf.document.padding.horizontal": {
                "name": "Document Padding (Horizontal)",
                "description": "Defines the left and the right padding of the PDF document in points",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "cq.dam.config.annotation.pdf.document.padding.vertical": {
                "name": "Document Padding (Vertical)",
                "description": "Defines the top and the bottom padding of the PDF document in points",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "cq.dam.config.annotation.pdf.font.size": {
                "name": "Document Font Size",
                "description": "Defines the default font size for the text in the PDF document in points",
                "type": "Integer",
                "cardinality": "required",
                "default": 7
            },
            "cq.dam.config.annotation.pdf.font.color": {
                "name": "Document Font Color",
                "description": "Defines the font color for the annotation text in the PDF document in hexadecimal",
                "type": "String",
                "cardinality": "required",
                "default": "3B3B3B"
            },
            "cq.dam.config.annotation.pdf.font.family": {
                "name": "Document Font Family",
                "description": "Defines the font family for the annotation text in the PDF document. A comma separated list of font-families should be appended to this list to add support for a new language for annotations. This requires that the fonts are present in the system and have been configured by the FontManagerService config",
                "type": "String",
                "cardinality": "required",
                "default": "Arial Unicode MS, Noto Sans, Noto Sans CJK JP, sans-serif"
            },
            "cq.dam.config.annotation.pdf.font.light": {
                "name": "Document Font Light",
                "description": "Defines the light font color for the PDF document",
                "type": "String",
                "cardinality": "required",
                "default": "A4A4A4"
            },
            "cq.dam.config.annotation.pdf.marginTextImage": {
                "name": "Margin between the text and the image",
                "description": "Defines the margin between the annotation texts and the asset images in points",
                "type": "Integer",
                "cardinality": "required",
                "default": 14
            },
            "cq.dam.config.annotation.pdf.minImageHeight": {
                "name": "Minimum Image Height",
                "description": "Defines the minimum image height in points",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "cq.dam.config.annotation.pdf.reviewStatus.width": {
                "name": "Review Status Width",
                "description": "Defines the width of the review status stamp in points",
                "type": "Integer",
                "cardinality": "required",
                "default": 150
            },
            "cq.dam.config.annotation.pdf.reviewStatus.color.approved": {
                "name": "Review Status (Approved) Color",
                "description": "Defines the background color for an approved review status in hexadecimal",
                "type": "String",
                "cardinality": "required",
                "default": "20CE6D"
            },
            "cq.dam.config.annotation.pdf.reviewStatus.color.rejected": {
                "name": "Review Status (Rejected) Color",
                "description": "Defines the background color for a rejected review status in hexadecimal",
                "type": "String",
                "cardinality": "required",
                "default": "fa7d73"
            },
            "cq.dam.config.annotation.pdf.reviewStatus.color.changesRequested": {
                "name": "Review Status (Change Requested) Color",
                "description": "Defines the background color for a change-requested review status in hexadecimal",
                "type": "String",
                "cardinality": "required",
                "default": "fad269"
            },
            "cq.dam.config.annotation.pdf.annotationMarker.width": {
                "name": "Annotation Marker Width",
                "description": "Defines the width of the annotation marker in points",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "cq.dam.config.annotation.pdf.asset.minheight": {
                "name": "Minimum Height of a Asset",
                "description": "Defines the minimum height of an asset (printed with annotations on the same page) as the percentage of the page height",
                "type": "Integer",
                "cardinality": "required",
                "default": 25
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.assethome.AssetHomePageConfiguration",
        "name": "DAM Asset Home Page Feature Flag",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "isEnabled": {
                "name": "isEnabled.name",
                "description": "Enable this configuration to turn on Asset Home Page feature.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.assetlinkshare.AdhocAssetShareProxyServlet",
        "name": "Day CQ DAM Adhoc Asset Share Proxy Servlet",
        "description": "Asset Link Share Proxy Servlet",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.adhoc.asset.share.prezip.maxcontentsize": {
                "name": "Max Content Size (uncompressed)",
                "description": "Size (in bytes) above which Zip download requests are Forbidden",
                "type": "Long",
                "cardinality": "required",
                "default": 104857600
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.AssetMoveListener",
        "name": "com.day.cq.dam.core.impl.AssetMoveListener",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "enabled": {
                "name": "enabled.name",
                "description": "enabled.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.cache.CQBufferedImageCache",
        "name": "Day CQ DAM Buffered Image Cache",
        "description": "The buffered image cache for DAM.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.image.cache.max.memory": {
                "name": "Max Memory",
                "description": "Maximum memory or -1",
                "type": "Long",
                "cardinality": "required",
                "default": -1
            },
            "cq.dam.image.cache.max.age": {
                "name": "Max Age",
                "description": "Maximum age in milliseconds",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            },
            "cq.dam.image.cache.max.dimension": {
                "name": "Max Dimension",
                "description": "Maximum Dimension",
                "type": "String",
                "cardinality": "required",
                "default": "1280x1280"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.DamChangeEventListener",
        "name": "Day CQ DAM Change Event Listener",
        "description": "Listens to repository change events on assets in order to re-distribute them as OGSi DAM Events",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "changeeventlistener.observed.paths": {
                "name": "Observed Repository Paths",
                "description": "The paths which are observed for asset changes.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content/dam"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.DamEventPurgeService",
        "name": "DAM Event Purge Service",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "scheduler.expression": {
                "name": "scheduler.expression.name",
                "description": "scheduler.expression.description",
                "type": "String",
                "cardinality": "required",
                "default": "* * 23 * * ?"
            },
            "maxSavedActivities": {
                "name": "Number of activities to keep under each user",
                "description": "maxSavedActivities.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 150
            },
            "saveInterval": {
                "name": "Save session state after deleting activities",
                "description": "Number of delete operations after which state of system should be saved",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "enableActivityPurge": {
                "name": "Enable purging of old activity record",
                "description": "This will enable the purging of user activities recorded by DamEventRecorder",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "eventTypes": {
                "name": "Select the activity types you want to purge",
                "description": "eventTypes.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "ACCEPTED",
                    "ASSET_CREATED",
                    "ASSET_MOVED",
                    "ASSET_REMOVED",
                    "ASSET_EXPIRED",
                    "ASSET_EXPIRING",
                    "REJECTED",
                    "VERSIONED",
                    "RESTORED",
                    "METADATA_UPDATED",
                    "PUBLISHED_EXTERNAL",
                    "ORIGINAL_UPDATED",
                    "RENDITION_UPDATED",
                    "RENDITION_REMOVED",
                    "SUBASSET_REMOVED",
                    "SUBASSET_UPDATED",
                    "ASSET_VIEWED",
                    "ASSET_SHARED",
                    "ASSET_PUBLISHED",
                    "ADDED_COMMENT",
                    "PROJECT_VIEWED",
                    "COLLECTION_VIEWED"
                ],
                "options": [
                    {
                        "label": "License accepted (ACCEPTED)",
                        "value": "ACCEPTED"
                    },
                    {
                        "label": "Asset created (ASSET_CREATED)",
                        "value": "ASSET_CREATED"
                    },
                    {
                        "label": "Asset moved (ASSET_MOVED)",
                        "value": "ASSET_MOVED"
                    },
                    {
                        "label": "Asset removed (ASSET_REMOVED)",
                        "value": "ASSET_REMOVED"
                    },
                    {
                        "label": "Asset expired (ASSET_EXPIRED)",
                        "value": "ASSET_EXPIRED"
                    },
                    {
                        "label": "Asset expiring (ASSET_EXPIRING)",
                        "value": "ASSET_EXPIRING"
                    },
                    {
                        "label": "License rejected (REJECTED)",
                        "value": "REJECTED"
                    },
                    {
                        "label": "Asset downloaded (DOWNLOADED)",
                        "value": "DOWNLOADED"
                    },
                    {
                        "label": "Asset versioned (VERSIONED)",
                        "value": "VERSIONED"
                    },
                    {
                        "label": "Asset version restored (RESTORED)",
                        "value": "RESTORED"
                    },
                    {
                        "label": "Asset Metadata updated (METADATA_UPDATED)",
                        "value": "METADATA_UPDATED"
                    },
                    {
                        "label": "Asset published to external system (PUBLISHED_EXTERNAL)",
                        "value": "PUBLISHED_EXTERNAL"
                    },
                    {
                        "label": "Asset's original updated (ORIGINAL_UPDATED)",
                        "value": "ORIGINAL_UPDATED"
                    },
                    {
                        "label": "Asset Rendition updated (RENDITION_UPDATED)",
                        "value": "RENDITION_UPDATED"
                    },
                    {
                        "label": "Asset Rendition removed (RENDITION_REMOVED)",
                        "value": "RENDITION_REMOVED"
                    },
                    {
                        "label": "Sub-asset updated (SUBASSET_UPDATED)",
                        "value": "SUBASSET_UPDATED"
                    },
                    {
                        "label": "Sub-asset removed (SUBASSET_REMOVED)",
                        "value": "SUBASSET_REMOVED"
                    },
                    {
                        "label": "Asset Viewed (ASSET_VIEWED)",
                        "value": "ASSET_VIEWED"
                    },
                    {
                        "label": "Asset Shared on Cloud Solutions (ASSET_SHARED)",
                        "value": "ASSET_SHARED"
                    },
                    {
                        "label": "Asset Published (ASSET_PUBLISHED)",
                        "value": "ASSET_PUBLISHED"
                    },
                    {
                        "label": "Project Viewed (PROJECT_VIEWED)",
                        "value": "PROJECT_VIEWED"
                    },
                    {
                        "label": "Collection Viewed (COLLECTION_VIEWED)",
                        "value": "COLLECTION_VIEWED"
                    },
                    {
                        "label": "Added Comment (ADDED_COMMENT)",
                        "value": "ADDED_COMMENT"
                    }
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.DamEventRecorderImpl",
        "name": "Day CQ DAM Event Recorder",
        "description": "Listens to DAM Events and records them as an activity stream into the 'dam' stream in a user's home directory.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "event.filter": {
                "name": "event.filter.name",
                "description": "event.filter.description",
                "type": "String",
                "cardinality": "required",
                "default": "(!(event.application=*))"
            },
            "event.queue.length": {
                "name": "event.queue.length.name",
                "description": "event.queue.length.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "eventrecorder.enabled": {
                "name": "Enables this service",
                "description": "Uncheck to disable activity stream recording.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "eventrecorder.blacklist": {
                "name": "Users whose activities should not be recorded",
                "description": "eventrecorder.blacklist.description",
                "type": "String",
                "cardinality": "unlimited"
            },
            "eventrecorder.eventtypes": {
                "name": "Event Types",
                "description": "Define which event types shall be recorded.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "ASSET_CREATED",
                    "DOWNLOADED",
                    "VERSIONED",
                    "ASSET_VIEWED",
                    "ASSET_SHARED",
                    "ASSET_PUBLISHED",
                    "ADDED_COMMENT",
                    "PROJECT_VIEWED",
                    "COLLECTION_VIEWED"
                ],
                "options": [
                    {
                        "label": "License accepted (ACCEPTED)",
                        "value": "ACCEPTED"
                    },
                    {
                        "label": "Asset created (ASSET_CREATED)",
                        "value": "ASSET_CREATED"
                    },
                    {
                        "label": "Asset moved (ASSET_MOVED)",
                        "value": "ASSET_MOVED"
                    },
                    {
                        "label": "Asset removed (ASSET_REMOVED)",
                        "value": "ASSET_REMOVED"
                    },
                    {
                        "label": "Asset expired (ASSET_EXPIRED)",
                        "value": "ASSET_EXPIRED"
                    },
                    {
                        "label": "Asset expiring (ASSET_EXPIRING)",
                        "value": "ASSET_EXPIRING"
                    },
                    {
                        "label": "License rejected (REJECTED)",
                        "value": "REJECTED"
                    },
                    {
                        "label": "Asset downloaded (DOWNLOADED)",
                        "value": "DOWNLOADED"
                    },
                    {
                        "label": "Asset versioned (VERSIONED)",
                        "value": "VERSIONED"
                    },
                    {
                        "label": "Asset version restored (RESTORED)",
                        "value": "RESTORED"
                    },
                    {
                        "label": "Asset Metadata updated (METADATA_UPDATED)",
                        "value": "METADATA_UPDATED"
                    },
                    {
                        "label": "Asset published to external system (PUBLISHED_EXTERNAL)",
                        "value": "PUBLISHED_EXTERNAL"
                    },
                    {
                        "label": "Asset's original updated (ORIGINAL_UPDATED)",
                        "value": "ORIGINAL_UPDATED"
                    },
                    {
                        "label": "Asset Rendition updated (RENDITION_UPDATED)",
                        "value": "RENDITION_UPDATED"
                    },
                    {
                        "label": "Asset Rendition removed (RENDITION_REMOVED)",
                        "value": "RENDITION_REMOVED"
                    },
                    {
                        "label": "Asset Rendition downloaded (RENDITION_DOWNLOADED)",
                        "value": "RENDITION_DOWNLOADED"
                    },
                    {
                        "label": "Sub-asset updated (SUBASSET_UPDATED)",
                        "value": "SUBASSET_UPDATED"
                    },
                    {
                        "label": "Sub-asset removed (SUBASSET_REMOVED)",
                        "value": "SUBASSET_REMOVED"
                    },
                    {
                        "label": "Asset Viewed (ASSET_VIEWED)",
                        "value": "ASSET_VIEWED"
                    },
                    {
                        "label": "Asset Shared on Cloud Solutions (ASSET_SHARED)",
                        "value": "ASSET_SHARED"
                    },
                    {
                        "label": "Asset Published (ASSET_PUBLISHED)",
                        "value": "ASSET_PUBLISHED"
                    },
                    {
                        "label": "Project Viewed (PROJECT_VIEWED)",
                        "value": "PROJECT_VIEWED"
                    },
                    {
                        "label": "Collection Viewed (COLLECTION_VIEWED)",
                        "value": "COLLECTION_VIEWED"
                    },
                    {
                        "label": "Added Comment (ADDED_COMMENT)",
                        "value": "ADDED_COMMENT"
                    }
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.event.DamEventAuditListener",
        "name": "Adobe CQ DAM Event Audit Listener",
        "description": "Generates audi log entries for DAM events.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "event.filter": {
                "name": "event.filter.name",
                "description": "event.filter.description",
                "type": "String",
                "cardinality": "required",
                "default": "(!(event.application=*))"
            },
            "enabled": {
                "name": "Enabled",
                "description": "If disabled no DAM audit log entries are generated.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.ExpiryNotificationJobImpl",
        "name": "Adobe CQ DAM Expiry Notification",
        "description": "Adobe CQ DAM Expiry Notification",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.expiry.notification.scheduler.istimebased": {
                "name": "Time based Scheduler",
                "description": "Whether to schedule a time based schedular",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cq.dam.expiry.notification.scheduler.timebased.rule": {
                "name": "Time Based Scheduler Rule",
                "description": "Regular expression for time based Scheduler. Eg: '0 0 0 * * ?'. The example expression triggers the Job @ 00 hrs. This expression get picked if Time Based Scheduler is true",
                "type": "String",
                "cardinality": "required",
                "default": "0 0 0 * * ?"
            },
            "cq.dam.expiry.notification.scheduler.period.rule": {
                "name": "Preiodic Scheduler",
                "description": "Time in seconds for periodic scheduler. This expression get picked if Time Based Scheduler is set false",
                "type": "Long",
                "cardinality": "required",
                "default": 10
            },
            "send_email": {
                "name": "send email",
                "description": "Send emails on asset expiry",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "asset_expired_limit": {
                "name": "Asset Expired Limit",
                "description": "Maximum number of assets to expire in one iteration of the job",
                "type": "Long",
                "cardinality": "required",
                "default": 100
            },
            "prior_notification_seconds": {
                "name": "Prior notification in seconds",
                "description": "Number of seconds before which a notification should be sent before an asset expires",
                "type": "Long",
                "cardinality": "required",
                "default": 86400
            },
            "cq.dam.expiry.notification.url.protocol": {
                "name": "Protocol",
                "description": "Protocol",
                "type": "String",
                "cardinality": "required",
                "default": "http"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.foldermetadataschema.FolderMetadataSchemaFeatureFlag",
        "name": "DAM Asset Folder metadata Schema Feature Flag",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "isEnabled": {
                "name": "isEnabled.name",
                "description": "Enable this configuration to turn on the Asset Folder Metadata Schema feature.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.gfx.CommonsGfxRenderer",
        "name": "com.day.cq.dam.core.impl.gfx.CommonsGfxRenderer",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "skip.bufferedcache": {
                "name": "Skip buffered image cache",
                "description": "Try to generate large/fpo rendition using asset handler if the image in cache is of lower size",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.handler.EPSFormatHandler",
        "name": "Day CQ DAM EPS Format Handler",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "mimetype": {
                "name": "Mime Type",
                "description": "The format's mime type.",
                "type": "String",
                "cardinality": "required",
                "default": "application/postscript"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.handler.IndesignFormatHandler",
        "name": "Day CQ DAM InDesign Format Handler",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "mimetype": {
                "name": "Mime Type",
                "description": "The format's mime type.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "application/x-indesign",
                    "application/x-adobe-indesign"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.handler.JpegHandler",
        "name": "com.day.cq.dam.core.impl.handler.JpegHandler",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.enable.ext.meta.extraction": {
                "name": "cq.dam.enable.ext.meta.extraction.name",
                "description": "cq.dam.enable.ext.meta.extraction.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "large_file_threshold": {
                "name": "Threshold size to use intermediate temporary file",
                "description": "Asset size greater than threshold use temporary file instead of memory buffer to avoid OutOfMemoryError. Value of -1 means that the use of temporary file is disabled. 0 means it is enabled for all sizes.",
                "type": "Long",
                "cardinality": "required",
                "default": 0
            },
            "large_comment_threshold": {
                "name": "Threshold size to skip comments being stored",
                "description": "Comment size greater than threshold will not be stored. Value of -1 means that all comments would be stored irrespective of their size.",
                "type": "Long",
                "cardinality": "required",
                "default": 5000
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.handler.ThreeDAssetHandler",
        "name": "Adobe CQ DAM 3D Asset Handler",
        "description": "Manages 3D file ingestion and enables 3D Viewer.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "3D.handler.formats": {
                "name": "Supported Mimetypes",
                "description": "The Mime Types taken into consideration by this handler",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "model/gltf-binary",
                    "model/gltf+json",
                    "model/vnd.usdz+zip",
                    "model/x-adobe-dn",
                    "application/vnd.ms-pki.stl",
                    "application/x-tgif"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.handler.xmp.NCommXMPHandler",
        "name": "Day CQ DAM NComm XMP Handler",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "xmphandler.cq.formats": {
                "name": "Supported Formats",
                "description": "The formats taken into consideration by this handler.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "image/jpeg",
                    "image/png",
                    "image/tiff",
                    "application/pdf",
                    "application/x-indesign",
                    "application/x-adobe-indesign",
                    "application/x-photoshop",
                    "application/photoshop",
                    "image/vnd.adobe.photoshop",
                    "application/vnd.adobe.photoshop",
                    "application/postscript"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.jmx.AssetIndexUpdateMonitor",
        "name": "Adobe CQ DAM Asset Index Update Monitor",
        "description": "Measures how long property/fulltext indices find assets.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "jmx.objectname": {
                "name": "jmx.objectname.name",
                "description": "jmx.objectname.description",
                "type": "String",
                "cardinality": "required",
                "default": "com.day.cq.dam:type=Asset Index Updates"
            },
            "property.measure.enabled": {
                "name": "Measure Property Index",
                "description": "Measures the time it takes for new/updated asset properties to be found in queries.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "property.name": {
                "name": "Search Property Index For",
                "description": "This property, if present on assets, will be used to measure property index update performance.",
                "type": "String",
                "cardinality": "required",
                "default": "pdf:Keywords"
            },
            "property.max.wait.ms": {
                "name": "Property Max Measurement Wait Time (ms)",
                "description": "After these many milliseconds from start, a measuremnt is cancelled",
                "type": "Long",
                "cardinality": "required",
                "default": 60000
            },
            "property.max.rate": {
                "name": "Property Max Measurements Per Second",
                "description": "At most perform this many measurements per second (can be < 1)",
                "type": "Double",
                "cardinality": "required",
                "default": 0.05
            },
            "fulltext.measure.enabled": {
                "name": "Measure Fulltext Index",
                "description": "Measures the time it takes for new/updated asset content to be found in queries.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "fulltext.name": {
                "name": "Search Fulltext Index for Value of",
                "description": "The value of this property is used in fulltext search to measure its performance.",
                "type": "String",
                "cardinality": "required",
                "default": "pdf:Keywords"
            },
            "fulltext.max.wait.ms": {
                "name": "Fulltext Max Measurement Wait Time (ms)",
                "description": "After these many milliseconds from start, a measuremnt is cancelled",
                "type": "Long",
                "cardinality": "required",
                "default": 600000
            },
            "fulltext.max.rate": {
                "name": "Fulltext Max Measurements Per Second",
                "description": "At most perform this many measurements per second (can be < 1)",
                "type": "Double",
                "cardinality": "required",
                "default": 0.05
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.jmx.AssetUpdateMonitorImpl",
        "name": "Adobe CQ DAM Asset Update Monitor",
        "description": "Measures various aspect of DAM Asset Update performance and makes them available as MBean.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "jmx.objectname": {
                "name": "jmx.objectname.name",
                "description": "jmx.objectname.description",
                "type": "String",
                "cardinality": "required",
                "default": "com.day.cq.dam:type=Asset Update Monitor"
            },
            "active": {
                "name": "Active",
                "description": "Measures asset process execution when active.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.jobs.metadataexport.AsyncMetadataExportConfigProviderService",
        "name": "Async Asset MetadataExport Operation Job Processing Configuration",
        "description": "Configurations related to the async asset metadata export OPERATION processing.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "operation": {
                "name": "operation.name",
                "description": "operation.description",
                "type": "String",
                "cardinality": "required",
                "default": "MetadataExport"
            },
            "emailEnabled": {
                "name": "Enable email notification",
                "description": "Enable or Disable the email notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.jobs.metadataimport.AsyncMetadataImportConfigProviderService",
        "name": "Async Asset MetadataImport Operation Job Processing Configuration",
        "description": "Configurations related to the async asset metadata import OPERATION processing.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "operation": {
                "name": "operation.name",
                "description": "operation.description",
                "type": "String",
                "cardinality": "required",
                "default": "MetadataImport"
            },
            "operationIcon": {
                "name": "Icon assigned to this operation",
                "description": "operationIcon.description",
                "type": "String",
                "cardinality": "required",
                "default": "import"
            },
            "topicName": {
                "name": "Topic name for the OPERATION",
                "description": "The topic name on which the OPERATION of type will be publishedand subsequently processed by the job executor.",
                "type": "String",
                "cardinality": "required",
                "default": "async/importMetadata"
            },
            "emailEnabled": {
                "name": "Enable email notification",
                "description": "Enable or Disable the email notifications for this job status. e.g. success,failed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.lightbox.LightboxServlet",
        "name": "com.day.cq.dam.core.impl.lightbox.LightboxServlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "sling.servlet.paths": {
                "name": "sling.servlet.paths.name",
                "description": "sling.servlet.paths.description",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/dam/lightbox"
            },
            "sling.servlet.methods": {
                "name": "sling.servlet.methods.name",
                "description": "sling.servlet.methods.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "GET",
                    "POST"
                ]
            },
            "cq.dam.enable.anonymous": {
                "name": "Enable Anonymous Access",
                "description": "Allows anonymous to create/update lightbox",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.metadata.editor.SelectComponentHandler",
        "name": "Handler for dropdown like components",
        "description": "Handler for components which are structurally similar to dropdown (granite/ui/components/coral/foundation/form/select)",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "granite:data": {
                "name": "Component paths handled by this handler",
                "description": "For all component paths mentioned here, this handler will be used to render in Metadata Editor.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "granite/ui/components/coral/foundation/form/select",
                    "dam/gui/coral/components/admin/schemaforms/formbuilder/formfields/v2/metadataselect"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.mimeType.AssetUploadRestrictionHelper",
        "name": "Day CQ DAM Asset Upload Restriction",
        "description": "Configure Asset Upload Restriction parameters",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.allow.all.mime": {
                "name": "Allow all MIME",
                "description": "Allow creation of all types of asset. If enabled, it overrides the following allowed MIME type list",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cq.dam.allowed.asset.mimes": {
                "name": "Allowed Asset MIMEs (regex)",
                "description": "Allow upload of assets with following MIMEs only",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "image/.*",
                    "video/.*"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.mimeType.DamMimeTypeServiceImpl",
        "name": "Day CQ DAM Mime Type Service",
        "description": "Enable/disable Mime Type detection attributes",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.detect.asset.mime.from.content": {
                "name": "Detect MIME from content",
                "description": "Determine incoming asset's MIME from its content. If disabled, asset's extension is used to determine MIME",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.MissingMetadataNotificationJob",
        "name": "Adobe CQ DAM Missing Metadata Notification",
        "description": "Adobe CQ DAM Missing Metadata Notification",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.missingmetadata.notification.scheduler.istimebased": {
                "name": "Time based Scheduler",
                "description": "Whether to schedule a time based schedular",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "cq.dam.missingmetadata.notification.scheduler.timebased.rule": {
                "name": "Time Based Scheduler Rule",
                "description": "Regular expression for time based Scheduler. Eg: '0 0 0 * * ?'. The example expression triggers the Job @ 00 hrs. This expression get picked if Time Based Scheduler is true",
                "type": "String",
                "cardinality": "required",
                "default": "0 0 0 * * ?"
            },
            "cq.dam.missingmetadata.notification.scheduler.period.rule": {
                "name": "Preiodic Scheduler",
                "description": "Time in seconds for periodic scheduler. This expression get picked if Time Based Scheduler is set false",
                "type": "Long",
                "cardinality": "required",
                "default": -1
            },
            "cq.dam.missingmetadata.notification.recipient": {
                "name": "Notification Recipient ID",
                "description": "ID of the recipient of the notification for missing metadata",
                "type": "String",
                "cardinality": "required",
                "default": "admin"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.process.SendTransientWorkflowCompletedEmailProcess",
        "name": "SendTransientWorkflowCompletedEmailProcess",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "process.label": {
                "name": "process.label.name",
                "description": "process.label.description",
                "type": "String",
                "cardinality": "required",
                "default": "Send Transient Workflow Completed Email"
            },
            "Notify on Complete": {
                "name": "Notify on Complete",
                "description": "Enables notification when parent transient workflow is complete",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.process.TextExtractionProcess",
        "name": "Adobe CQ DAM Text Extraction",
        "description": "Extracts text from Assets for mime types configured. Text will be available as '<assetpath>/jcr:content/text' resource and can be used for indexing. This eases load for the oak indexing engine.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "apply": {
                "name": "Activated",
                "description": "Apply the text extraction as configured.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "mimeTypes": {
                "name": "Mime types",
                "description": "Mime types  whose text gets extracted into a separate resource.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "application/pdf"
                ]
            },
            "maxExtract": {
                "name": "Max Extracted Length",
                "description": "Extract text up to a maximum number of characters. Use negative value for unlimited.",
                "type": "Long",
                "cardinality": "required",
                "default": 100000
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.RenditionMakerImpl",
        "name": "Adobe CQ DAM Rendition Maker",
        "description": "Adobe CQ DAM Rendition Maker",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "xmp.propagate": {
                "name": "Propagate XMP",
                "description": "Propagate XMP from asset metadata to renditions",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "xmp.excludes": {
                "name": "XMP Excludes",
                "description": "XMP properties to skip on propagation. Format: <namespace> <property>",
                "type": "String",
                "cardinality": 1,
                "default": [
                    "http://ns.adobe.com/exif/1.0/aux/ ISO"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.reports.ReportExportService",
        "name": "AEM Asset Reports Configuration",
        "description": "Manages batch sizing of Asset Reports query.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "queryBatchSize": {
                "name": "Query Batch Size",
                "description": "Number of results to be fetched per iteration while processing Asset Report.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10000
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.reports.ReportPurgeService",
        "name": "DAM Report Purge Service",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "scheduler.expression": {
                "name": "scheduler.expression.name",
                "description": "scheduler.expression.description",
                "type": "String",
                "cardinality": "required",
                "default": "* * 23 * * ?"
            },
            "maxSavedReports": {
                "name": "Number of previous reports to store",
                "description": "maxSavedReports.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "timeDuration": {
                "name": "Time (in days) beyond which the reports are purged",
                "description": "timeDuration.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            },
            "enableReportPurge": {
                "name": "Enable purging of old reports",
                "description": "This will enable the purging of previously generated reports created beyond specified number of days, or when number of reports is greater than specified limit",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.AssetStatusServlet",
        "name": "DAM Batch Status Servlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.batch.status.maxassets": {
                "name": "Maximum number of assets",
                "description": "Maximum number of assets to load the metadata for. Further submitted paths get ignored.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.AssetXMPSearchServlet",
        "name": "DAM Batch XMP search Servlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.batch.indesign.maxassets": {
                "name": "Maximum number of assets",
                "description": "Maximum number of assets to load the metadata for. Further submitted paths get ignored.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.BatchMetadataServlet",
        "name": "DAM Batch Metadata Servlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.batch.metadata.asset.default": {
                "name": "Asset metadata default properties",
                "description": "Asset metadata properties getting displayed if no specific are requested",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcr:content/metadata/dc:title",
                    "jcr:content/metadata/dc:description",
                    "jcr:content/metadata/dc:language",
                    "jcr:content/metadata/cq:tags",
                    "jcr:content/metadata/xmp:CreatorTool",
                    "jcr:content/metadata/dc:creator",
                    "jcr:content/metadata/dc:contributor",
                    "jcr:content/metadata/dc:rights",
                    "jcr:content/metadata/xmpRights:Owner",
                    "jcr:content/metadata/xmpRights:UsageTerms"
                ]
            },
            "cq.dam.batch.metadata.collection.default": {
                "name": "Collection metadata default properties",
                "description": "Collection metadata properties getting displayed if no specific are requested",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcr:content/metadata/jcr:title",
                    "jcr:content/metadata/jcr:description"
                ]
            },
            "cq.dam.batch.metadata.maxresources": {
                "name": "Maximum number of resources",
                "description": "Maximum number of resources to load the metadata for. Further submitted paths get ignored.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.BinaryProviderServlet",
        "name": "Day CQ DAM Binary Provider Servlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "sling.servlet.resourceTypes": {
                "name": "sling.servlet.resourceTypes.name",
                "description": "sling.servlet.resourceTypes.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "dam/asset",
                    "dam:Asset"
                ]
            },
            "sling.servlet.methods": {
                "name": "sling.servlet.methods.name",
                "description": "sling.servlet.methods.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "GET",
                    "HEAD"
                ]
            },
            "cq.dam.drm.enable": {
                "name": "Enable Digital Rights Management",
                "description": "Enable Digital Rights Management.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.CollectionServlet",
        "name": "DAM Batch Collection Servlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.batch.collection.properties": {
                "name": "Collection properties",
                "description": "Collection properties getting displayed in the output",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcr:title",
                    "sling:resourceType",
                    "jcr:description",
                    "jcr:lastModified"
                ]
            },
            "cq.dam.batch.collection.maxcollections": {
                "name": "Maximum number of collections",
                "description": "Maximum number of collections to load the members for. Further submitted paths get ignored.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.CollectionsServlet",
        "name": "DAM Batch Collections Servlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.batch.collections.properties": {
                "name": "Collection properties",
                "description": "Collection properties getting displayed in the output",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcr:title",
                    "sling:resourceType",
                    "jcr:description",
                    "jcr:lastModified"
                ]
            },
            "cq.dam.batch.collections.limit": {
                "name": "Maximum number of collections per page",
                "description": "Maximum number of collections displayed per page. Further collections get requested by nex page.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.CompanionServlet",
        "name": "Assets Companion Support Servlet",
        "description": "Provides support for the assets companion application",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "More Info": {
                "name": "More Info Option Text",
                "description": "The text that will show in context menus for the more info dialog",
                "type": "String",
                "cardinality": "required",
                "default": "More Info"
            },
            "/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path}": {
                "name": "More Info Dialog Path",
                "description": "The full absolute path that will be used to display the more info dialog",
                "type": "String",
                "cardinality": "required",
                "default": "/mnt/overlay/dam/gui/content/assets/moreinfo.html/${path}",
                "hint": "url"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.CreateAssetServlet",
        "name": "Day CQ DAM Create Asset Servlet",
        "description": "Use to create assets",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "detect_duplicate": {
                "name": "detect duplicate",
                "description": "configuration to enable duplicate detection of uploaded asset",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.DamContentDispositionFilter",
        "name": "Dam Safe Binary Filter",
        "description": "Request filter adding Content Disposition attachment for certain paths/content types",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.mime.type.blacklist": {
                "name": "Blacklisted Mime Types",
                "description": "Mime types that should be served as content-disposition:attachment",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "text/html",
                    "application/octet-stream",
                    "image/svg+xml"
                ]
            },
            "cq.dam.empty.mime": {
                "name": "Allow unknown mime types",
                "description": "Allow content with unknown i.e. empty mime types to be served inline. Disable this to ensure that content with unknown mime types is served as an attachment",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.FPOServlet",
        "name": "com.day.cq.dam.core.impl.servlet.FPOServlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "rendition.list": {
                "name": "Rendition Preference List",
                "description": "rendition.list.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq5dam.fpo",
                    "cq5dam.web"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.HealthCheckServlet",
        "name": "Day CQ DAM Health Check Servlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.sync.workflow.id": {
                "name": "Sync Workflow Model Id",
                "description": "The workflow model to use for asset synchronization.",
                "type": "String",
                "cardinality": "required",
                "default": "/etc/workflow/models/dam/dam_asset_syncer_and/jcr:content/model",
                "hint": "path"
            },
            "cq.dam.sync.folder.types": {
                "name": "Foldernode types",
                "description": "The node types to check when comparing folders.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "nt:folder",
                    "sling:Folder",
                    "cq:Page"
                ],
                "hint": "nodeType"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.MetadataGetServlet",
        "name": "Adobe CQ DAM Asset Metadata Get Servlet",
        "description": "Returns xss-protected metadata",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "sling.servlet.resourceTypes": {
                "name": "sling.servlet.resourceTypes.name",
                "description": "sling.servlet.resourceTypes.description",
                "type": "String",
                "cardinality": "required",
                "default": "sling/servlet/default"
            },
            "sling.servlet.methods": {
                "name": "sling.servlet.methods.name",
                "description": "sling.servlet.methods.description",
                "type": "String",
                "cardinality": "required",
                "default": "GET"
            },
            "sling.servlet.extensions": {
                "name": "sling.servlet.extensions.name",
                "description": "sling.servlet.extensions.description",
                "type": "String",
                "cardinality": "required",
                "default": "json"
            },
            "sling.servlet.selectors": {
                "name": "sling.servlet.selectors.name",
                "description": "sling.servlet.selectors.description",
                "type": "String",
                "cardinality": "required",
                "default": "filtermetadata"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.MultipleLicenseAcceptServlet",
        "name": "Day CQ DAM MultipleLicenseAccept Servlet",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.drm.enable": {
                "name": "Enable Digital Rights Management",
                "description": "Enable Digital Rights Management.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.servlet.ResourceCollectionServlet",
        "name": "Day CQ DAM Resource Collection Servlet",
        "description": "Manages Collections",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "sling.servlet.resourceTypes": {
                "name": "sling.servlet.resourceTypes.name",
                "description": "sling.servlet.resourceTypes.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "dam/collection",
                    "dam/smartcollection"
                ]
            },
            "sling.servlet.methods": {
                "name": "sling.servlet.methods.name",
                "description": "sling.servlet.methods.description",
                "type": "String",
                "cardinality": "required",
                "default": "POST"
            },
            "sling.servlet.selectors": {
                "name": "sling.servlet.selectors.name",
                "description": "sling.servlet.selectors.description",
                "type": "String",
                "cardinality": "required",
                "default": "collection"
            },
            "download.config": {
                "name": "download configuration",
                "description": "configuration of the collection to be downloaded",
                "type": "String",
                "cardinality": "required",
                "default": "_charset_=utf-8&downloadAssets=true&downloadRenditions=false&downloadSubassets=false"
            },
            "view.selector": {
                "name": "view selector",
                "description": "selector for viewing collection details",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/dam/gui/content/collections/collectiondetails",
                "hint": "path"
            },
            "send_email": {
                "name": "send email",
                "description": "Send emails on collection sharing",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.ui.preview.FolderPreviewUpdaterImpl",
        "name": "Adobe CQ DAM Folder Preview Create/Update Settings",
        "description": "Manages creating/updating thumbnails for asset folders.",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "createPreviewEnabled": {
                "name": "Enable Create Folder Preview",
                "description": "If disabled thumbnails are not created",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "updatePreviewEnabled": {
                "name": "Enable Update Folder Preview",
                "description": "If disabled thumbnails are not updated upon upload/deletion of asset",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "queueSize": {
                "name": "Queue Size",
                "description": "Size of the queue of folder paths that need to be updated.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "folderPreviewRenditionRegex": {
                "name": "Folder Preview Rendition Regex",
                "description": "The regex for the rendition(s) name(s) (of assets) that will be considered when creating the preview. If left blank, the process will iterate over all available renditions of asset.",
                "type": "String",
                "cardinality": "required",
                "default": "cq5dam.web.*"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.impl.unzip.UnzipConfig",
        "name": "com.day.cq.dam.core.impl.unzip.UnzipConfig",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "cq.dam.config.unzip.maxuncompressedsize": {
                "name": "cq.dam.config.unzip.maxuncompressedsize",
                "description": "cq.dam.config.unzip.maxuncompressedsize.description",
                "type": "Long",
                "cardinality": "required",
                "default": 1073741824
            },
            "cq.dam.config.unzip.encoding": {
                "name": "cq.dam.config.unzip.encoding",
                "description": "cq.dam.config.unzip.encoding.description",
                "type": "String",
                "cardinality": "required",
                "default": "Cp437"
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.process.ExifToolExtractMetadataProcess",
        "name": "com.day.cq.dam.core.process.ExifToolExtractMetadataProcess",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "process.label": {
                "name": "process.label.name",
                "description": "process.label.description",
                "type": "String",
                "cardinality": "required",
                "default": "Exif ToolExtract Meta Data"
            },
            "cq.dam.enable.sha1": {
                "name": "cq.dam.enable.sha1.name",
                "description": "cq.dam.enable.sha1.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.process.ExtractMetadataProcess",
        "name": "com.day.cq.dam.core.process.ExtractMetadataProcess",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "process.label": {
                "name": "process.label.name",
                "description": "process.label.description",
                "type": "String",
                "cardinality": "required",
                "default": "Extract Meta Data"
            },
            "cq.dam.enable.sha1": {
                "name": "cq.dam.enable.sha1.name",
                "description": "cq.dam.enable.sha1.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.core.process.MetadataProcessorProcess",
        "name": "com.day.cq.dam.core.process.MetadataProcessorProcess",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-core",
        "attributes": {
            "process.label": {
                "name": "process.label.name",
                "description": "process.label.description",
                "type": "String",
                "cardinality": "required",
                "default": "Metadata Processor"
            },
            "cq.dam.enable.sha1": {
                "name": "cq.dam.enable.sha1.name",
                "description": "cq.dam.enable.sha1.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cq.dam.metadata.xssprotected.properties": {
                "name": "XSS protected properties",
                "description": "These properties will be passed through xss api before saving",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "adobe_dam:restrictions"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.entitlement.impl.frags.SimilaritySearchFeatureFlag",
        "name": "com.day.cq.dam.entitlement.impl.frags.SimilaritySearchFeatureFlag",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-entitlement",
        "attributes": {
            "feature.flag.active.status": {
                "name": "feature.flag.active.status",
                "description": "",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.handler.ffmpeg.LocatorImpl",
        "name": "Day CQ Executable Locator",
        "description": "Locates command line executables",
        "bundleName": "com.day.cq.dam.cq-dam-video",
        "attributes": {
            "executable.searchpath": {
                "name": "Search Path",
                "description": "Search path for executables. Use \"PATH\" to include the OS Path environment",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/opt/local/bin",
                    "/usr/local/bin",
                    "PATH"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.handler.gibson.fontmanager.impl.FontManagerServiceImpl",
        "name": "CQ-DAM-Handler-Gibson Font Manager Service",
        "description": "Manages Fonts directories and there loading",
        "bundleName": "com.day.cq.dam.cq-dam-handler",
        "attributes": {
            "event.filter": {
                "name": "event.filter.name",
                "description": "event.filter.description",
                "type": "String",
                "cardinality": "required",
                "default": "(!(event.application=*))"
            },
            "fontmgr.system.font.dir": {
                "name": "System Fonts directory",
                "description": "Location of the System Fonts directory. Make sure directory exists else they willbe skipped.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "fontmgr.adobe.font.dir": {
                "name": "Adobe Server Fonts directory",
                "description": "Location of the Adobe Server Fonts directory. Default location is <crx-repository folder>/fonts. Fonts need to be copied manually to new directory when this property is changed. Make sure this directory exist else default path will be used.",
                "type": "String",
                "cardinality": "required"
            },
            "fontmgr.customer.font.dir": {
                "name": "Customer Fonts directory",
                "description": "Location of the Customer Fonts directory. Make sure this directory exist else it will be skipped.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.dam.handler.standard.pdf.PdfHandler",
        "name": "com.day.cq.dam.handler.standard.pdf.PdfHandler",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-handler",
        "attributes": {
            "raster.annotation": {
                "name": "Enable Annotation Rasterization",
                "description": "Configuration to enable annotation's rasterization in pdf.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.handler.standard.ps.PostScriptHandler",
        "name": "com.day.cq.dam.handler.standard.ps.PostScriptHandler",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-handler",
        "attributes": {
            "raster.annotation": {
                "name": "Enable Annotation Rasterization",
                "description": "Configuration to enable annotation's rasterization in pdf.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.handler.standard.psd.PsdHandler",
        "name": "com.day.cq.dam.handler.standard.psd.PsdHandler",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-handler",
        "attributes": {
            "large_file_threshold": {
                "name": "Threshold size in MB to use intermediate temporary file",
                "description": "Asset size greater than threshold use temporary file instead of memory buffer to avoid OutOfMemoryError. Value of -1 means that the use of temporary file is disabled.",
                "type": "Long",
                "cardinality": "required",
                "default": 500
            }
        }
    },
    {
        "id": "com.day.cq.dam.ids.impl.IDSJobProcessor",
        "name": "Adobe CQ DAM IDS Configuration",
        "description": "Description for com.day.cq.dam.ids.impl.IDSJobProcessor",
        "bundleName": "com.day.cq.dam.cq-dam-indesign",
        "attributes": {
            "enable.multisession": {
                "name": "Multisession",
                "description": "Enable multiple session support. Applicable to Creative Suite 6 and above. Default false",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "ids.cc.enable": {
                "name": "InDesign CC Server",
                "description": "Allow specific InDesign CC Server configuration. Applicable to InDesign CC Server 10 and above. Default false",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "enable.retry": {
                "name": "Retry I/O Error",
                "description": "Enable retry of IDS Job on I/O errors. Default false",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "enable.retry.scripterror": {
                "name": "Retry Script Error",
                "description": "Enable retry of IDS Job for script errors or other non I/O errors. Default false",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "externalizer.domain.cqhost": {
                "name": "Externalizer Domain CQ Host",
                "description": "Externalizer Domain used by the InDesign CC Server retrieve and put resources from and to AEM. Has to match a Domain defined in the 'Day CQ Link Externalizer' configuration",
                "type": "String",
                "cardinality": "required",
                "default": "local"
            },
            "externalizer.domain.http": {
                "name": "Externalizer Domain HTTP",
                "description": "Externalizer Domain used during snippet creation and by the InDesign CC Server to authenticate the linkConnectionManager. Has to match a Domain defined in the 'Day CQ Link Externalizer' configuration",
                "type": "String",
                "cardinality": "required",
                "default": "author"
            }
        }
    },
    {
        "id": "com.day.cq.dam.ids.impl.IDSPoolManagerImpl",
        "name": "IDS Pool Manager",
        "description": "Keeps track of all IDSPools configured",
        "bundleName": "com.day.cq.dam.cq-dam-indesign",
        "attributes": {
            "max.errors.to.blacklist": {
                "name": "Blacklist Error Count",
                "description": "Max consecute errors before blacklist a IDS server. Default -1(disabled)",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "retry.interval.to.whitelist": {
                "name": "Whiteliste Retry Interval",
                "description": "Minimum retry interval to revalidate the blacklisted IDS server. Default 10 minutes",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "connect.timeout": {
                "name": "Connect timeout",
                "description": "Determines the timeout in milliseconds until a connection is established.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "socket.timeout": {
                "name": "Socket timeout",
                "description": "Defines the socket timeout in milliseconds, which is the timeout for waiting for data.",
                "type": "Integer",
                "cardinality": "required",
                "default": 120000
            },
            "process.label": {
                "name": "Property process.label",
                "description": "Description for process.label",
                "type": "String",
                "cardinality": "required",
                "default": "InDesign Server Pool Config"
            },
            "connection.use.max": {
                "name": "Connection Use Max",
                "description": "Defines how many requests are made on the same connection before a new one is created.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.day.cq.dam.indd.impl.handler.IndesignXMPHandler",
        "name": "Adobe CQ DAM InDesign XMP Handler",
        "description": "Manages INDD file XMP metadata processing.",
        "bundleName": "com.day.cq.dam.cq-dam-indesign",
        "attributes": {
            "process.label": {
                "name": "Property process.label",
                "description": "Description for process.label",
                "type": "String",
                "cardinality": "required",
                "default": "Indesign XMP Reader"
            },
            "extract.pages": {
                "name": "Extract Page Previews",
                "description": "Extract Page Preview Images from XMP Metadata, if present. This is not needed if an InDesign Server is used for processing assets.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.indd.impl.servlet.SnippetCreationServlet",
        "name": "InDesign Snippet Creation Servlet",
        "description": "Description for com.day.cq.dam.indd.impl.servlet.SnippetCreationServlet",
        "bundleName": "com.day.cq.dam.cq-dam-indesign",
        "attributes": {
            "snippetcreation.maxcollections": {
                "name": "Maximum number of collections",
                "description": "Maximum number of collections to load the members for. Further submitted paths get ignored.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "com.day.cq.dam.indd.process.INDDMediaExtractProcess",
        "name": "Adobe CQ DAM INDD Media Extract Process",
        "description": "Workflow step to extract media from an INDD file via an external InDesign Server.",
        "bundleName": "com.day.cq.dam.cq-dam-indesign",
        "attributes": {
            "process.label": {
                "name": "Process label",
                "description": "Workflow step process label",
                "type": "String",
                "cardinality": "required",
                "default": "InDesign Media Extraction Process"
            },
            "cq.dam.indd.pages.regex": {
                "name": "INDD Pages RegEx",
                "description": "Regular expression for identifying pages in subassets folder. The pages will be shown in assets page viewer.",
                "type": "String",
                "cardinality": "required",
                "default": "^page[0-9]*.jpg$"
            },
            "ids.job.decoupled": {
                "name": "Decouple IDS Job",
                "description": "If activated, the workflow step does not wait until the IDS job has finished but continues immediately with the next workflow step. Please note that in this case this step should be the last step in the workflow to avoid concurrent access to the asset. If additionaly workflows steps are required the process the results of the IDS job a separate workflow model can be configured via the 'IDS Job Workflow' property.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "ids.job.workflow.model": {
                "name": "IDS Job Workflow",
                "description": "This property is only relevant if 'Decouple IDS Job' is activated. In this case a new workflow for the asset is started once the IDS job has finished. The workflow contains additional steps to further process the media data extracted from the INDD file via IDS.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.dam.performance.internal.AssetPerformanceDataHandlerImpl",
        "name": "AEM Assets performance data handler",
        "description": "Description for com.day.cq.dam.performance.internal.AssetPerformanceDataHandlerImpl",
        "bundleName": "com.day.cq.dam.cq-dam-asset-usage",
        "attributes": {
            "batch.commit.size": {
                "name": "Property batch.commit.size",
                "description": "Set the batch commit size for the Asset Insight background sync job.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "com.day.cq.dam.performance.internal.AssetPerformanceReportSyncJob",
        "name": "Adobe CQ DAM Asset Performance Report Sync Job",
        "description": "Schedule a background job for fetching and saving the Assets' performance data from Adobe Analytics.",
        "bundleName": "com.day.cq.dam.cq-dam-asset-usage",
        "attributes": {
            "scheduler.expression": {
                "name": "Property scheduler.expression",
                "description": "Description for scheduler.expression",
                "type": "String",
                "cardinality": "required",
                "default": "0 0 2 * * ?"
            }
        }
    },
    {
        "id": "com.day.cq.dam.pim.impl.sourcing.upload.process.ProductAssetsUploadProcess",
        "name": "Component com.day.cq.dam.pim.impl.sourcing.upload.process.ProductAssetsUploadProcess",
        "description": "Description for com.day.cq.dam.pim.impl.sourcing.upload.process.ProductAssetsUploadProcess",
        "bundleName": "com.day.cq.dam.cq-dam-pim",
        "attributes": {
            "delete.zip.file": {
                "name": "Property delete.zip.file",
                "description": "Delete ZIP file after upload process is completed.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.s7dam.common.analytics.impl.S7damDynamicMediaConfigEventListener",
        "name": "cq.dam.s7dam.dynamicmediaconfigeventlistener.name",
        "description": "cq.dam.s7dam.dynamicmediaconfigeventlistener.description",
        "bundleName": "com.adobe.cq.dam.cq-dynamicmedia-core",
        "attributes": {
            "cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled": {
                "name": "cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled.label",
                "description": "cq.dam.s7dam.dynamicmediaconfigeventlistener.enabled.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.s7dam.common.analytics.impl.SiteCatalystReportRunner",
        "name": "DAM Video Report Caching Service",
        "description": "",
        "bundleName": "com.adobe.cq.dam.cq-dynamicmedia-core",
        "attributes": {
            "scheduler.expression": {
                "name": "scheduler.expression.name",
                "description": "scheduler.expression.description",
                "type": "String",
                "cardinality": "required",
                "default": "0 0 * * * ?"
            },
            "scheduler.concurrent": {
                "name": "scheduler.concurrent.name",
                "description": "scheduler.concurrent.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.s7dam.common.post.servlets.SetCreateHandler",
        "name": "DAM Media Set Handler",
        "description": "",
        "bundleName": "com.adobe.cq.dam.cq-dynamicmedia-core",
        "attributes": {
            "sling.post.operation": {
                "name": "sling.post.operation.name",
                "description": "sling.post.operation.description",
                "type": "String",
                "cardinality": "required",
                "default": "dam.mediaset.create"
            },
            "sling.servlet.methods": {
                "name": "sling.servlet.methods.name",
                "description": "sling.servlet.methods.description",
                "type": "String",
                "cardinality": "required",
                "default": "POST"
            }
        }
    },
    {
        "id": "com.day.cq.dam.s7dam.common.post.servlets.SetModifyHandler",
        "name": "DAM Media Set Handler",
        "description": "",
        "bundleName": "com.adobe.cq.dam.cq-dynamicmedia-core",
        "attributes": {
            "sling.post.operation": {
                "name": "sling.post.operation.name",
                "description": "sling.post.operation.description",
                "type": "String",
                "cardinality": "required",
                "default": "dam.mediaset.modify"
            },
            "sling.servlet.methods": {
                "name": "sling.servlet.methods.name",
                "description": "sling.servlet.methods.description",
                "type": "String",
                "cardinality": "required",
                "default": "POST"
            }
        }
    },
    {
        "id": "com.day.cq.dam.s7dam.common.process.VideoThumbnailDownloadProcess",
        "name": "com.day.cq.dam.s7dam.common.process.VideoThumbnailDownloadProcess",
        "description": "",
        "bundleName": "com.adobe.cq.dam.cq-dynamicmedia-core",
        "attributes": {
            "process.label": {
                "name": "process.label.name",
                "description": "process.label.description",
                "type": "String",
                "cardinality": "required",
                "default": "Dynamic Media Video Thumbnail Download Process"
            }
        }
    },
    {
        "id": "com.day.cq.dam.s7dam.common.S7damDamChangeEventListener",
        "name": "Adobe CQ s7dam Dam Listener",
        "description": "CQ s7dam Dam Listener for changes to Dam assets and responds with related S7 service operations",
        "bundleName": "com.adobe.cq.dam.cq-dynamicmedia-core",
        "attributes": {
            "cq.dam.s7dam.damchangeeventlistener.enabled": {
                "name": "Enabled",
                "description": "Enable the Adobe CQ s7dam Dam Listener",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.dam.s7dam.common.servlets.S7damProductInfoServlet",
        "name": "com.day.cq.dam.s7dam.common.servlets.S7damProductInfoServlet",
        "description": "",
        "bundleName": "com.adobe.cq.dam.cq-dynamicmedia-core",
        "attributes": {
            "sling.servlet.paths": {
                "name": "sling.servlet.paths.name",
                "description": "sling.servlet.paths.description",
                "type": "String",
                "cardinality": "required",
                "default": "/bin/dm/productinfo"
            },
            "sling.servlet.methods": {
                "name": "sling.servlet.methods.name",
                "description": "sling.servlet.methods.description",
                "type": "String",
                "cardinality": "required",
                "default": "GET"
            }
        }
    },
    {
        "id": "com.day.cq.dam.s7dam.common.video.impl.VideoProxyClientServiceImpl",
        "name": "Adobe CQ s7dam Video Proxy Client Service Configurations (HttpClient, multipart upload, etc.)",
        "description": "Provides facilities to manage video assets through the Adobe Video Proxy encoding service",
        "bundleName": "com.adobe.cq.dam.cq-dynamicmedia-core",
        "attributes": {
            "cq.dam.s7dam.videoproxyclientservice.multipartupload.minsize.name": {
                "name": "Multipart upload minimum filesize (MB)",
                "description": "Minimum filesize required to use multipart upload",
                "type": "Long",
                "cardinality": "required",
                "default": 100
            },
            "cq.dam.s7dam.videoproxyclientservice.multipartupload.partsize.name": {
                "name": "Multipart upload part size (MB)",
                "description": "Size of each data chunk to be uploaded to Amazon S3 (must be 5MB or greater)",
                "type": "Long",
                "cardinality": "required",
                "default": 20
            },
            "cq.dam.s7dam.videoproxyclientservice.multipartupload.numthread.name": {
                "name": "Multipart upload thread pool size ",
                "description": "Number of Amazon S3 upload thread workers",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "cq.dam.s7dam.videoproxyclientservice.http.readtimeout.name": {
                "name": "Http request read timeout",
                "description": "Timeout to wait for data or inactivity (milliseconds)",
                "type": "Integer",
                "cardinality": "required",
                "default": 120000
            },
            "cq.dam.s7dam.videoproxyclientservice.http.connectiontimeout.name": {
                "name": "Http request connection timeout",
                "description": "Timeout to determine if a connection is established (milliseconds)",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "cq.dam.s7dam.videoproxyclientservice.http.maxretrycount.name": {
                "name": "Http request retry count",
                "description": "Number of maximum retry httpclient will execute",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "cq.dam.s7dam.videoproxyclientservice.uploadprogress.interval.name": {
                "name": "Video upload progress polling interval",
                "description": "Polling interval to retrieve video upload progress (seconds)",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            }
        }
    },
    {
        "id": "com.day.cq.dam.scene7.impl.listener.Scene7ActivationJobConsumer",
        "name": "com.day.cq.dam.scene7.impl.listener.Scene7ActivationJobConsumer",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-scene7-core",
        "attributes": {
            "cq.dam.scene7.activation.replicatemetadata": {
                "name": "Replicate Metadata after DM publishing",
                "description": "When true, additional replication request is called for asset's metadata after DynamicMedia publishing completed, to ensure DM metadata is identical on Author and Publish instances",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.scene7.impl.Scene7APIClientImpl",
        "name": "Adobe Scene7 API Client",
        "description": "The Scene7APIClient provides the Scene7 SPS API methods used by CQ DAM. For more details about the methods please consult the SPS API.",
        "bundleName": "com.day.cq.dam.cq-scene7-core",
        "attributes": {
            "cq.dam.scene7.apiclient.recordsperpage.nofilter.name": {
                "name": "Maximum search results without filter",
                "description": "Maximum number of results to return when no filter is applied",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "cq.dam.scene7.apiclient.recordsperpage.withfilter.name": {
                "name": "Maximum search results with filter",
                "description": "Maximum number of results to return when no filter is applied",
                "type": "Integer",
                "cardinality": "required",
                "default": 10000
            }
        }
    },
    {
        "id": "com.day.cq.dam.scene7.impl.Scene7AssetMimeTypeServiceImpl",
        "name": "Adobe CQ Scene7 Asset MIME type Service",
        "description": "The Adobe CQ Scene7 Asset MIME Type is responsible for providing a customised MIME type for the Scene7 assets",
        "bundleName": "com.day.cq.dam.cq-scene7-core",
        "attributes": {
            "cq.dam.scene7.assetmimetypeservice.mapping": {
                "name": "MIME Type mapping",
                "description": "The MIME Type mapping associates a MIME type to an asset type (e.g. Template=image/s7template)",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "Generic=image/s7asset",
                    "Image=image/*",
                    "Image.jpeg=image/jpeg",
                    "Video=video/*",
                    "Video.mp4=video/mp4",
                    "Video.f4v=video/mp4",
                    "Video.flv=video/x-flv",
                    "PDF=application/pdf",
                    "VTT=text/vtt",
                    "CSS=text/css",
                    "DOC=application/msword",
                    "AI=application/postscript",
                    "PS=application/postscript",
                    "RTF=application/rtf",
                    "ICC=application/vnd.iccprofile",
                    "ICM=application/vnd.iccprofile",
                    "XLS=application/vnd.ms-excel",
                    "PPT=application/vnd.ms-powerpoint",
                    "OTF=application/x-font-otf",
                    "TTC=application/x-font-ttf",
                    "TTF=application/x-font-ttf",
                    "AFM=application/x-font-type1",
                    "PFB=application/x-font-type1",
                    "PFM=application/x-font-type1",
                    "INDD=application/x-indesign",
                    "XML=application/xml",
                    "MP3=audio/mpeg",
                    "AAC=audio/x-aac",
                    "AIFF=audio/x-aiff",
                    "WMA=audio/x-ms-wma",
                    "WAV=audio/x-wav",
                    "MTS=model/vnd.mts",
                    "EPS=application/postscript",
                    "PSD=image/vnd.adobe.photoshop",
                    "FLA=application/x-shockwave-flash",
                    "SWF=application/x-shockwave-flash",
                    "GLB=model/gltf-binary",
                    "OBJ=application/x-tgif",
                    "STL=application/vnd.ms-pki.stl",
                    "USDZ=model/vnd.usdz+zip"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.dam.scene7.impl.Scene7ConfigurationEventListener",
        "name": "Adobe CQ Scene7 Configuration Listener",
        "description": "The Adobe CQ Scene7 Configuration Listener caches various Scene7 configuration data when a configuration is updated",
        "bundleName": "com.day.cq.dam.cq-scene7-core",
        "attributes": {
            "cq.dam.scene7.configurationeventlistener.enabled": {
                "name": "Enabled",
                "description": "Enable the Adobe CQ Scene7 Configuration Listener to monitor configuration changes",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.dam.scene7.impl.Scene7FlashTemplatesServiceImpl",
        "name": "Adobe CQ Scene7 Flash Template Service",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-scene7-core",
        "attributes": {
            "scene7FlashTemplates.rti": {
                "name": "Scene7 RTI modifier",
                "description": "The Scene7 Replace Text Instance (rti) modifier value",
                "type": "String",
                "cardinality": "required",
                "default": "rti"
            },
            "scene7FlashTemplates.rsi": {
                "name": "Scene7 RSI modifier",
                "description": "The Scene7 Replace Symbol Instance (rsi) modifier value",
                "type": "String",
                "cardinality": "required",
                "default": "rsi"
            },
            "scene7FlashTemplates.rb": {
                "name": "Scene7 RB modifier",
                "description": "The Scene7 Replace Bitmap (rb) modifier value",
                "type": "String",
                "cardinality": "required",
                "default": "rb"
            },
            "scene7FlashTemplates.rurl": {
                "name": "Scene7 RURL modifier",
                "description": "The Scene7 Replace URL (rurl) modifier value",
                "type": "String",
                "cardinality": "required",
                "default": "rurl"
            },
            "scene7FlashTemplate.urlFormatParameter": {
                "name": "Scene7 URL format parameter",
                "description": "The Scene7 URL parameter that needs to be appended to the url of the template in order to change the format of the response",
                "type": "String",
                "cardinality": "required",
                "default": "fmt"
            }
        }
    },
    {
        "id": "com.day.cq.dam.scene7.impl.Scene7UploadServiceImpl",
        "name": "Adobe Scene7 Upload Service ",
        "description": "The Adobe CQ Scene7 Upload Service synchronizes AEM asset to Scene7 servers",
        "bundleName": "com.day.cq.dam.cq-scene7-core",
        "attributes": {
            "cq.dam.scene7.uploadservice.activejobtimeout.label": {
                "name": "Active job timeout",
                "description": "The timeout in SECONDS for active Scene7 upload job",
                "type": "Integer",
                "cardinality": "required",
                "default": 2100
            },
            "cq.dam.scene7.uploadservice.connectionmaxperroute.label": {
                "name": "Number of connections",
                "description": "The maximum number of connections used for Scene7 upload job",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "com.day.cq.dam.stock.integration.impl.cache.StockCacheConfigurationServiceImpl",
        "name": "Adobe Stock Cache Configuration",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-stock-integration",
        "attributes": {
            "getCacheExpirationUnit": {
                "name": "cacheExpirationTimeUnit",
                "description": "Cache Expiration Time Unit, default Minutes",
                "type": "String",
                "cardinality": "required",
                "default": "MINUTES",
                "options": [
                    {
                        "label": "Seconds",
                        "value": "SECONDS"
                    },
                    {
                        "label": "Minutes",
                        "value": "MINUTES"
                    },
                    {
                        "label": "Hours",
                        "value": "HOURS"
                    },
                    {
                        "label": "Days",
                        "value": "DAYS"
                    }
                ]
            },
            "getCacheExpirationValue": {
                "name": "cacheExpirationTimeValue",
                "description": "Cache Expiration Time Value, default 10",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "com.day.cq.dam.stock.integration.impl.configuration.StockConfigurationImpl",
        "name": "Adobe Stock Configuration Provider",
        "description": "",
        "bundleName": "com.day.cq.dam.cq-dam-stock-integration",
        "attributes": {
            "name": {
                "name": "name",
                "description": "Configuration name of this integration",
                "type": "String",
                "cardinality": "required"
            },
            "locale": {
                "name": "locale",
                "description": "Locale for Stock",
                "type": "String",
                "cardinality": "required",
                "default": "en_US"
            },
            "imsConfig": {
                "name": "imsConfig",
                "description": "IMS Configuration of this integration",
                "type": "String",
                "cardinality": "required"
            },
            "webconsole.configurationFactory.nameHint": {
                "name": "Webconsole configuration factory name hint",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "StockConfiguration name: {name}"
            }
        }
    },
    {
        "id": "com.day.cq.extwidget.servlets.ImageSpriteServlet",
        "name": "Day CQ Image Sprite Servlet",
        "description": "Servlet that draws image sprites bases on basic 2D drawing commands",
        "bundleName": "com.day.cq.cq-widgets-ext",
        "attributes": {
            "maxWidth": {
                "name": "Max image width allowed",
                "description": "Description for maxWidth",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "maxHeight": {
                "name": "Max image height allowed",
                "description": "Description for maxHeight",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "com.day.cq.image.internal.font.FontHelper",
        "name": "Day Commons GFX Font Helper",
        "description": "Configures the GFX Font Helper which helps managing the font path and caching of font information.",
        "bundleName": "day-commons-gfx",
        "attributes": {
            "fontpath": {
                "name": "Font Path",
                "description": "The list of Resource Tree locations providing fonts. Multiple entries may be listed. Each entry must be an absolute path; that is empty entries or entries not starting with a slash (/) character are ignored. The location of each entry must be existing. This may cause the creation of JCR Nodes at configured entry paths.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "oversamplingFactor": {
                "name": "Oversampling Factor",
                "description": "The factor to apply internally to the font when drawing text with the TTOVERSAMPLING flag set. Default value is 16 which is also the value used by the Fonter.exe tool to prepare FonterFonts.",
                "type": "Integer",
                "cardinality": "required",
                "default": 16
            }
        }
    },
    {
        "id": "com.day.cq.jcrclustersupport.ClusterStartLevelController",
        "name": "Day CQ Cluster Based Start Level Controller",
        "description": "Controls the OSGi Framework start level based on whether the bound repository is the Cluster Master or Slave repository.",
        "bundleName": "com.day.cq.cq-jcrclustersupport",
        "attributes": {
            "cluster.level.enable": {
                "name": "Enable",
                "description": "Whether to enable or not the start level controller. Default is \"true\". If the start level controller is disabled the OSGi Framework start level is not changed by this component.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cluster.master.level": {
                "name": "Master Start Level",
                "description": "The start level to switch the framework to if the bound repository is the Cluster Master node. Default is \"30\".",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            },
            "cluster.slave.level": {
                "name": "Master Start Level",
                "description": "The start level to switch the framework to if the bound repository is the Cluster Slave node. Default is \"15\". If this value is less than the providing bundle's current start level, the start level of the bundle is changed to this configured value to ensure the bundle remains started after swichting the start level. In addition, it is suggested to set the OSGi framework initial startlevel to this same startlevel. This can be accomplished by setting the \"org.osgi.framework.startlevel.beginning\" in the sling.properties file to this value.",
                "type": "Integer",
                "cardinality": "required",
                "default": 15
            }
        }
    },
    {
        "id": "com.day.cq.mailer.DefaultMailService",
        "name": "Day CQ Mail Service",
        "description": "The mail service can be used to send emails.",
        "bundleName": "com.day.cq.cq-mailer",
        "attributes": {
            "smtp.host": {
                "name": "SMTP server host name",
                "description": "The mailer uses this SMTP server to send messages",
                "type": "String",
                "cardinality": "required"
            },
            "smtp.port": {
                "name": "SMTP server port",
                "description": "Port number to use to connect to the SMTP server",
                "type": "Integer",
                "cardinality": "required",
                "default": 25
            },
            "smtp.user": {
                "name": "SMTP user",
                "description": "The user for authentication through SMTP",
                "type": "String",
                "cardinality": "required"
            },
            "smtp.password": {
                "name": "SMTP password",
                "description": "The password for authentication through SMTP. The password can either be provided plain text, or crypted via the Crypto Support feature (Main -> Crypto Support menu)",
                "type": "Password",
                "cardinality": "required"
            },
            "from.address": {
                "name": "\"From\" address",
                "description": "The email address to use in the \"From:\" field of messages sent by the mailer",
                "type": "String",
                "cardinality": "required"
            },
            "smtp.ssl": {
                "name": "SMTP use SSL",
                "description": "If enabled, an SSL connection is set up.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "smtp.starttls": {
                "name": "SMTP use StartTLS",
                "description": "If enabled, TLS connection is started.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "debug.email": {
                "name": "Debug email",
                "description": "If enabled, interactions with the SMTP server are dumped to the operating system terminal that runs Sling  ",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "oauth.flow": {
                "name": "Oauth Flow",
                "description": "if enabled, Interaction will use OAuth2 mechanism to send mails.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.mailer.impl.CqMailingService",
        "name": "Day CQ Mailing Service",
        "description": "The service sends out personalized mailings to MailingLists.",
        "bundleName": "com.day.cq.cq-mailer",
        "attributes": {
            "max.recipient.count": {
                "name": "max.recipient.count.name",
                "description": "max.recipient.count.description",
                "type": "String",
                "cardinality": "required",
                "default": "10000"
            }
        }
    },
    {
        "id": "com.day.cq.mailer.impl.email.CqEmailTemplateFactory",
        "name": "Day CQ Mailing Email Template Factory",
        "description": "Builds templates for personalized Emails to be sent out. This mails may content simple plain text or be HTML-Mails.",
        "bundleName": "com.day.cq.cq-mailer",
        "attributes": {
            "mailer.email.charset": {
                "name": "Character Set",
                "description": "The Character set to be used for the mails content",
                "type": "String",
                "cardinality": "required",
                "default": "UTF-8"
            }
        }
    },
    {
        "id": "com.day.cq.mailer.impl.email.CqRetrieverTemplateFactory",
        "name": "Day CQ Mailing WebPage Email Template Factory",
        "description": "Builds templates for personalized HTML-Emails to be sent out. The Template's Content will be retrieved from an WebPage given by an URL.",
        "bundleName": "com.day.cq.cq-mailer",
        "attributes": {
            "mailer.email.embed": {
                "name": "Embed Resources",
                "description": "If set, the resources, like images, files are embedded in the mail. Defaults to false, which means they are linked from the host",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "mailer.email.charset": {
                "name": "Character Set",
                "description": "The Character set to be used for the mails content",
                "type": "String",
                "cardinality": "required",
                "default": "UTF-8"
            },
            "mailer.email.retrieverUserID": {
                "name": "HTTP User name",
                "description": "In case the content has to be downloaded from a Webserver that requires authentication, the User-ID to connect with",
                "type": "String",
                "cardinality": "required"
            },
            "mailer.email.retrieverUserPWD": {
                "name": "HTTP User password",
                "description": "In case the content has to be downloaded from a Webserver that requires authentication, the password to connect with.If no user name and no password is configured, anonymous access is attempted.",
                "type": "Password",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.mailer.oauth.impl.OAuthConfigurationProviderImpl",
        "name": "CQ Mailer SMTP OAuth2 Provider",
        "description": "CQ Mailer SMTP OAuth2 Provider",
        "bundleName": "com.day.cq.cq-mailer",
        "attributes": {
            "authUrl": {
                "name": "Authorization Url",
                "description": "Authorization Url",
                "type": "String",
                "cardinality": "required"
            },
            "tokenUrl": {
                "name": "Token Url",
                "description": "Token Url",
                "type": "String",
                "cardinality": "required"
            },
            "clientId": {
                "name": "Client Id",
                "description": "Client Id",
                "type": "String",
                "cardinality": "required"
            },
            "clientSecret": {
                "name": "Client Secret",
                "description": "The ClientSecret can either be provided plain text, or crypted via the Crypto Support feature",
                "type": "String",
                "cardinality": "required"
            },
            "scopes": {
                "name": "Scopes",
                "description": "Scopes",
                "type": "String",
                "cardinality": "unlimited"
            },
            "authCodeRedirectUrl": {
                "name": "AuthCode Redirect Url",
                "description": "AuthCode Redirect Url",
                "type": "String",
                "cardinality": "required",
                "default": "http://ip:port/services/mailer/oauth2/token"
            },
            "refreshUrl": {
                "name": "Refresh token Url",
                "description": "Refresh token Url",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.mcm.campaign.impl.IntegrationConfigImpl",
        "name": "AEM Campaign Integration - Configuration",
        "description": "Configures the AEM integration for Adobe Campaign.",
        "bundleName": "com.day.cq.mcm.cq-mcm-campaign",
        "attributes": {
            "aem.mcm.campaign.formConstraints": {
                "name": "AEM Forms Constraints",
                "description": "Provide allowed form constraints in the form <campaignType>:<formConstraint>",
                "type": "String",
                "cardinality": 4096,
                "default": [
                    "string:foundation/components/form/constraints/email",
                    "string:foundation/components/form/constraints/name",
                    "numeric:foundation/components/form/constraints/numeric",
                    "date:foundation/components/form/constraints/date"
                ]
            },
            "aem.mcm.campaign.publicUrl": {
                "name": "Public URL",
                "description": "The public facing URL to be used for links, images, etc. from a published mail. Keep empty to use the replication config of the default publish instance.",
                "type": "String",
                "cardinality": "required"
            },
            "aem.mcm.campaign.relaxedSSL": {
                "name": "Relaxed SSL",
                "description": "Choose this option to allow relaxed SSL certificate checking. Warning: This may impose a security breach and should not be active in production environments.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.mcm.campaign.importer.PersonalizedTextHandlerFactory",
        "name": "com.day.cq.mcm.campaign.importer.PersonalizedTextHandlerFactory",
        "description": "",
        "bundleName": "com.day.cq.mcm.cq-mcm-campaign",
        "attributes": {
            "service.ranking": {
                "name": "service.ranking.name",
                "description": "service.ranking.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "tagpattern.name",
                "description": "tagpattern.description",
                "type": "String",
                "cardinality": "required",
                "default": "<(p|span|div)\\s+.*data-cq-component=\"(?i)personalized-text\".*?>"
            }
        }
    },
    {
        "id": "com.day.cq.mcm.core.newsletter.NewsletterEmailServiceImpl",
        "name": "Day CQ MCM Newsletter",
        "description": "Newsletter Service.",
        "bundleName": "com.day.cq.mcm.cq-mcm-core",
        "attributes": {
            "from.address": {
                "name": "From Email Address",
                "description": "The from address to be used to send the newsletter. If this is not specified the default from mail address of the mail service will be used.",
                "type": "String",
                "cardinality": "required"
            },
            "sender.host": {
                "name": "Lookup for Sender Host",
                "description": "Define the match for the Request Map match that should be used to resolve the Host to be used to send the Mail. (s. JCR ResourceResolver)",
                "type": "String",
                "cardinality": "required",
                "default": "http://--publish--"
            },
            "max.bounce.count": {
                "name": "Bounce Counter Maximum",
                "description": "The maximum bounce counter to test the user's bounce counter against. Users exceeding this maximum will no longer receive newsletters. Defaults to 3. A value of 0 disables bounce counter checks.",
                "type": "String",
                "cardinality": "required",
                "default": "3"
            }
        }
    },
    {
        "id": "com.day.cq.mcm.impl.MCMConfiguration",
        "name": "Day CQ MCM Configuration",
        "description": "Configures the MCM",
        "bundleName": "com.day.cq.mcm.cq-mcm-core",
        "attributes": {
            "experience.indirection": {
                "name": "Experience Indirection",
                "description": "Use this to implement a subtype component of an mcm experience component, eg. an own newsletter component.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "touchpoint.indirection": {
                "name": "Touchpoint Indirection",
                "description": "Use this to implement a subtype component of a touchpoint component.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.mcm.landingpage.parser.taghandlers.cta.ClickThroughComponentTagHandlerFactory",
        "name": "ClickThroughComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out ClickThroughComponentTagHandler instances",
        "bundleName": "com.day.cq.mcm.cq-mcm-landingpage",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<(div|span|a)\\s+.*?data-cq-component=\"(?i)clickThroughLink\".*?>"
            },
            "component.resourceType": {
                "name": "component.resourceType.name",
                "description": "component.resourceType.description",
                "type": "String",
                "cardinality": "required",
                "default": "mcm/components/cta-clickthroughlink"
            }
        }
    },
    {
        "id": "com.day.cq.mcm.landingpage.parser.taghandlers.cta.GraphicalClickThroughComponentTagHandlerFactory",
        "name": "GraphicalClickThroughComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out GraphicalClickThroughComponentTagHandler instances",
        "bundleName": "com.day.cq.mcm.cq-mcm-landingpage",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<(div|span|a)\\s+.*?data-cq-component=\"(?i)clickThroughGraphicalLink\".*?>"
            },
            "component.resourceType": {
                "name": "component.resourceType.name",
                "description": "component.resourceType.description",
                "type": "String",
                "cardinality": "required",
                "default": "mcm/components/cta-graphicallink"
            }
        }
    },
    {
        "id": "com.day.cq.mcm.landingpage.parser.taghandlers.cta.LeadFormCTAComponentTagHandlerFactory",
        "name": "LeadFormCTAComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out LeadFormCTAComponentTagHandler instances",
        "bundleName": "com.day.cq.mcm.cq-mcm-landingpage",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<(div|form)\\s+.*?data-cq-component=\"(?i)leadformgeneration\".*?>"
            }
        }
    },
    {
        "id": "com.day.cq.mcm.landingpage.parser.taghandlers.mbox.MBoxExperienceTagHandlerFactory",
        "name": "MBoxExperienceTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out MBoxExperienceTagHandler instances",
        "bundleName": "com.day.cq.mcm.cq-mcm-landingpage",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<section\\s+.*?data-cq-component=\"experience\".*?>"
            }
        }
    },
    {
        "id": "com.day.cq.mcm.landingpage.parser.taghandlers.mbox.TargetComponentTagHandlerFactory",
        "name": "TargetComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out TargetComponentTagHandler instances",
        "bundleName": "com.day.cq.mcm.cq-mcm-landingpage",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<div\\s+.*?data-cq-component=\"target\".*?>"
            },
            "component.resourceType": {
                "name": "component.resourceType.name",
                "description": "component.resourceType.description",
                "type": "String",
                "cardinality": "required",
                "default": "cq/personalization/components/target"
            }
        }
    },
    {
        "id": "com.day.cq.notification.impl.NotificationServiceImpl",
        "name": "Day CQ Notification Service",
        "description": "Tracks and distributes notification events.",
        "bundleName": "com.day.cq.cq-notifcation-impl",
        "attributes": {
            "event.filter": {
                "name": "event.filter.name",
                "description": "event.filter.description",
                "type": "String",
                "cardinality": "required",
                "default": "(!(event.application=*))"
            }
        }
    },
    {
        "id": "com.day.cq.personalization.impl.PersonalizationConfigurationProviderImpl",
        "name": "Adobe AEM Personalization Configuration",
        "description": "Adobe AEM Configuration for Personalization",
        "bundleName": "com.day.cq.cq-personalization",
        "attributes": {
            "cq.personalization.enable.filterting.by.ambits": {
                "name": "Enable Filtering by Area",
                "description": "If areas added to a page should be used for filtering wherever possible on author e.g. filtering activities in Target mode",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.personalization.impl.servlets.TargetingConfigurationServlet",
        "name": "Adobe Target Configuration Servlet",
        "description": "Holds configuration values for the Adobe Targeting UI",
        "bundleName": "com.day.cq.cq-personalization",
        "attributes": {
            "forcelocation": {
                "name": "Force location",
                "description": "Enforces the author to input a location for targeting by showing a modal dialog. Default is false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.polling.importer.impl.ManagedPollConfigImpl",
        "name": "Adobe AEM Managed Polling Configuration",
        "description": "Represents a managed polling configuration",
        "bundleName": "com.day.cq.cq-polling-importer",
        "attributes": {
            "id": {
                "name": "Identifier",
                "description": "Identifier of this configuration",
                "type": "String",
                "cardinality": "required"
            },
            "enabled": {
                "name": "Enable",
                "description": "Enable state for the configuration",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "reference": {
                "name": "Is referenced",
                "description": "Reference state for the configuration",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "interval": {
                "name": "Poll interval",
                "description": "Poll interval in seconds of this configuration. Please note that either an interval or expression can be provided, the expression takes precedence.",
                "type": "Long",
                "cardinality": "required",
                "default": 1800
            },
            "expression": {
                "name": "CRON Expression",
                "description": "CRON expression of this configuration. Please note that either an interval or expression can be provided, the expression takes precedence.",
                "type": "String",
                "cardinality": "required"
            },
            "source": {
                "name": "Data source URL",
                "description": "This is given to the Importer handling the 'Scheme' of this configuration to acquire the data.",
                "type": "String",
                "cardinality": "required"
            },
            "target": {
                "name": "Target path",
                "description": "Target path where the polled data is being stored. Value should be omitted if config is referenced.",
                "type": "String",
                "cardinality": "required"
            },
            "login": {
                "name": "Login",
                "description": "Login of this configuration. (Optional)",
                "type": "String",
                "cardinality": "required"
            },
            "password": {
                "name": "Password",
                "description": "Password of this configuration. (Optional)",
                "type": "Password",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.polling.importer.impl.ManagedPollingImporterImpl",
        "name": "Adobe AEM Managed Polling Data Importer",
        "description": "The Managed Polling Importer regularly polls data sources configured as Managed Polling Configurations for updated data to be imported into the repository.",
        "bundleName": "com.day.cq.cq-polling-importer",
        "attributes": {
            "importer.user": {
                "name": "Import User",
                "description": "User used for importing. (Optional, default is 'admin')",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.polling.importer.impl.PollingImporterImpl",
        "name": "Adobe AEM Polling Data Importer",
        "description": "The Polling Importer regularly polls data sources configured as Polling Configurations for updated data to be imported into the repository",
        "bundleName": "com.day.cq.cq-polling-importer",
        "attributes": {
            "importer.min.interval": {
                "name": "Minimum Polling Interval",
                "description": "Default value in miliseconds for the minimum polling interval.",
                "type": "Long",
                "cardinality": "required",
                "default": 300
            },
            "importer.user": {
                "name": "Import User",
                "description": "User used for import. Ensure polling-importer-service has privileges to impersonate that user.",
                "type": "String",
                "cardinality": "required"
            },
            "exclude.paths": {
                "name": "Excluded Paths",
                "description": "Paths which will be excluded from cq:PollConfig registration",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/etc/workflow",
                    "/content/dam"
                ],
                "hint": "path"
            },
            "include.paths": {
                "name": "Allowed paths",
                "description": "Paths considered when registering cq:PollConfig nodes.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/etc/",
                    "/content"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.replication.content.StaticContentBuilder",
        "name": "Adobe Granite Static Content Builder",
        "description": "Builds a static representation of an activated node.",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "host": {
                "name": "host.name",
                "description": "host.description",
                "type": "String",
                "cardinality": "required",
                "default": "localhost"
            },
            "port": {
                "name": "port.name",
                "description": "port.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 4502
            }
        }
    },
    {
        "id": "com.day.cq.replication.impl.AgentManagerImpl",
        "name": "com.day.cq.replication.impl.AgentManagerImpl",
        "description": "",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "job.topics": {
                "name": "job.topics.name",
                "description": "job.topics.description",
                "type": "String",
                "cardinality": "required",
                "default": "com/day/cq/replication/job/*"
            },
            "serviceUser.target": {
                "name": "serviceUser.target.name",
                "description": "serviceUser.target.description",
                "type": "String",
                "cardinality": "required",
                "default": "(subServiceName=replicationService)"
            },
            "agentProvider.target": {
                "name": "agentProvider.target.name",
                "description": "agentProvider.target.description",
                "type": "String",
                "cardinality": "required",
                "default": "(providerName=default)"
            }
        }
    },
    {
        "id": "com.day.cq.replication.impl.content.durbo.BinaryLessContentBuilder",
        "name": "Adobe Granite Binary-Less Content Builder",
        "description": "Builds replication content package without binaries",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "binary.threshold": {
                "name": "Threshold",
                "description": "The size above which binaries are not included in the content.",
                "type": "Long",
                "cardinality": "required",
                "default": 4132
            }
        }
    },
    {
        "id": "com.day.cq.replication.impl.content.durbo.DurboImportConfigurationProviderService",
        "name": "Adobe Granite Durbo Import Configuration Provider",
        "description": "Provider for Durbo import configuration",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "preserve.hierarchy.nodes": {
                "name": "Preserve hierarchy nodes",
                "description": "Preserve hierarchy nodes under rep:User nodes on import",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "ignore.versioning": {
                "name": "Ignore versioning",
                "description": "Ignore mix:versionable node type on import",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "import.acl": {
                "name": "Import ACL",
                "description": "Flag to import ACL. Default false",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "save.threshold": {
                "name": "Save threshold",
                "description": "Number of nodes to import before issuing an intermediate save",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "preserve.user.paths": {
                "name": "Preserve User Paths",
                "description": "Flag to preserve user paths when importing user nodes. Default false",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "preserve.uuid": {
                "name": "Preserve UUIDs",
                "description": "Flag to preserve jcr:uuid property when importing nodes. Default true",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "preserve.uuid.nodetypes": {
                "name": "Preserve UUIDs for nodetypes",
                "description": "Preserve UUIDs for nodes imported with specified (primary) node-types ONLY",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "dam:Asset"
                ]
            },
            "preserve.uuid.subtrees": {
                "name": "Preserve UUIDs in subtree",
                "description": "Preserve UUIDs for nodes imported under specified repository-paths ONLY",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "/content/dam/"
                ],
                "hint": "path"
            },
            "auto.commit": {
                "name": "Auto Commit",
                "description": "Whether the durbo importer should commit",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.replication.impl.ReplicationContentFactoryProviderImpl",
        "name": "Adobe Granite Replication Content Factory Provider",
        "description": "This service allows to define the storage location for replication content packages while they are replicated.",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "replication.content.useFileStorage": {
                "name": "Use File Storage",
                "description": "Whether the created content packages should be stored in the file system or the repository.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "replication.content.maxCommitAttempts": {
                "name": "Max Commit Attempts",
                "description": "Max number of attempts to acquire/release/destroy replication content.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "com.day.cq.replication.impl.ReplicationReceiverImpl",
        "name": "Adobe Granite Replication Receiver Service",
        "description": "The main service for receiving replication.",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "receiver.tmpfile.threshold": {
                "name": "Temp File Threshold",
                "description": "Size of input data that triggers creation of a temporary file.",
                "type": "Long",
                "cardinality": "required",
                "default": 1048576
            },
            "receiver.packages.use.install": {
                "name": "Use Install for Packages?",
                "description": "If selected, the install method will be used for packages, thus creating a snapshot. Otherwise, the extract method will be used instead.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.replication.impl.ReplicatorImpl",
        "name": "Adobe Granite Replicator Service",
        "description": "The main service for replication.",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "distribute_events": {
                "name": "Distribute Events",
                "description": "Create distributed replication events (only needed for clustered environments)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.replication.impl.ReverseReplicator",
        "name": "Adobe Granite Reverse Replicator",
        "description": "Service that polls reverse replication data and imports it.",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "scheduler.period": {
                "name": "Frequency",
                "description": "Poll frequency in seconds",
                "type": "Long",
                "cardinality": "required",
                "default": 30
            }
        }
    },
    {
        "id": "com.day.cq.replication.impl.transport.BinaryLessTransportHandler",
        "name": "Adobe Granite Binary-Less Http Transport Handler",
        "description": "Binary-Less Transport Handler that use Http to replicate content. ",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "disabled.cipher.suites": {
                "name": "Disabled cipher suites",
                "description": "List of cipher suites that should be explicitly disabled. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "enabled.cipher.suites": {
                "name": "Enabled cipher suites",
                "description": "List of cipher suites that should be explicitly enabled. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.replication.impl.transport.Http",
        "name": "Adobe Granite Replication Http Transport Handler",
        "description": "Transport Handler that use Http to replicate content. ",
        "bundleName": "com.day.cq.cq-replication",
        "attributes": {
            "disabled.cipher.suites": {
                "name": "Disabled cipher suites",
                "description": "List of cipher suites that should be explicitly disabled. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "enabled.cipher.suites": {
                "name": "Enabled cipher suites",
                "description": "List of cipher suites that should be explicitly enabled. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.reporting.impl.cache.CacheImpl",
        "name": "Day CQ Reporting Cache",
        "description": "Provides a cache for report data.",
        "bundleName": "com.day.cq.cq-reporting",
        "attributes": {
            "repcache.enable": {
                "name": "Enable",
                "description": "Enables the caching of report data. Use this to speed up report data retrieval.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "repcache.ttl": {
                "name": "TTL",
                "description": "The time (in seconds) report data gets cached.",
                "type": "Integer",
                "cardinality": "required",
                "default": 240
            },
            "repcache.max": {
                "name": "Max entries",
                "description": "Maximum number of reports to be cached. Choose a low number if your reports contains lots of data to avoid out of memory situations.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            }
        }
    },
    {
        "id": "com.day.cq.reporting.impl.ConfigServiceImpl",
        "name": "Day CQ Reporting Configuration",
        "description": "Configures the reporting framework.",
        "bundleName": "com.day.cq.cq-reporting",
        "attributes": {
            "repconf.timezone": {
                "name": "Timezone",
                "description": "Use a timezone ID such as 'America/Los_Angeles' or 'Europe/Zurich' that is used for calculating dates and times. If left empty, the server's default timezone will be used.",
                "type": "String",
                "cardinality": "required"
            },
            "repconf.locale": {
                "name": "Locale",
                "description": "Use a locale ID such as 'en', 'en_US', 'de' or 'de_CH' to specify the locale to be used for reporting.",
                "type": "String",
                "cardinality": "required"
            },
            "repconf.snapshots": {
                "name": "Snapshot Path",
                "description": "Repository path where snapshot data is saved.",
                "type": "String",
                "cardinality": "required",
                "default": "/var/reports",
                "hint": "path"
            },
            "repconf.repdir": {
                "name": "Path to Reports",
                "description": "Repository path where reports are located.",
                "type": "String",
                "cardinality": "required",
                "default": "/etc/reports",
                "hint": "path"
            },
            "repconf.hourofday": {
                "name": "Daily snapshots",
                "description": "Hour of day (0 - 23; local server time) daily snapshots will be taken.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "repconf.minofhour": {
                "name": "Hourly snapshots",
                "description": "Minute of hour (0 - 59) hourly snapshots will be taken.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "repconf.maxrows": {
                "name": "Rows (max)",
                "description": "Maximum number of rows to be included in a snapshot; set to 0 to include all rows",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "repconf.fakedata": {
                "name": "Fake data",
                "description": "Allows the creation of fake historic data (testing purposes only; note that activating this feature might impose security issues!)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "repconf.snapshotuser": {
                "name": "Snapshot user",
                "description": "An optional user ID for taking snapshot. Basically, snapshots are taken for the user that has finsihed the report. There might be situations (for example on a publish system) where you might want specify a fallback user that is used instead. Note that specifying a user might impose a security risk.",
                "type": "String",
                "cardinality": "required"
            },
            "repconf.enforcesnapshotuser": {
                "name": "Enforce snapshot user",
                "description": "Check if snapshots should always be taken for the user specified above. Note that this might have serious security impacts if not handled correctly. ",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.reporting.impl.RLogAnalyzer",
        "name": "Day CQ Reporting Request Log Analyzer Configuration",
        "description": "Configures the reporting request log analyzer.",
        "bundleName": "com.day.cq.cq-reporting",
        "attributes": {
            "request.log.output": {
                "name": "request.log.output.name",
                "description": "request.log.output.description",
                "type": "String",
                "cardinality": "required",
                "default": "/logs/request.log"
            }
        }
    },
    {
        "id": "com.day.cq.rewriter.linkchecker.impl.LinkCheckerImpl",
        "name": "Day CQ Link Checker Service",
        "description": "Performs asynchronous checking of external links.",
        "bundleName": "com.day.cq.cq-rewriter",
        "attributes": {
            "scheduler.period": {
                "name": "Scheduler Period",
                "description": "The time ( in seconds ) between background runs of the link checker.",
                "type": "Long",
                "cardinality": "required",
                "default": 5
            },
            "scheduler.concurrent": {
                "name": "scheduler.concurrent.name",
                "description": "scheduler.concurrent.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "service.bad_link_tolerance_interval": {
                "name": "Bad Link Tolerance Interval",
                "description": "The number of hours after which a repeatedly unsuccessfully checked link is considered a bad link.",
                "type": "Integer",
                "cardinality": "required",
                "default": 48
            },
            "service.check_override_patterns": {
                "name": "Link Check Override Patterns",
                "description": "Space-separated list of Java regular expression patterns for links that should not be checked by the link checker, but must be a valid uri anyways.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "^system/"
                ]
            },
            "service.cache_broken_internal_links": {
                "name": "Cache Broken Internal Links",
                "description": "Enable caching of broken internal links. This option will improve performance of pages with many broken links that point within the same site.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "service.special_link_prefix": {
                "name": "Special Link Prefixes",
                "description": "Prefixes that specify a special link that is not checked or rewritten at all.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "javascript:",
                    "mailto:",
                    "tel:",
                    "#",
                    "<!--",
                    "${"
                ]
            },
            "service.special_link_patterns": {
                "name": "Special Link Patterns",
                "description": "Patterns that specify a special link that is not checked or rewritten at all.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.rewriter.linkchecker.impl.LinkCheckerTask",
        "name": "Day CQ Link Checker Task",
        "description": "Performs link checking",
        "bundleName": "com.day.cq.cq-rewriter",
        "attributes": {
            "scheduler.period": {
                "name": "Scheduler Period",
                "description": "The time ( in seconds ) between background runs of the link checker.",
                "type": "Long",
                "cardinality": "required",
                "default": 3600
            },
            "scheduler.concurrent": {
                "name": "scheduler.concurrent.name",
                "description": "scheduler.concurrent.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "User-Agent": {
                "name": "User-Agent request header",
                "description": "User Agent is required in Http HEAD request for some domain",
                "type": "String",
                "cardinality": "required"
            },
            "good_link_test_interval": {
                "name": "Good Link Test Interval",
                "description": "The interval in hours to check good links.",
                "type": "Integer",
                "cardinality": "required",
                "default": 24
            },
            "bad_link_test_interval": {
                "name": "Bad Link Test Interval",
                "description": "The interval in hours to check bad links.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "link_unused_interval": {
                "name": "link_unused_interval.name",
                "description": "link_unused_interval.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 168
            },
            "connection.timeout": {
                "name": "Connection Timeout",
                "description": "The time ( in milliseconds ) for connection to disconnect.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10000
            }
        }
    },
    {
        "id": "com.day.cq.rewriter.linkchecker.impl.LinkCheckerTransformerFactory",
        "name": "Day CQ Link Checker Transformer",
        "description": "This is the linkchecker transformer which handles each page request. By default it rewrites links and checks them.",
        "bundleName": "com.day.cq.cq-rewriter",
        "attributes": {
            "linkcheckertransformer.disableRewriting": {
                "name": "Disable Rewriting",
                "description": "Completly disable all rewriting of links.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "linkcheckertransformer.disableChecking": {
                "name": "Disable Checking",
                "description": "Completly disable all link checking. All links are handled as valid.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "linkcheckertransformer.mapCacheSize": {
                "name": "Map Cache Size",
                "description": "The cache for the map operations. A value of less than 50 disables the cache.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "linkcheckertransformer.strictExtensionCheck": {
                "name": "Strict Extension Check",
                "description": "If checked, a strict extension check is performed to detect HTML pages. By default the extension can occur at any location in the path and can be followed by a suffix. With strict checking, the extension has to be the last element in the path. Only for links to HTML pages the mapping configuration is used.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "linkcheckertransformer.stripHtmltExtension": {
                "name": "Strip HTML Extension",
                "description": "If checked, all links with a .html or .htm extension are rewritten and their extension is removed.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "linkcheckertransformer.rewriteElements": {
                "name": "Rewrite Elements",
                "description": "List of html elements and their attributes which are rewritten. Pleasse add each entry in the form {elementName}:{attributeName}.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "a:href",
                    "area:href",
                    "form:action",
                    "img:src",
                    "link:href",
                    "script:src"
                ]
            },
            "linkcheckertransformer.stripExtensionPathBlacklist": {
                "name": "Blacklisted paths",
                "description": "Add paths for which stripping of extension is NOT to be performed",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.rewriter.linkchecker.impl.LinkInfoStorageImpl",
        "name": "Day CQ Link Checker Info Storage Service",
        "description": "Link Checker repository Storage.",
        "bundleName": "com.day.cq.cq-rewriter",
        "attributes": {
            "service.max_links_per_host": {
                "name": "Maximum Links Per Host",
                "description": "Maximum number of links for each host to be kept in the repository for validation.",
                "type": "Integer",
                "cardinality": "required",
                "default": 500
            },
            "service.save_external_link_references": {
                "name": "Save external link references",
                "description": "If checked, the urls referencing external links will be saved in the repository.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.rewriter.processor.impl.HtmlParserFactory",
        "name": "CQ Rewriter HTML Parser Factory",
        "description": "HTML Parser Factory for CQ Reqriter",
        "bundleName": "com.day.cq.cq-rewriter",
        "attributes": {
            "htmlparser.processTags": {
                "name": "Additional Tags to process",
                "description": "Add additonal tags which need to be processed { default tags processed: A,IMG,AREA,FORM,BASE,LINK,SCRIPT,BODY,HEAD}",
                "type": "String",
                "cardinality": 100,
                "default": [
                    "HEAD",
                    "/HEAD"
                ]
            },
            "htmlparser.preserveCamelCase": {
                "name": "Preserve Camel Case",
                "description": "Preserve Camel Casing of HTML Attributes",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.search.impl.builder.QueryBuilderImpl",
        "name": "Day CQ Query Builder",
        "description": "Advanced Query Builder for JCR",
        "bundleName": "com.day.cq.cq-search",
        "attributes": {
            "excerpt.properties": {
                "name": "Excerpt properties",
                "description": "List of properties that will be included in an excerpt",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "text",
                    "jcr:description"
                ]
            },
            "cache.max.entries": {
                "name": "Facet cache entries",
                "description": "Maximum number of entries to keep in the facet cache. Set to zero to disable caching. Security warning: the cache is shared by all users!",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "cache.entry.lifetime": {
                "name": "Facet cache lifetime",
                "description": "How long (in seconds) to keep facets in the cache. Set to zero to disable automatic expiration.",
                "type": "Integer",
                "cardinality": "required",
                "default": 300
            },
            "xpath.union": {
                "name": "Use Union in Xpath",
                "description": "Expert-only. Use XPath Union statements for union style queries, e.g. searching in multiple paths. Requires Oak 1.5.12+ or a JCR that supports XPath Union queries. Turning this off will loose ability to leverage the search index and leads to more filtering on the querybuilder for such queries.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.search.suggest.impl.SuggestionIndexManagerImpl",
        "name": "CQ Search Suggestion Index Manager",
        "description": "Manages suggestion indexes",
        "bundleName": "com.day.cq.cq-search-suggest",
        "attributes": {
            "pathBuilder.target": {
                "name": "Path builder service",
                "description": "\"com.day.cq.search.suggest.PathBuilder\" service which defines the internal index structure. Use OSGi filter expression.",
                "type": "String",
                "cardinality": "required",
                "default": "(service.pid=com.day.cq.search.suggest.impl.NestedPathBuilder)"
            },
            "suggest.basepath": {
                "name": "Base path",
                "description": "Absolute path where search suggest indexes and collected reports are stored.",
                "type": "String",
                "cardinality": "required",
                "default": "/var/suggest"
            }
        }
    },
    {
        "id": "com.day.cq.searchpromote.impl.PublishSearchPromoteConfigHandler",
        "name": "AEM 6 - Search&Promote integration publish configuration handler",
        "description": "Handler that updates the S&amp;P cloud configuration when this configuration is pushed to publish",
        "bundleName": "com.adobe.cq.cq-searchpromote-integration",
        "attributes": {
            "cq.searchpromote.confighandler.enabled": {
                "name": "Enabled",
                "description": "Enables the configuration handler. It must be disabled on author instances.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.searchpromote.impl.SearchPromoteServiceImpl",
        "name": "AEM 6 - Search&Promote Integration Configuration",
        "description": "Configuration options for Search&Promote integration",
        "bundleName": "com.adobe.cq.cq-searchpromote-integration",
        "attributes": {
            "cq.searchpromote.configuration.server.uri": {
                "name": "Remote server URI",
                "description": "Server URI for template XML requests",
                "type": "String",
                "cardinality": "required",
                "default": "https://searchandpromote.omniture.com/px/"
            },
            "cq.searchpromote.configuration.environment": {
                "name": "Search&Promote Environment",
                "description": "The Search&Promote environment environment to use (stage/live)",
                "type": "String",
                "cardinality": "required",
                "default": "stage"
            },
            "connection.timeout": {
                "name": "Connection timeout",
                "description": "Timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "socket.timeout": {
                "name": "Socket timeout",
                "description": "Timeout in milliseconds for waiting for data or a maximum period of inactivity between two consecutive data packets. Default is 30000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            }
        }
    },
    {
        "id": "com.day.cq.security.ACLSetup",
        "name": "Day CQ ACL Setup Service",
        "description": "Configures ACLs based on configuration",
        "bundleName": "com.day.cq.cq-security",
        "attributes": {
            "cq.aclsetup.rules": {
                "name": "ACL Rule",
                "description": "Defines an ACL rule of the format: ( \"allow\" | \"deny\" ) \";\" ( privileges | \"inherit\" ) \";\" principal \";\" path",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.statistics.impl.StatisticsServiceImpl",
        "name": "Day CQ Statistics Service",
        "description": "The statistics service allows to write statistical data to the repository and run reports on that data.",
        "bundleName": "com.day.cq.cq-statistics",
        "attributes": {
            "scheduler.period": {
                "name": "Cleanup interval",
                "description": "The interval in seconds for the cleanup task.",
                "type": "Long",
                "cardinality": "required",
                "default": 300
            },
            "scheduler.concurrent": {
                "name": "scheduler.concurrent.name",
                "description": "scheduler.concurrent.description",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "path": {
                "name": "Base path",
                "description": "Absolute path were statistical data is stored.",
                "type": "String",
                "cardinality": "required",
                "default": "/var/statistics"
            },
            "workspace": {
                "name": "Workspace name",
                "description": "Name of the workspace where statistical data is stored. The default workspace will be used if you leave this empty.",
                "type": "String",
                "cardinality": "required"
            },
            "keywordsPath": {
                "name": "Keywords path",
                "description": "Relative path of the keyword property.",
                "type": "String",
                "cardinality": "required",
                "default": "jcr:content/cq:keywords"
            },
            "asyncEntries": {
                "name": "Asynchronous Entries",
                "description": "Whether entries should be written asynchronously to the repository. If unchecked, the caller will block until the entry is written to the repository.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.tagging.impl.JcrTagManagerFactoryImpl",
        "name": "Day CQ Tagging Service",
        "description": "Creates a JCR-based tag manager for a given session.",
        "bundleName": "com.day.cq.cq-tagging",
        "attributes": {
            "validation.enabled": {
                "name": "Enable validation",
                "description": "Validate changes to cq:tags properties using an observation listener",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.tagging.impl.search.TagPredicateEvaluator",
        "name": "Day CQ Tag Predicate Evaluator",
        "description": "Use to evaluate tag predicates",
        "bundleName": "com.day.cq.cq-tagging",
        "attributes": {
            "ignore_path": {
                "name": "ignore path",
                "description": "Ignore path in xpath query expansion",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.tagging.impl.TagGarbageCollector",
        "name": "Day CQ Tagging Garbage Collector",
        "description": "Garbage collects moved and merged tags at scheduled intervals.",
        "bundleName": "com.day.cq.cq-tagging",
        "attributes": {
            "scheduler.expression": {
                "name": "Cron expression",
                "description": "Run at the given cron expression times (defaults to once a day at midnight) http://www.docjar.com/docs/api/org/quartz/CronTrigger.html",
                "type": "String",
                "cardinality": "required",
                "default": "0 0 12 * * ?"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.contentsync.impl.handler.PagesUpdateHandler",
        "name": "Day CQ WCM Pages Update Handler",
        "description": "Updates the cache for CQ pages also considering referenced assets.",
        "bundleName": "com.day.cq.wcm.cq-wcm-content-sync",
        "attributes": {
            "cq.pagesupdatehandler.imageresourcetypes": {
                "name": "cq.pagesupdatehandler.imageresourcetypes.name",
                "description": "cq.pagesupdatehandler.imageresourcetypes.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "foundation/components/image"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.contentsync.impl.rewriter.PathRewriterTransformerFactory",
        "name": "Day CQ Path Rewriting Transformer Factory",
        "description": "Creates a transformer that rewrites to relative or externalized paths.",
        "bundleName": "com.day.cq.wcm.cq-wcm-content-sync",
        "attributes": {
            "cq.contentsync.pathrewritertransformer.mapping.links": {
                "name": "Link mapping",
                "description": "Mapping of link tags to their attributes (tag:attribute).",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "a:href",
                    "area:href",
                    "form:action"
                ]
            },
            "cq.contentsync.pathrewritertransformer.mapping.clientlibs": {
                "name": "Script and style mapping",
                "description": "Mapping of script and style tags to their attributes (tag:attribute).",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "script:src",
                    "styles:src",
                    "link:href"
                ]
            },
            "cq.contentsync.pathrewritertransformer.mapping.images": {
                "name": "Image mapping",
                "description": "Mapping of image tags to their attributes (tag:attribute:attributeN).",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "img:src",
                    "video:src:poster",
                    "source:src"
                ]
            },
            "cq.contentsync.pathrewritertransformer.attribute.pattern": {
                "name": "Attribute pattern mapping",
                "description": "Regular expression to identify capturing group where path can be found in an attribute.",
                "type": "String",
                "cardinality": "required",
                "default": "style:url\\('(.+)'\\)"
            },
            "cq.contentsync.pathrewritertransformer.clientlibrary.pattern": {
                "name": "Client library pattern",
                "description": "Regular expression to identify client libraries included by client library manager.",
                "type": "String",
                "cardinality": "required",
                "default": "\"p\":\"(/[^\"]*)\""
            },
            "cq.contentsync.pathrewritertransformer.clientlibrary.replace": {
                "name": "Client library replace pattern",
                "description": "Replace expression used for rewriting paths to client libraries included by client library manager.",
                "type": "String",
                "cardinality": "required",
                "default": "\"p\":\"$1\""
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.AuthoringUIModeServiceImpl",
        "name": "WCM Authoring UI Mode Service",
        "description": "WCM Authoring UI Mode service provides helpers to get and edit authoring mode, as well as to get the corresponding editor URL, and a request filter to add it as a request attribute",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "authoringUIModeService.default": {
                "name": "Default authoring UI mode",
                "description": "Name of the default authoring UI mode",
                "type": "String",
                "cardinality": "required",
                "default": "TOUCH"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.commands.WCMCommandServlet",
        "name": "Day CQ WCM Command Servlet",
        "description": "Servlet for various WCM page and asset related commands",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "wcmcommandservlet.delete_whitelist": {
                "name": "Delete whitelist",
                "description": "Path prefixes that are allowed to be deleted through the WCM delete page/asset command",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content/",
                    "/etc/",
                    "/conf/",
                    "/var/commerce/collections/",
                    "/var/commerce/orders/",
                    "/var/commerce/payment-methods/",
                    "/var/commerce/products/",
                    "/var/commerce/shipping-methods/",
                    "/apps/msm/"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.devicedetection.DeviceIdentificationModeImpl",
        "name": "Day CQ Device Identification Mode",
        "description": "The DeviceIdentificationMode provides the default configuration for the client identification mechanism used by CQ.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "dim.default.mode": {
                "name": "Default Device Identification Mode",
                "description": "The default value is used in case no cq:deviceIdentificationMode property is found on a page node or on its parent nodes",
                "type": "String",
                "cardinality": "required",
                "default": "server-side",
                "options": [
                    {
                        "label": "Client-side",
                        "value": "client-side"
                    },
                    {
                        "label": "Server-side",
                        "value": "server-side"
                    },
                    {
                        "label": "None",
                        "value": "none"
                    }
                ]
            },
            "dim.appcache.enabled": {
                "name": "Application Cache",
                "description": "The application cache, if enabled, will allow sending meaningful events when an application's DeviceIdentificationMode changes. For more details about these events check the DeviceIdentificationMode#TOPIC* properties.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.event.PagePostProcessor",
        "name": "Day CQ WCM Page Processor",
        "description": "Listens to page changes and updates the modified date for the changed pages.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "paths": {
                "name": "Paths",
                "description": "Paths to listen",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content",
                    "/etc",
                    "/conf"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.event.RepositoryChangeEventListener",
        "name": "Day CQ WCM Repository Change Listener",
        "description": "Listens to repository changes",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "paths": {
                "name": "Paths",
                "description": "Paths to listen",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content",
                    "/etc",
                    "/conf"
                ],
                "hint": "path"
            },
            "excludedPaths": {
                "name": "Excluded Paths",
                "description": "Paths which are not monitored for page events",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/etc/workflow/instances",
                    "/etc/taskmanagement"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.event.TemplatePostProcessor",
        "name": "Day CQ WCM Template Processor",
        "description": "Listens to template changes and updates the modified date for the changed templates.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "paths": {
                "name": "Paths",
                "description": "Paths to listen",
                "type": "String",
                "cardinality": "required",
                "default": "/conf"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.LanguageManagerImpl",
        "name": "Day CQ WCM Language Manager",
        "description": "The WCM Language Manager",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "langmgr.list.path": {
                "name": "Language list",
                "description": "Path to language list in repository",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/wcm/core/resources/languages",
                "hint": "path"
            },
            "langmgr.country.default": {
                "name": "Default countries",
                "description": "List of default countries. Deprecated in favor of language list.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.LinkCheckerConfigurationFactoryImpl",
        "name": "Day CQ WCM Link Checker Configuration Factory",
        "description": "Provides different configurations for the link checker depending on the WCM mode",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "link.expired.prefix": {
                "name": "Expired Prefix",
                "description": "Prefix string for expired links",
                "type": "String",
                "cardinality": "required",
                "default": "<img class=\"cq-LinkChecker cq-LinkChecker--prefix cq-LinkChecker--expired\" src=\"/libs/cq/linkchecker/resources/linkcheck_o.gif\" alt=\"expired link: %s\" title=\"expired link: %s\" border=\"0\">"
            },
            "link.expired.remove": {
                "name": "Expired Remove",
                "description": "Controls if the expired links should be removed",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "link.expired.suffix": {
                "name": "Expired Suffix",
                "description": "Suffix string for expired links",
                "type": "String",
                "cardinality": "required",
                "default": "<img class=\"cq-LinkChecker cq-LinkChecker--suffix cq-LinkChecker--expired\" src=\"/libs/cq/linkchecker/resources/linkcheck_c.gif\" border=\"0\">"
            },
            "link.invalid.prefix": {
                "name": "Invalid Prefix",
                "description": "Prefix string for invalid links",
                "type": "String",
                "cardinality": "required",
                "default": "<img class=\"cq-LinkChecker cq-LinkChecker--prefix cq-LinkChecker--invalid\" src=\"/libs/cq/linkchecker/resources/linkcheck_o.gif\" alt=\"invalid link: %s\" title=\"invalid link: %s\" border=\"0\">"
            },
            "link.invalid.remove": {
                "name": "Invalid Remove",
                "description": "Controls if the invalid links should be removed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "link.invalid.suffix": {
                "name": "Invalid Suffix",
                "description": "Suffix string for invalid links",
                "type": "String",
                "cardinality": "required",
                "default": "<img class=\"cq-LinkChecker cq-LinkChecker--suffix cq-LinkChecker--invalid\" src=\"/libs/cq/linkchecker/resources/linkcheck_c.gif\" border=\"0\">"
            },
            "link.predated.prefix": {
                "name": "Predated Prefix",
                "description": "Prefix string for predated links",
                "type": "String",
                "cardinality": "required",
                "default": "<img class=\"cq-LinkChecker cq-LinkChecker--prefix cq-LinkChecker--predated\" src=\"/libs/cq/linkchecker/resources/linkcheck_o.gif\" alt=\"predated link: %s\" title=\"predated link: %s\" border=\"0\">"
            },
            "link.predated.remove": {
                "name": "Predated Remove",
                "description": "Controls if the predated links should be removed",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "link.predated.suffix": {
                "name": "Predated Suffix",
                "description": "Suffix string for predated links",
                "type": "String",
                "cardinality": "required",
                "default": "<img class=\"cq-LinkChecker cq-LinkChecker--suffix cq-LinkChecker--predated\" src=\"/libs/cq/linkchecker/resources/linkcheck_c.gif\" border=\"0\">"
            },
            "link.wcmmodes": {
                "name": "WCM Modes",
                "description": "WCM modes to which this configuration applies",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "EDIT",
                    "READ_ONLY",
                    "DESIGN"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.onofftime.OnOffTriggerConfigProviderService",
        "name": "On Off Trigger Configuration",
        "description": "Configuration related to on-/off trigger processing",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "getBatchSize": {
                "name": "Batch Size",
                "description": "Maximum number of assets & pages that need to be processed at a particular instant of time",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "getJobWindow": {
                "name": "Job Window",
                "description": "The timespan, in weeks, to look for triggers",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.page.PageInfoAggregatorImpl",
        "name": "Adobe AEM Page information providers aggregator service",
        "description": "Aggregates custom page information using multiple PageInfoProvider services",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "page.info.provider.property.regex.default": {
                "name": "page.info.provider.property.regex.default.name",
                "description": "Regular expression used to filter the registered page info providers",
                "type": "String",
                "cardinality": "required",
                "default": "sites.listView.info.provider.*"
            },
            "page.info.provider.property.name": {
                "name": "page.info.provider.property.name.name",
                "description": "Property of the PageInfoProvider service to be checked against the filter regex",
                "type": "String",
                "cardinality": "required",
                "default": "pageInfoProviderType"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.page.PageManagerFactoryImpl",
        "name": "Day CQ WCM Page Manager Factory",
        "description": "The factory for page managers.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "illegalCharMapping": {
                "name": "Illegal Char Mapping",
                "description": "Replacement string to use for illegal characters when creating a page from a title. Defaults to '-' if not defined.",
                "type": "String",
                "cardinality": "required"
            },
            "pageSubTreeActivationCheck": {
                "name": "Page Subtree Activation Check",
                "description": "Sets whether to check the page's subtree for any activated descendants.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.references.content.ContentReferenceConfig",
        "name": "WCM Authoring Content Reference Configuration",
        "description": "Configuration which resource types define a content reference relation",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "contentReferenceConfig.resourceTypes": {
                "name": "Content reference resource types",
                "description": "List of sling resource types and the name of path properties that represent a content reference (default: \"foundation/components/reference@path\")",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "foundation/components/reference@path",
                    "cq/experience-fragments/editor/components/experiencefragment@fragmentPath",
                    "core/wcm/components/experiencefragment/v1/experiencefragment@fragmentVariationPath"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.servlets.contentfinder.AssetViewHandler",
        "name": "Asset View Servlet",
        "description": "Servlet handling asset queries from content finder",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "dam.showexpired": {
                "name": "Show expired assets",
                "description": "Determines whether to show expired assets",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "dam.showhidden": {
                "name": "Show assets of hidden parent or grandparent folders",
                "description": "Determines whether to show assets, when their parent or grandparent folder has hidden=true property",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "tagTitleSearch": {
                "name": "Search Tag Titles",
                "description": "Determines whether to include tag titles in full text search",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "guessTotal": {
                "name": "Guess Total Value",
                "description": "configure default value for querybuilder guessTotal",
                "type": "String",
                "cardinality": "required",
                "default": "true"
            },
            "dam.expiryProperty": {
                "name": "Expiry property",
                "description": "Path of the property determing asset expiry",
                "type": "String",
                "cardinality": "required",
                "default": "jcr:content/offTime"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.servlets.contentfinder.connector.ConnectorViewHandler",
        "name": "ConnectorViewHandler Item Resource Types",
        "description": "List of valid item resource types that can be rendered.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "item.resource.types": {
                "name": "ConnectorViewHandler Valid Item Resource Types",
                "description": "item.resource.types.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "item.resource.types"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.servlets.contentfinder.PageViewHandler",
        "name": "pageviewhandler.name",
        "description": "pageviewhandler.description",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "guessTotal": {
                "name": "Guess Total Value",
                "description": "configure default value for querybuilder guessTotal",
                "type": "String",
                "cardinality": "required",
                "default": "true"
            },
            "tagTitleSearch": {
                "name": "Search Tag Titles",
                "description": "Determines whether to include tag titles in full text search",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.servlets.FindReplaceServlet",
        "name": "Day CQ WCM Find Replace Servlet",
        "description": "Servlet for handling find and replace.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "scope": {
                "name": "Scope",
                "description": "The scope for find and replace.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcr:title",
                    "jcr:description",
                    "jcr:text",
                    "text"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.servlets.ReferenceSearchServlet",
        "name": "Day CQ WCM Reference Search Servlet",
        "description": "The servlet for reference search",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "referencesearchservlet.maxReferencesPerPage": {
                "name": "Max references per page",
                "description": "Maximum number of references returned per page in json (-1 for no limit)",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "referencesearchservlet.maxPages": {
                "name": "Max pages",
                "description": "Maximum number of pages returned in json (-1 for no limit)",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.servlets.ThumbnailServlet",
        "name": "com.day.cq.wcm.core.impl.servlets.ThumbnailServlet",
        "description": "",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "workspace": {
                "name": "workspace.name",
                "description": "workspace.description",
                "type": "String",
                "cardinality": "required",
                "default": "crx.default"
            },
            "dimensions": {
                "name": "Allowed dimensions",
                "description": "List of accepted dimensions (in WxH format), empty for no restriction (not recommended as it could cause a DoS attack)",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.utils.DefaultPageNameValidator",
        "name": "com.day.cq.wcm.core.impl.utils.DefaultPageNameValidator",
        "description": "",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "nonValidChars": {
                "name": "Non valid characters",
                "description": "The characters which should not be allowed in page names",
                "type": "String",
                "cardinality": "required",
                "default": "%/\\:*?\"[]|."
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.VersionManagerImpl",
        "name": "Day CQ WCM Version Manager",
        "description": "The version manager for the WCM.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "versionmanager.createVersionOnActivation": {
                "name": "Create Version on Activation",
                "description": "This flag controls whether a new version should be created on page activation (see implicit versioning paths).",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "versionmanager.purgingEnabled": {
                "name": "Enable Purging",
                "description": "If set to true, purging is enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "versionmanager.purgePaths": {
                "name": "Purge Paths",
                "description": "The paths to check for version purging.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content"
                ],
                "hint": "path"
            },
            "versionmanager.ivPaths": {
                "name": "Implicit Versioning Paths",
                "description": "The paths where implicit versioning is active.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/"
                ],
                "hint": "path"
            },
            "versionmanager.maxAgeDays": {
                "name": "Max Version Age",
                "description": "The maximum age of a version in days that will not be purged. If this value is less than 1, purging is not performed based on the age of the version.",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            },
            "versionmanager.maxNumberVersions": {
                "name": "Max Number Versions",
                "description": "The maximum number of versions to keep. If this value is less than 1, purging is not performed based on the number of versions.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "versionmanager.minNumberVersions": {
                "name": "Minimum number of versions",
                "description": "The minimum number of versions to keep. If this value is set to a value less than 1 no minimum number of versions is retained.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.VersionPurgeTask",
        "name": "Day CQ WCM Version Purge Task",
        "description": "Periodically runs version purge jobs.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "versionpurge.paths": {
                "name": "Purge paths",
                "description": "The paths to check for version purging.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content"
                ],
                "hint": "path"
            },
            "versionpurge.recursive": {
                "name": "Purge versions recursively",
                "description": "If set true, the version purge starts at the configured paths and traverses the tree to purge versions.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "versionpurge.maxVersions": {
                "name": "Maximum number of versions",
                "description": "The maximum number of versions to keep. If this value is set to a value less than 1 no maximum number of version check is performed.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "versionpurge.minVersions": {
                "name": "Minimum number of versions",
                "description": "The minimum number of versions to keep. If this value is set to a value less than 1 no minimum number of versions is retained.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "versionpurge.maxAgeDays": {
                "name": "Maximum version age",
                "description": "The maximum age of a version in days before it is purged. If this value is set to a value less than 1 no age check is performed.",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.WCMDebugFilter",
        "name": "Day CQ WCM Debug Filter",
        "description": "Controls the WCM debug mode.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "wcmdbgfilter.enabled": {
                "name": "Enabled",
                "description": "Controls if the filter is enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "wcmdbgfilter.jspDebug": {
                "name": "JSP Debug Info",
                "description": "Show JSP debug information in errors and stacktraces.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.impl.WCMDeveloperModeFilter",
        "name": "Day CQ WCM Developer Mode Filter",
        "description": "Generates info for the Developer Mode view in the page editor.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "wcmdevmodefilter.enabled": {
                "name": "Enabled",
                "description": "Controls if the filter is enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.stats.PageViewStatisticsImpl",
        "name": "Day CQ WCM Page Statistics",
        "description": "Configures Collection of data and runs report of Page impressions",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "pageviewstatistics.trackingurl": {
                "name": "URL to send data",
                "description": "Send data to the server collecting statistics",
                "type": "String",
                "cardinality": "required"
            },
            "pageviewstatistics.trackingscript.enabled": {
                "name": "Tracking script enabled",
                "description": "Enable or disable the inclusion of the tracking script on the pages. No page tracking is available when disabled",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.core.WCMRequestFilter",
        "name": "Day CQ WCM Filter",
        "description": "Controls the WCM mode, component context, edit context and injects javascript for editing.",
        "bundleName": "com.day.cq.wcm.cq-wcm-core",
        "attributes": {
            "wcmfilter.mode": {
                "name": "WCM Mode",
                "description": "Controls the WCM mode.",
                "type": "String",
                "cardinality": "required",
                "default": "edit",
                "options": [
                    {
                        "label": "Edit",
                        "value": "edit"
                    },
                    {
                        "label": "Disabled",
                        "value": "disabled"
                    },
                    {
                        "label": "Preview",
                        "value": "preview"
                    },
                    {
                        "label": "Analytics",
                        "value": "analytics"
                    }
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.DesignPackageImporter",
        "name": "Design Importer",
        "description": "Design Importer",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "extract.filter": {
                "name": "Filter pattern",
                "description": "The list of regular expressions to be used for filtering files from extraction. Design package entries matching any of the specified patterns are excluded from extraction.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "__MACOSX.*",
                    "[^.]*\\.DS_Store",
                    "[^.]*\\.gitignore"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.impl.CanvasBuilderImpl",
        "name": "Canvas Builder",
        "description": "The Canvas Builder that builds canvases for pages containing the importer component",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "filepattern": {
                "name": "File Name Pattern",
                "description": "The Page Builder can be configured to handle HTML files matching a regular expression as defined by file pattern.",
                "type": "String",
                "cardinality": "required",
                "default": "(?i)index\\.html?"
            },
            "build.page.nodes": {
                "name": "Build page nodes",
                "description": "Page component nodes are built for the component div tags encountered in the input HTML. Deselect this option if the component node generation isn't desired.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "build.client.libs": {
                "name": "Build Clientlibs",
                "description": "The JS/CSS present in the design package are collated into CQ clientlibs. Turn this off if the clientlib managment needs to be done in a more controlled manner.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "build.canvas.component": {
                "name": "Build canvas component",
                "description": "A canvas component is generated for the HTML in the design package. Deselect this option if the generation of canvas component isn't desired.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.impl.CanvasPageDeleteHandler",
        "name": "com.day.cq.wcm.designimporter.impl.CanvasPageDeleteHandler",
        "description": "",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "minThreadPoolSize": {
                "name": "minThreadPoolSize",
                "description": "Minimum Thread pool size",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "maxThreadPoolSize": {
                "name": "maxThreadPoolSize",
                "description": "Maximum Thread pool size",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.impl.EntryPreprocessorImpl",
        "name": "Design Package Entry Preprocessor",
        "description": "The preprocessor that intercepts and processes every design package entry before it is extracted to the repository.",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "search.pattern": {
                "name": "Search pattern",
                "description": "The pattern to search for, in the design package entry contents. This regular expression is matched with the entry content line by line. Upon match, the matching text is replaced with the replacement pattern specified.",
                "type": "String",
                "cardinality": "required",
                "default": "/\\* *CQ_DESIGN_PATH *\\*/ *(['\"])"
            },
            "replace.pattern": {
                "name": "Replace pattern",
                "description": "The pattern that replaces the matches found. You may use regex group references like $1, $2. Additionally, this pattern supports keywords like {designPath} which get resolved with the actual value during import.",
                "type": "String",
                "cardinality": "required",
                "default": "$1{designPath}/"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.impl.MobileCanvasBuilderImpl",
        "name": "Mobile Canvas Builder",
        "description": "The Canvas Builder that builds secondary mobile pages under the importer page",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "filepattern": {
                "name": "File Name Pattern",
                "description": "The Page Builder can be configured to handle HTML files matching a regular expression as defined by file pattern.",
                "type": "String",
                "cardinality": "required",
                "default": "(?i)mobile\\.index\\.html?"
            },
            "device.groups": {
                "name": "Device Groups",
                "description": "The list of device groups to be supported",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "mobile/groups/touch",
                    "mobile/groups/smart",
                    "mobile/groups/feature"
                ]
            },
            "build.page.nodes": {
                "name": "Build page nodes",
                "description": "Page component nodes are built for the component div tags encountered in the input HTML. Deselect this option if the component node generation isn't desired.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "build.client.libs": {
                "name": "Build Clientlibs",
                "description": "The JS/CSS present in the design package are collated into CQ clientlibs. Turn this off if the clientlib managment needs to be done in a more controlled manner.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "build.canvas.component": {
                "name": "Build canvas component",
                "description": "A canvas component is generated for the HTML in the design package. Deselect this option if the generation of canvas component isn't desired.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.CanvasComponentTagHandlerFactory",
        "name": "CanvasComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out CanvasComponentTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<div .*(?=id=\"(?i)cqcanvas\").*>"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultComponentTagHandlerFactory",
        "name": "DefaultComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out DefaultComponentTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 4500
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<div.*(?= data-cq-component=\").*>"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.DefaultTagHandlerFactory",
        "name": "DefaultTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out DefaultTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 4000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": ".*"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.HeadTagHandlerFactory",
        "name": "HeadTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out HeadTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<head[\\s>].*>?"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.IFrameTagHandlerFactory",
        "name": "IFrameTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out IFrameTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<iframe\\s+.*?>"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImageComponentTagHandlerFactory",
        "name": "ImageComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out ImageComponentTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<(div|span|img)(?=.* data-cq-component=\"(?i)image\").*>"
            },
            "component.resourceType": {
                "name": "Resource Type",
                "description": "The resourceType of the component that will be generated by this TagHandler",
                "type": "String",
                "cardinality": "required",
                "default": "foundation/components/image"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.ImgTagHandlerFactory",
        "name": "ImgTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out ImgTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<img(?!.* data-cq-component=\"(?i)image\").*>"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.InlineScriptTagHandlerFactory",
        "name": "InlineScriptTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out InlineScriptTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<script(?!.* src=\\\").*>"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.LinkTagHandlerFactory",
        "name": "LinkTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out LinkTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<link(?=.* rel=\"stylesheet\")(?=.* href).*?>"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.MetaTagHandlerFactory",
        "name": "MetaTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out MetaTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<meta[\\s>].*>?"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.NonScriptTagHandlerFactory",
        "name": "NonScriptTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out NonScriptTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5001
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<script(.*?)type=\"(?!(text|application)/javascript)(.*?)>"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.ParsysComponentTagHandlerFactory",
        "name": "ParsysComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out ParsysComponentTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<div\\s+.*?data-cq-component=\"(?i)parsys\".*?>"
            },
            "component.resourceType": {
                "name": "Resource Type",
                "description": "The resourceType of the component that will be generated by this TagHandler",
                "type": "String",
                "cardinality": "required",
                "default": "foundation/components/parsys"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.ScriptTagHandlerFactory",
        "name": "ScriptTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out ScriptTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<script(?=.* src=\").*?>"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.StyleTagHandlerFactory",
        "name": "StyleTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out StyleTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<style[\\s>].*>?"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.TextComponentTagHandlerFactory",
        "name": "TextComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out TextComponentTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<(p|span|div)\\s+.*data-cq-component=\"(?i)text\".*?>"
            },
            "component.resourceType": {
                "name": "Resource Type",
                "description": "The resourceType of the component that will be generated by this TagHandler",
                "type": "String",
                "cardinality": "required",
                "default": "foundation/components/text"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleComponentTagHandlerFactory",
        "name": "TitleComponentTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out TitleComponentTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<(div|h[1-6])\\s+.*?data-cq-component=\"(?i)title\".*?>"
            },
            "component.resourceType": {
                "name": "Resource Type",
                "description": "The resourceType of the component that will be generated by this TagHandler",
                "type": "String",
                "cardinality": "required",
                "default": "wcm/designimporter/components/title"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.designimporter.parser.taghandlers.factory.TitleTagHandlerFactory",
        "name": "TitleTagHandler Factory",
        "description": "The TagHandlerFactory that rolls out TitleTagHandler instances",
        "bundleName": "com.day.cq.wcm.cq-wcm-designimporter",
        "attributes": {
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Service Ranking for this OSGi Service. This ranking determines which implementation is picked up if multiple services are available.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "tagpattern": {
                "name": "Tag Pattern",
                "description": "The pattern for which this tag handler factory instance rolls out a new instance.",
                "type": "String",
                "cardinality": "required",
                "default": "<title[\\s>].*>?"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.forms.impl.FormChooserServlet",
        "name": "Day CQ WCM Form Chooser Servlet",
        "description": "Select form based on request",
        "bundleName": "com.day.cq.wcm.cq-wcm-foundation",
        "attributes": {
            "service.name": {
                "name": "service.name.name",
                "description": "service.name.description",
                "type": "String",
                "cardinality": "required",
                "default": "CQ Form chooser servlet"
            },
            "sling.servlet.resourceTypes": {
                "name": "sling.servlet.resourceTypes.name",
                "description": "sling.servlet.resourceTypes.description",
                "type": "String",
                "cardinality": "required",
                "default": "sling/servlet/default"
            },
            "sling.servlet.selectors": {
                "name": "sling.servlet.selectors.name",
                "description": "sling.servlet.selectors.description",
                "type": "String",
                "cardinality": "required",
                "default": "form"
            },
            "sling.servlet.methods": {
                "name": "sling.servlet.methods.name",
                "description": "sling.servlet.methods.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "GET",
                    "POST"
                ]
            },
            "forms.formchooserservlet.advansesearch.require": {
                "name": "Advanced Search Require",
                "description": "Perform advanced search to locate form (based on cq:formAlias and cq:defaultFormFor)",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.forms.impl.FormParagraphPostProcessor",
        "name": "Day CQ WCM Form Paragraph Post Processor",
        "description": "Post processes form paragraphs and fixes their structure",
        "bundleName": "com.day.cq.wcm.cq-wcm-foundation",
        "attributes": {
            "forms.formparagraphpostprocessor.enabled": {
                "name": "Service enabled",
                "description": "Enable/disable the PostProcessor",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "forms.formparagraphpostprocessor.formresourcetypes": {
                "name": "Form Resource Types",
                "description": "Sling resource types of form this post processor would handle",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "foundation/components/form/start",
                    "foundation/components/form/end"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.forms.impl.FormsHandlingServlet",
        "name": "Adobe CQ Form Handling Servlet",
        "description": "Accepts posting to a form start component and performs validations",
        "bundleName": "com.day.cq.wcm.cq-wcm-foundation",
        "attributes": {
            "name.whitelist": {
                "name": "Parameter Name Whitelist",
                "description": "List of name expressions that will pass request validation. A validation error will occur if any posted parameters are not in the whitelist and not defined on the form.",
                "type": "String",
                "cardinality": "required"
            },
            "allow.expressions": {
                "name": "Allow Expressions",
                "description": "Evaluate expressions on form submissions.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.forms.impl.MailServlet",
        "name": "Adobe CQ Form Mail Servlet",
        "description": "Accepts posting to a form start component and performs validations",
        "bundleName": "com.day.cq.wcm.cq-wcm-foundation",
        "attributes": {
            "sling.servlet.resourceTypes": {
                "name": "sling.servlet.resourceTypes.name",
                "description": "sling.servlet.resourceTypes.description",
                "type": "String",
                "cardinality": "required",
                "default": "foundation/components/form/start"
            },
            "sling.servlet.selectors": {
                "name": "sling.servlet.selectors.name",
                "description": "sling.servlet.selectors.description",
                "type": "String",
                "cardinality": "required",
                "default": "mail"
            },
            "resource.whitelist": {
                "name": "Resource Whitelist",
                "description": "List of paths under which servlet will only accept requests.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content",
                    "/home"
                ],
                "hint": "path"
            },
            "resource.blacklist": {
                "name": "Resource Blacklist",
                "description": "List of paths under which servlet will reject requests.",
                "type": "String",
                "cardinality": "required",
                "default": "/content/usergenerated",
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.impl.AdaptiveImageComponentServlet",
        "name": "Adobe CQ Adaptive Image Component Servlet",
        "description": "Render adaptive images in a variety of qualities",
        "bundleName": "com.day.cq.wcm.cq-wcm-foundation",
        "attributes": {
            "adapt.supported.widths": {
                "name": "Supported Widths",
                "description": "List of widths this component is permitted to generate.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "320",
                    "480",
                    "476",
                    "620"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.impl.HTTPAuthHandler",
        "name": "Adobe Granite HTTP Header Authentication Handler",
        "description": "Implements the authorization steps based on the Authorization header of the HTTP request. This authenticator supports the BASIC authentication method.",
        "bundleName": "com.day.cq.cq-authhandler",
        "attributes": {
            "path": {
                "name": "Path",
                "description": "Repository path for which this authentication handler should be used by Sling. If this is empty, the authentication handler will be disabled.",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "auth.http.nologin": {
                "name": "Disable Login Page",
                "description": "Check this if the Login Page of this authenticator should be disabled or not. If not checked, the loing page is returned if a request to a page triggers the login mechanism. If this is checked, the login page is only returned if explicitly requested (for example by the login servlet at \"/bin/login.html\"). In author systems, this property is generally not checked, while on publish systems this property is checked to prevent presenting casual users with the login form.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "auth.http.realm": {
                "name": "HTTP Realm",
                "description": "Name of the HTTP realm - this name is displayed in the login window to the user (and is a key for the client to cache the credentials).",
                "type": "String",
                "cardinality": "required",
                "default": "Day Communique 5"
            },
            "auth.default.loginpage": {
                "name": "Default Login Page",
                "description": "Absolute path of the page to use to display the default login form. This page is rendered if no Closed User Group applies or the applicable Closed User Group does not declare its own login page. This property is used to render the page as is in an HTTP GET request. As such the value must included any necessary request extension such as \".html\". The default value of this property is \"/login\", which is a vanity URL.",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/cq/core/content/login.html",
                "hint": "url"
            },
            "auth.cred.form": {
                "name": "Login Form Clients",
                "description": "Lists identifiers of clients which are known to support form based HTTP (Basic) authentication. Such authentication presents a form and uses AJAX requests to validate the user name and password and assumes the client caches this information. This is only known to work in Firefox and some Internet Explorer browsers. The default value for this property therefore is [ \"Firefox\", \"Shiretoko\", \"MSIE 7\", \"MSIE 6\" ]. Changing this value is strongly discouraged because it may prevent login. All browsers not supporting form based HTTP (Basic) authentication will use regular HTTP (Basic) authentication using the 401/UNAUTHORIZED status code and the regular browser password dialog.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "Firefox",
                    "Shiretoko",
                    "MSIE 7",
                    "MSIE 6"
                ]
            },
            "auth.cred.utf8": {
                "name": "UTF-8 Credentials",
                "description": "Lists identifiers of clients which are known to encode non-ASCII credentials using UTF-8 character encoding. Clients whose User-Agent header does not contain one of the listed identifiers are assumed to encode the credentials using ISO-8859-1 character encoding. The default list of clients is [ \"Firefox\", \"Shiretoko\", \"Chrome\", \"Opera\", \"curl\", \"Wget\" ].",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "Firefox",
                    "Shiretoko",
                    "Chrome",
                    "Opera",
                    "curl",
                    "Wget"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.impl.PageImpressionsTracker",
        "name": "Adobe Page Impressions Tracker",
        "description": "Adobe Page Impressions configuration component.",
        "bundleName": "com.day.cq.wcm.cq-wcm-foundation",
        "attributes": {
            "sling.auth.requirements": {
                "name": "sling.auth.requirements.name",
                "description": "sling.auth.requirements.description",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.impl.PageRedirectServlet",
        "name": "Adobe CQ Redirect Servlet",
        "description": "Redirect page request to target locations",
        "bundleName": "com.day.cq.wcm.cq-wcm-foundation",
        "attributes": {
            "excluded.resource.types": {
                "name": "Excluded resource types",
                "description": "List of resource types which should be ignored by this redirect servlet.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.security.impl.DefaultAttachmentTypeBlacklistService",
        "name": "Adobe CQ Foundation DefaultAttachmentTypeBlacklistService",
        "description": "",
        "bundleName": "com.day.cq.wcm.cq-wcm-foundation",
        "attributes": {
            "default.attachment.type.blacklist": {
                "name": "default.attachment.type.blacklist.name",
                "description": "default.attachment.type.blacklist.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    ".ade",
                    ".adp",
                    ".app",
                    ".asa",
                    ".asp",
                    ".bas",
                    ".bat",
                    ".cer",
                    ".chm",
                    ".cmd",
                    ".com",
                    ".cpl",
                    ".crt",
                    ".csh",
                    ".dll",
                    ".exe",
                    ".fxp",
                    ".hlp",
                    ".hta",
                    ".htm",
                    ".html",
                    ".htr",
                    ".inf",
                    ".ins",
                    ".isp",
                    ".its",
                    ".js",
                    ".jse",
                    ".ksh",
                    ".lnk",
                    ".mad",
                    ".maf",
                    ".mag",
                    ".mam",
                    ".maq",
                    ".mar",
                    ".mas",
                    ".mat",
                    ".mau",
                    ".mav",
                    ".maw",
                    ".mda",
                    ".mdb",
                    ".mde",
                    ".mdt",
                    ".mdw",
                    ".mdz",
                    ".mht",
                    ".mhtm",
                    ".mhtml",
                    ".msc",
                    ".msi",
                    ".msp",
                    ".mst",
                    ".ocx",
                    ".ops",
                    ".pcd",
                    ".pif",
                    ".prf",
                    ".prg",
                    ".reg",
                    ".scf",
                    ".scr",
                    ".sct",
                    ".shb",
                    ".shs",
                    ".tmp",
                    ".url",
                    ".vb",
                    ".vbe",
                    ".vbs",
                    ".vbx",
                    ".vsmacros",
                    ".vss",
                    ".vst",
                    ".vsw",
                    ".ws",
                    ".wsc",
                    ".wsf",
                    ".wsh",
                    ".xhtml",
                    ".xsl"
                ]
            },
            "baseline.attachment.type.blacklist": {
                "name": "baseline.attachment.type.blacklist.name",
                "description": "baseline.attachment.type.blacklist.description",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    ".php",
                    ".shtml",
                    ".svg",
                    ".swf",
                    ".xml",
                    ".xaml"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.foundation.security.impl.SaferSlingPostValidatorImpl",
        "name": "Adobe CQ Foundation SaferSlingPostValidator",
        "description": "The SaferSlingPostValidator checks POST requests for safety and recommends to REJECT or ACCEPT based on safe/unsafe constructs in the request.",
        "bundleName": "com.day.cq.wcm.cq-wcm-foundation",
        "attributes": {
            "parameter.whitelist": {
                "name": "Parameter Name Whitelist",
                "description": "Properties with : in them are often security significant, by default they are not allowed through, with certain 'safe' values white listed. Properties starting with : in them are automatically white listed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcr:description",
                    "jcr:title",
                    "jcr:lastModified",
                    "jcr:primaryType",
                    "jcr:mixinTypes",
                    "sling:resourceType",
                    "sling:resourceSuperType",
                    "cq:tags"
                ]
            },
            "parameter.whitelist.prefixes": {
                "name": "Parameter Name Prefix Whitelist",
                "description": "This configuration allows white listing certain parameter name prefixes which are known to be safe.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "binary.parameter.whitelist": {
                "name": "Binary Parameter Whitelist",
                "description": "Binary properties with '.' in them can trigger mime type guessing from the 'extension' part when served by the DefaultGetServlet.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "modifier.whitelist": {
                "name": "Modifier Whitelist",
                "description": "Some '@' suffixes allow bypassing security otherwise provided by the Dispatcher. Only white listed suffixes are allowed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "@TypeHint",
                    "@DefaultValue",
                    "@UseDefaultWhenMissing",
                    "@IgnoreBlanks",
                    "@ValueFrom",
                    "@Delete",
                    "@Patch"
                ]
            },
            "operation.whitelist": {
                "name": "Operation Whitelist",
                "description": "The SlingPostServlet supports some powerful :operation values such as import/export. So only the basic safe operations are allowed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "delete",
                    "nop"
                ]
            },
            "operation.whitelist.prefixes": {
                "name": "Operation Prefix Whitelist",
                "description": "Only specific operations given a specific name prefix are allowed.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "typehint.whitelist": {
                "name": "TypeHint Whitelist",
                "description": "A subset of node types known to be safe.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq:CalendarEvent",
                    "nt:unstructured",
                    "nt:folder",
                    "nt:file",
                    "nt:resource",
                    "sling:Folder",
                    "sling:OrderedFolder",
                    "Binary",
                    "Boolean",
                    "Date",
                    "Double",
                    "Long",
                    "Name",
                    "Path",
                    "String",
                    "String[]"
                ]
            },
            "resourcetype.whitelist": {
                "name": "ResourceType Whitelist",
                "description": "All resource type settings, except those that hav been whitelisted. Candidates on the whitelist should be strongly vetted for XSS, CSRF and any other security vulnerabilities.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.mobile.core.impl.device.DeviceInfoTransformerFactory",
        "name": "Day CQ WCM Mobile Device Info TransformerFactory",
        "description": "Optionally adds debugging information about the identification of mobile devices to the response.",
        "bundleName": "com.day.cq.wcm.cq-wcm-mobile-core",
        "attributes": {
            "device.info.transformer.enabled": {
                "name": "Filter enabled",
                "description": "Enable/disable the debugging filter",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "device.info.transformer.css.style": {
                "name": "CSS styles",
                "description": "CSS styles for the debugging filter information",
                "type": "String",
                "cardinality": "required",
                "default": "background-color: white; color: black; text-align:left; padding: 5px; border: solid grey 1px;"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.mobile.core.impl.redirect.RedirectFilter",
        "name": "Day CQ WCM Mobile Device Redirect Filter",
        "description": "Redirects incoming requests based on mobile device detection and device group selectors",
        "bundleName": "com.day.cq.wcm.cq-wcm-mobile-core",
        "attributes": {
            "redirect.enabled": {
                "name": "Enable Redirect Filter",
                "description": "Indicates whether the redirect filter is enabled or not.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "redirect.stats.enabled": {
                "name": "Enable Statistics",
                "description": "Indicates whether the redirect filter will generate statistics reports.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "redirect.extensions": {
                "name": "Request Extensions",
                "description": "List of extensions for which device detection is active and performs redirects for device group selectors.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "html"
                ]
            },
            "redirect.paths": {
                "name": "Request Paths",
                "description": "List of paths for which device detection is active and performs redirects for device group selectors.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/content"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.msm.impl.actions.ContentCopyActionFactory",
        "name": "CQ MSM Content Copy Action",
        "description": "The content copy action",
        "bundleName": "com.day.cq.wcm.cq-msm-core",
        "attributes": {
            "cq.wcm.msm.action.excludednodetypes": {
                "name": "Excluded Nodetypes",
                "description": "The list of regex matching node types to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedparagraphitems": {
                "name": "Excluded Paragraph Items",
                "description": "The list of regex matching paragraph items to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedprops": {
                "name": "Excluded Page Properties",
                "description": "The list of regex matching page properties to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "contentcopyaction.order.style": {
                "name": "Order Style",
                "description": "Select the way newly created Resources should be inserted.",
                "type": "String",
                "cardinality": "required",
                "default": "default",
                "options": [
                    {
                        "label": "Default",
                        "value": "default"
                    },
                    {
                        "label": "Pre CQ5.4",
                        "value": "pre54"
                    }
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.msm.impl.actions.ContentDeleteActionFactory",
        "name": "CQ MSM Content Delete Action",
        "description": "The content delete action",
        "bundleName": "com.day.cq.wcm.cq-msm-core",
        "attributes": {
            "cq.wcm.msm.action.excludednodetypes": {
                "name": "Excluded Nodetypes",
                "description": "The list of regex matching node types to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedparagraphitems": {
                "name": "Excluded Paragraph Items",
                "description": "The list of regex matching paragraph items to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedprops": {
                "name": "Excluded Page Properties",
                "description": "The list of regex matching page properties to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.msm.impl.actions.ContentUpdateActionFactory",
        "name": "CQ MSM Content Update Action",
        "description": "The content update action",
        "bundleName": "com.day.cq.wcm.cq-msm-core",
        "attributes": {
            "cq.wcm.msm.action.excludednodetypes": {
                "name": "Excluded Nodetypes",
                "description": "The list of regex matching node types to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedparagraphitems": {
                "name": "Excluded Paragraph Items",
                "description": "The list of regex matching paragraph items to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedprops": {
                "name": "Excluded Page Properties",
                "description": "The list of regex matching page properties to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.ignoredMixin": {
                "name": "Ignored Mixin NodeTypes",
                "description": "This is the list of regex for matching Mixin-NodeType Names that should not be inherited\"",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    ".*"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.msm.impl.actions.PageMoveActionFactory",
        "name": "CQ MSM Page Move Action",
        "description": "This LiveAction inherits the a move operation in its Blueprint by copying the Page to its move target",
        "bundleName": "com.day.cq.wcm.cq-msm-core",
        "attributes": {
            "cq.wcm.msm.action.excludednodetypes": {
                "name": "Excluded Nodetypes",
                "description": "The list of regex matching node types to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedparagraphitems": {
                "name": "Excluded Paragraph Items",
                "description": "The list of regex matching paragraph items to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedprops": {
                "name": "Excluded Page Properties",
                "description": "The list of regex matching page properties to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.impl.actions.pagemove.prop_referenceUpdate": {
                "name": "Update Referencing Pages",
                "description": "Searches all Pages referencing the copied one and update the reference to the new location",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.wcm.msm.impl.actions.ReferencesUpdateActionFactory",
        "name": "CQ MSM References Update Action",
        "description": "This LiveAction rewrites Links within the source branch to point to the target branch.",
        "bundleName": "com.day.cq.wcm.cq-msm-core",
        "attributes": {
            "cq.wcm.msm.action.excludednodetypes": {
                "name": "Excluded Nodetypes",
                "description": "The list of regex matching node types to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedparagraphitems": {
                "name": "Excluded Paragraph Items",
                "description": "The list of regex matching paragraph items to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.action.excludedprops": {
                "name": "Excluded Page Properties",
                "description": "The list of regex matching page properties to be excluded",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cq.wcm.msm.impl.action.referencesupdate.prop_updateNested": {
                "name": "Update Reference across nested LiveCopies",
                "description": "Default behavior only references to a target in the same LiveCopy are replaced. With this option you can turn on to replace references targeting any Resource that is within the branch of the top-most LiveCopy.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.wcm.msm.impl.LiveRelationshipManagerImpl",
        "name": "Day CQ WCM Live Relationship Manager",
        "description": "The live relationship manager for the WCM.",
        "bundleName": "com.day.cq.wcm.cq-msm-core",
        "attributes": {
            "liverelationshipmgr.relationsconfig.default": {
                "name": "Default rollout config",
                "description": "Live relations default rollout config used if no config is defined on blueprint and on live copy",
                "type": "String",
                "cardinality": "required",
                "default": "/libs/msm/wcm/rolloutconfigs/default",
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.msm.impl.RolloutManagerImpl",
        "name": "Day CQ WCM Rollout Manager",
        "description": "The rollout manager for the WCM.",
        "bundleName": "com.day.cq.wcm.cq-msm-core",
        "attributes": {
            "event.filter": {
                "name": "event.filter.name",
                "description": "event.filter.description",
                "type": "String",
                "cardinality": "required",
                "default": "(!(event.application=*))"
            },
            "rolloutmgr.excludedprops.default": {
                "name": "Excluded Page Properties",
                "description": "The list of excluded page properties.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcr:.*",
                    "sling:.*",
                    "cq:.*"
                ]
            },
            "rolloutmgr.excludedparagraphprops.default": {
                "name": "Excluded Paragraph Properties",
                "description": "The list of excluded paragraph properties.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq:propertyInheritanceCancelled",
                    "jcr:frozenUuid",
                    "jcr:uuid"
                ]
            },
            "rolloutmgr.excludednodetypes.default": {
                "name": "Excluded Nodetypes",
                "description": "The list of excluded nodetypes.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "cq:LiveSyncAction",
                    "cq:LiveSyncConfig",
                    "cq:BlueprintSyncConfig",
                    "cq:LiveCopy"
                ]
            },
            "rolloutmgr.threadpool.maxsize": {
                "name": "Background Thread Pool Size",
                "description": "The maximal amount of Threads rolling out onModification or onPublication in parallel",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "rolloutmgr.threadpool.maxshutdowntime": {
                "name": "Max Shutdown Time",
                "description": "The maximal number of minutes that the rollout manager should wait before being forced to shut down and not process the remaining rollouts",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "rolloutmgr.threadpool.priority": {
                "name": "Background Thread Priority",
                "description": "The priority of the Background Thread to roll out modifications",
                "type": "String",
                "cardinality": "required",
                "default": "MIN",
                "options": [
                    {
                        "label": "Normal",
                        "value": "NORM"
                    },
                    {
                        "label": "Maximal",
                        "value": "MAX"
                    },
                    {
                        "label": "Minimal",
                        "value": "MIN"
                    }
                ]
            },
            "rolloutmgr.commit.size": {
                "name": "Commit Threshold",
                "description": "Amount of Resources changed to be reached before save",
                "type": "Integer",
                "cardinality": "required",
                "default": 500
            },
            "rolloutmgr.conflicthandling.enabled": {
                "name": "Handle conflict with manually created Pages",
                "description": "Set to true, if RolloutManger should handle Conflicts from a Page created in LiveCopy with a name that exists in Blueprint",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.cq.wcm.msm.impl.servlets.AuditLogServlet",
        "name": "Day CQ WCM MSM Audit Log Servlet",
        "description": "Provides MSM-related audit log information",
        "bundleName": "com.day.cq.wcm.cq-msm-core",
        "attributes": {
            "auditlogservlet.default.events.count": {
                "name": "Default events count",
                "description": "Number of events to return if not specified in request",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "auditlogservlet.default.path": {
                "name": "Default path",
                "description": "auditlogservlet.default.path.description",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.notification.email.impl.EmailChannel",
        "name": "Notification Email Channel",
        "description": "Email Channel used in notification framework to publish an event via email",
        "bundleName": "com.day.cq.wcm.cq-wcm-notification",
        "attributes": {
            "email.from": {
                "name": "From email address",
                "description": "From email address to be used from notification emails",
                "type": "String",
                "cardinality": "required",
                "default": "no-reply@acme.com"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.scripting.impl.BVPManager",
        "name": "Adobe CQ WCM Bindings Manager",
        "description": "The Adobe CQ WCM Bindings Manager dynamically registers BindingsValuesProvider services for scripting support.",
        "bundleName": "com.day.cq.wcm.cq-wcm-scripting-support",
        "attributes": {
            "com.day.cq.wcm.scripting.bvp.script.engines": {
                "name": "Scripting engines",
                "description": "The scripting engines for which the WCMBindingsValuesProvider should be active.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jsp",
                    "sightly",
                    "sling-models-exporter"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.undo.UndoConfig",
        "name": "Day CQ WCM Undo Configuration",
        "description": "Provides configuration for CQ's undo facilities.",
        "bundleName": "com.day.cq.wcm.cq-wcm-undo",
        "attributes": {
            "cq.wcm.undo.enabled": {
                "name": "Enable",
                "description": "Check to enable undo for most page editing operations; uncheck to disable undo completely.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cq.wcm.undo.path": {
                "name": "Path",
                "description": "Repository path where binary undo data gets saved.",
                "type": "String",
                "cardinality": "required",
                "default": "/var/undo"
            },
            "cq.wcm.undo.validity": {
                "name": "Min. validity",
                "description": "The minimum number of hours binary data is kept in the repository.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "cq.wcm.undo.steps": {
                "name": "Steps",
                "description": "The number of undoable edit steps.",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "cq.wcm.undo.persistence": {
                "name": "Persistence",
                "description": "The module that is used for persisting the undo history. Leave empty for default module.",
                "type": "String",
                "cardinality": "required"
            },
            "cq.wcm.undo.persistence.mode": {
                "name": "Persistence mode",
                "description": "Check to ensure that the undo history gets persisted after a step is added. Otherwise, the undo history gets persisted on page unload only.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cq.wcm.undo.markermode": {
                "name": "Marker mode",
                "description": "The method that is used for highlightning the affected items after an undo or redo operation. Leave empty for default behaviour.",
                "type": "String",
                "cardinality": "required"
            },
            "cq.wcm.undo.whitelist": {
                "name": "Good components",
                "description": "Defines components that are safe to use for undo.",
                "type": "String",
                "cardinality": 4096,
                "default": [
                    "foundation/components/*"
                ]
            },
            "cq.wcm.undo.blacklist": {
                "name": "Bad components",
                "description": "Defines components (or component operations) that have known problems with undo.",
                "type": "String",
                "cardinality": 4096,
                "default": [
                    "foundation/components/form/start:removeParagraph"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.webservicesupport.impl.ReplicationEventListener",
        "name": "Day CQ WCM Web Service Support Replication Event Listener",
        "description": "Flushes sub resources on Dispatcher for resources using Cloud Services",
        "bundleName": "com.day.cq.wcm.cq-wcm-webservice-support",
        "attributes": {
            "Flush agents": {
                "name": "Property Flush agents",
                "description": "List of agents to force flush on sub resources",
                "type": "String",
                "cardinality": 4096,
                "default": [
                    "flush"
                ]
            }
        }
    },
    {
        "id": "com.day.cq.wcm.workflow.impl.WcmWorkflowServiceImpl",
        "name": "Day CQ WCM Workflow Service",
        "description": "The WCM workflow Service.",
        "bundleName": "com.day.cq.wcm.cq-wcm-workflow",
        "attributes": {
            "event.filter": {
                "name": "event.filter.name",
                "description": "event.filter.description",
                "type": "String",
                "cardinality": "required",
                "default": "(!(event.application=*))"
            },
            "minThreadPoolSize": {
                "name": "minThreadPoolSize",
                "description": "Minimum Thread pool size",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "maxThreadPoolSize": {
                "name": "maxThreadPoolSize",
                "description": "Maximum Thread pool size",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "cq.wcm.workflow.terminate.on.activate": {
                "name": "Terminate on activate",
                "description": "When true running workflows are terminated when their payload is activated",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "cq.wcm.worklfow.terminate.exclusion.list": {
                "name": "Terminate exclusion list",
                "description": "never automatically terminate running workflows when payloads are activated for the specified workflow models. example: /etc/workflow/models/modelname/jcr:content/model",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.wcm.workflow.impl.WorkflowPackageInfoProvider",
        "name": "Day CQ WCM Workflow Package Info Provider",
        "description": "The workflow package info provider for the WCM.",
        "bundleName": "com.day.cq.wcm.cq-wcm-workflow",
        "attributes": {
            "workflowpackageinfoprovider.filter": {
                "name": "Workflow package filter",
                "description": "This can be used to excluded some packages from being added to the results lists. As those packages won't be part of the output, the user won't be able to add the page he is visiting to one of those excluded workflow packages. Use + to include, - to exclude, and provide a Vault filter syntax Example: -/etc/workflow/packages/alison(/.*)? ; +/etc/workflow/packages/alison/but-i-want-this-one ; -/etc/workflow/packages/joe(/.*)?",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            },
            "workflowpackageinfoprovider.filter.rootpath": {
                "name": "Rootpath of package filter",
                "description": "the root path for the filter to include or exclude packages.",
                "type": "String",
                "cardinality": "required",
                "default": "/",
                "hint": "path"
            }
        }
    },
    {
        "id": "com.day.cq.widget.impl.WidgetExtensionProviderImpl",
        "name": "Day CQ Widget Extension Provider",
        "description": "The widget extension provider.",
        "bundleName": "com.day.cq.cq-widgets",
        "attributes": {
            "extendable.widgets": {
                "name": "Extendable Widgets",
                "description": "The list of extendable Widgets.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "contentfinder"
                ]
            },
            "widgetextensionprovider.debug": {
                "name": "Debug",
                "description": "Serve Javascript extensions in a debuggable way.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.workflow.impl.email.EMailNotificationService",
        "name": "Day CQ Workflow Email Notification Service",
        "description": "Listens to workflow events and triggers email notifications.",
        "bundleName": "com.day.cq.workflow.cq-workflow-impl",
        "attributes": {
            "from.address": {
                "name": "From Email Address",
                "description": "Sender address used for the emails.",
                "type": "String",
                "cardinality": "required",
                "default": "noreply@day.com"
            },
            "host.prefix": {
                "name": "Host URL Prefix",
                "description": "Deprecated - Use the 'Link Externalizer' service to configure the host prefix",
                "type": "String",
                "cardinality": "required"
            },
            "notify.onabort": {
                "name": "Notify on Abort",
                "description": "Enables notification for workflow abort event",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "notify.oncomplete": {
                "name": "Notify on Complete",
                "description": "Enables notification for workflow complete event",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "notify.oncontainercomplete": {
                "name": "Notify on Complete of Container Workflow",
                "description": "Enables notification for container workflow complete event",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "notify.useronly": {
                "name": "Notify assigned user only",
                "description": "If participant changed from group to user, send to user only.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "com.day.cq.workflow.impl.email.TaskEMailNotificationService",
        "name": "Task Email Notification Service",
        "description": "Listens to task events and triggers email notifications.",
        "bundleName": "com.day.cq.workflow.cq-workflow-impl",
        "attributes": {
            "notify.onupdate": {
                "name": "Notify on Update",
                "description": "Enables notifications on task updates",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "notify.oncomplete": {
                "name": "Notify on Complete",
                "description": "Enables notifications on task completion",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "com.day.crx.packaging.impl.PackageManagerServlet",
        "name": "Package Manager Validation Configuration",
        "description": "",
        "bundleName": "com.adobe.granite.crx-packagemgr",
        "attributes": {
            "packageSizeLimit": {
                "name": "Package Size Limit for Validation (in bytes)",
                "description": "Configuration to set maximum package size limit to be allowed for validating a package - in bytes",
                "type": "Long",
                "cardinality": "required",
                "default": 300000000
            },
            "packageInstallationTimeLimit": {
                "name": "Time Limit for Package Validation (in Seconds)",
                "description": "Configuration to set maximum time limit to be allowed for validating a package",
                "type": "Integer",
                "cardinality": "required",
                "default": 300
            }
        }
    },
    {
        "id": "com.day.crx.security.token.impl.impl.TokenAuthenticationHandler",
        "name": "Adobe Granite Token Authentication Handler",
        "description": "Implements the authorization steps based on the token authorization.",
        "bundleName": "com.day.crx.sling.crx-auth-token",
        "attributes": {
            "path": {
                "name": "Path",
                "description": "Repository path for which this authentication handler should be used by Sling. If this is empty, the authentication handler will be disabled.",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "token.required.attr": {
                "name": "Required Attributes",
                "description": "Which request properties to use as required attributes for authentication. Default (no value set) is \"Client IP Address\".",
                "type": "String",
                "cardinality": "required",
                "default": "ip",
                "options": [
                    {
                        "label": "Client IP Address and User-Agent",
                        "value": "ip_agent"
                    },
                    {
                        "label": "Client IP Address",
                        "value": "ip"
                    },
                    {
                        "label": "User-Agent",
                        "value": "agent"
                    },
                    {
                        "label": "None",
                        "value": "none"
                    }
                ]
            },
            "token.alternate.url": {
                "name": "Alternate Authentication Url",
                "description": "Alternate url for the user name and password submission by the form. This name is can be used in addition to the 'j_security_check' to avoid any conflict with Application Server's security.",
                "type": "String",
                "cardinality": "required"
            },
            "token.encapsulated": {
                "name": "Enable encapsulated token support",
                "description": "By enabling this feature the token verification is achieved offline (without repository access)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "skip.token.refresh": {
                "name": "Skip Login Token Refresh",
                "description": "Skip login token refresh for requests going to any of the URIs in this list",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/libs/granite/csrf/token.json",
                    "/mnt/overlay/granite/ui/content/shell/header/actions/pulse.data.json"
                ],
                "hint": "url"
            },
            "token.samesite.cookie.attr": {
                "name": "SameSite attribute for the login-token cookie",
                "description": "Value for the login-token's SameSite attribute. Default (no value set) is \"Lax\".",
                "type": "String",
                "cardinality": "required",
                "default": "Lax",
                "options": [
                    {
                        "label": "Strict",
                        "value": "Strict"
                    },
                    {
                        "label": "Lax",
                        "value": "Lax"
                    },
                    {
                        "label": "None",
                        "value": "None"
                    }
                ]
            },
            "useragents.samesite.exempt.attr": {
                "name": "User agents to be exempted from samesite attribute",
                "description": "Some clients are incompatible with the samesite attribute. Specify the user agent regexes to be exempted when samesite = \"None\". This setting has no effect when samesite is not None.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "com.day.crx.security.token.impl.TokenCleanupTask",
        "name": "Adobe Granite Token Authentication Handler: Cleanup Task",
        "description": "Task to regularly purge expired tokens from the repository",
        "bundleName": "com.day.crx.sling.crx-auth-token",
        "attributes": {
            "enable.token.cleanup.task": {
                "name": "Enable Token Cleanup Task",
                "description": "By enabling this feature the Token Cleanup Task is executed according to the configured schedule. By default the switch is off, in favour of the more effective Oak Token Cleanup",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "scheduler.expression": {
                "name": "Schedule",
                "description": "Cron expression scheudling this job. Default is hourly 17m23s after the hour. See http://www.docjar.com/docs/api/org/quartz/CronTrigger.html for a description of the format for this value.",
                "type": "String",
                "cardinality": "required",
                "default": "23 17 * * * ?"
            },
            "batch.size": {
                "name": "Batch Size",
                "description": "Number of nodes to be deleted at once",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "Event handler for changes to Media Portal Cloud Configuration",
        "name": "Media Portal Replication HTTP Client",
        "description": "HTTP Client used to communicate with Media Portal",
        "bundleName": "com.adobe.bp.bp-cloudservice",
        "attributes": {
            "connectionTimeout": {
                "name": "Connection timeout",
                "description": "Timeout in milliseconds until a connection is established. A timeout value of zero is interpreted as an infinite timeout. Default is 180000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 180000
            },
            "socketTimeout": {
                "name": "Socket timeout",
                "description": "Timeout in milliseconds for waiting for data or a maximum period of inactivity between two consecutive data packets. Default is 600000ms",
                "type": "Integer",
                "cardinality": "required",
                "default": 600000
            }
        }
    },
    {
        "id": "Guide Localization Service",
        "name": "Guide Localization Service",
        "description": "",
        "bundleName": "com.adobe.aemds.guide.aemds-guide-core-impl",
        "attributes": {
            "supportedLocales": {
                "name": "supportedLocales",
                "description": "",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "en",
                    "fr",
                    "de",
                    "ja",
                    "pt-br",
                    "zh-cn",
                    "zh-tw",
                    "ko-kr",
                    "es",
                    "it"
                ]
            },
            "Localizable Properties": {
                "name": "Localizable Properties",
                "description": "",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "custom"
                ]
            }
        }
    },
    {
        "id": "MessagingUserComponentFactory",
        "name": "MessagingUserComponentFactory",
        "description": "",
        "bundleName": "com.adobe.cq.social.cq-social-messaging-impl",
        "attributes": {
            "priority": {
                "name": "priority.name",
                "description": "priority.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "org.apache.felix.eventadmin.impl.EventAdmin",
        "name": "Apache Felix Event Admin Implementation",
        "description": "Configuration for the Apache Felix Event Admin Implementation. This configuration overwrites configuration defined in framework properties of the same names.",
        "bundleName": "org.apache.felix.eventadmin",
        "attributes": {
            "org.apache.felix.eventadmin.ThreadPoolSize": {
                "name": "Thread Pool Size",
                "description": "The size of the thread pool used for event delivery. The default value is 20. Increase in case of a large amount of events. A value of less then 2 triggers the default value. If the pool is exhausted, event delivery is blocked until a thread becomes available from the pool. Each event is delivered in a thread from the pool unless the ignore timeouts is configured for the receiving event handler.",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "org.apache.felix.eventadmin.AsyncToSyncThreadRatio": {
                "name": "Async/sync Thread Pool Ratio",
                "description": "The ratio of asynchronous to synchronous threads in the internal thread pool. Ratio must be positive and may be adjusted to represent the distribution of post to send operations.  Applications with higher number of post operations should have a higher ratio.",
                "type": "Double",
                "cardinality": "required",
                "default": 0.5
            },
            "org.apache.felix.eventadmin.Timeout": {
                "name": "Timeout",
                "description": "The black-listing timeout in milliseconds. The default value is 5000. Increase or decrease at own discretion. A value of less then 100 turns timeouts off. Any other value is the time in milliseconds granted to each event handler before it gets blacklisted",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "org.apache.felix.eventadmin.RequireTopic": {
                "name": "Require Topic",
                "description": "Are event handlers required to be registered with a topic? This is enabled by default. The specification says that event handlers must register with a list of topics they are interested in. Disabling this setting will enable that handlers without a topic are receiving all events (i.e., they are treated the same as with a topic=*).",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "org.apache.felix.eventadmin.IgnoreTimeout": {
                "name": "Ignore Timeouts",
                "description": "Configure event handlers to be called without a timeout. If a timeout is configured by default all event handlers are called using the timeout. For performance optimization it is possible to configure event handlers where the timeout handling is not used - this reduces the thread usage from the thread pools as the timout handling requires an additional thread to call the event handler. However, the application should work without this configuration property. It is a pure optimization! The value is a list of strings. If a string ends with a dot, all handlers in exactly this package are ignored. If the string ends with a star, all handlers in this package and all subpackages are ignored. If the string neither ends with a dot nor with a star, this is assumed to define an exact class name.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.eventadmin.IgnoreTopic": {
                "name": "Ignore Topics",
                "description": "For performance optimization it is possible to configure topics which are ignored by the event admin implementation. In this case, a event is not delivered to registered event handlers. The value is a list of strings (separated by comma). If a single value ends with a dot, all topics in exactly this package are ignored. If a single value ends with a star, all topics in this package and all sub packages are ignored. If a single value neither ends with a dot nor with a start, this is assumed to define an exact topic. A single star can be used to disable delivery completely.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.felix.http",
        "name": "Apache Felix Jetty Based Http Service",
        "description": "Configuration for the embedded Jetty Servlet Container.",
        "bundleName": "org.apache.felix.http.jetty",
        "attributes": {
            "org.apache.felix.http.host": {
                "name": "Host Name",
                "description": "IP Address or Host Name of the interface to which HTTP and HTTPS bind. The default is \"0.0.0.0\" indicating all interfaces.",
                "type": "String",
                "cardinality": "required",
                "default": "0.0.0.0"
            },
            "org.apache.felix.http.enable": {
                "name": "Enable HTTP",
                "description": "Whether or not HTTP is enabled. Defaults to true thus HTTP enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "org.osgi.service.http.port": {
                "name": "HTTP Port",
                "description": "Port to listen on for HTTP requests. Defaults to 8080.",
                "type": "Integer",
                "cardinality": "required",
                "default": 4502
            },
            "org.apache.felix.http.timeout": {
                "name": "Connection Timeout",
                "description": "Time limit for reaching an timeout specified in milliseconds. This property applies to both HTTP and HTTP connections. Defaults to 60 seconds.",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            },
            "org.apache.felix.https.enable": {
                "name": "Enable HTTPS",
                "description": "Whether or not HTTPS is enabled. Defaults to false thus HTTPS disabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.osgi.service.http.port.secure": {
                "name": "HTTPS Port",
                "description": "Port to listen on for HTTPS requests. Defaults to 443.",
                "type": "Integer",
                "cardinality": "required",
                "default": 443
            },
            "org.apache.felix.https.keystore": {
                "name": "Keystore",
                "description": "Absolute Path to the Keystore to use for HTTPS. Only used if HTTPS is enabled in which case this property is required.",
                "type": "String",
                "cardinality": "required"
            },
            "org.apache.felix.https.keystore.password": {
                "name": "Keystore Password",
                "description": "Password to access the Keystore. Only used if HTTPS is enabled.",
                "type": "Password",
                "cardinality": "required"
            },
            "org.apache.felix.https.keystore.key.password": {
                "name": "Key Password",
                "description": "Password to unlock the secret key from the Keystore. Only used if HTTPS is enabled.",
                "type": "Password",
                "cardinality": "required"
            },
            "org.apache.felix.https.truststore": {
                "name": "Truststore",
                "description": "Absolute Path to the Truststore to use for HTTPS. Only used if HTTPS is enabled.",
                "type": "String",
                "cardinality": "required"
            },
            "org.apache.felix.https.truststore.password": {
                "name": "Truststore Password",
                "description": "Password to access the Truststore. Only used if HTTPS is enabled.",
                "type": "Password",
                "cardinality": "required"
            },
            "org.apache.felix.https.clientcertificate": {
                "name": "Client Certificate",
                "description": "Requirement for the Client to provide a valid certificate. Defaults to none.",
                "type": "String",
                "cardinality": "required",
                "default": "none",
                "options": [
                    {
                        "label": "No Client Certificate",
                        "value": "none"
                    },
                    {
                        "label": "Client Certificate Wanted",
                        "value": "wants"
                    },
                    {
                        "label": "Client Certificate Needed",
                        "value": "needs"
                    }
                ]
            },
            "org.apache.felix.http.context_path": {
                "name": "Context Path",
                "description": "The Servlet Context Path to use for the Http Service. If this property is not configured it defaults to \"/\". This must be a valid path starting with a slash and not ending with a slash (unless it is the root context).",
                "type": "String",
                "cardinality": "required",
                "default": "/"
            },
            "org.apache.felix.http.mbeans": {
                "name": "Register MBeans",
                "description": "Whether or not to use register JMX MBeans from the servlet container (Jetty). If this is enabled Jetty Request and Connector statistics are also added. The default is to not enable JMX.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.apache.felix.jetty.statisticshandler.enable": {
                "name": "Enable Statistics",
                "description": "Whether or not to use enable Statistics in the servlet container (Jetty).",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.apache.felix.http.session.timeout": {
                "name": "Session Timeout",
                "description": "Default lifetime of an HTTP session specified in a whole number of minutes. If the timeout is 0 or less, sessions will by default never timeout. The default is 0.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "org.apache.felix.http.jetty.threadpool.max": {
                "name": "Thread Pool Max",
                "description": "Maximum number of jetty threads. Using the default -1 uses Jetty's default (200).",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "org.apache.felix.http.jetty.acceptors": {
                "name": "Acceptors",
                "description": "Number of acceptor threads to use, or -1 for a default value. Acceptors accept new TCP/IP connections. If 0, then the selector threads are used to accept connections.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "org.apache.felix.http.jetty.selectors": {
                "name": "Selectors",
                "description": "Number of selector threads, or <=0 for a default value. Selectors notice and schedule established connection that can make IO progress.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "org.apache.felix.http.jetty.headerBufferSize": {
                "name": "Header Buffer Size",
                "description": "Size of the buffer for request and response headers. Default is 16KB.",
                "type": "Integer",
                "cardinality": "required",
                "default": 16384
            },
            "org.apache.felix.http.jetty.requestBufferSize": {
                "name": "Request Buffer Size",
                "description": "Size of the buffer for requests not fitting the header buffer. Default is 8KB.",
                "type": "Integer",
                "cardinality": "required",
                "default": 8192
            },
            "org.apache.felix.http.jetty.responseBufferSize": {
                "name": "Response Buffer Size",
                "description": "Size of the buffer for responses. Default is 24KB.",
                "type": "Integer",
                "cardinality": "required",
                "default": 24576
            },
            "org.apache.felix.http.jetty.maxFormSize": {
                "name": "Maximum Form Size",
                "description": "Size of Body for submitted form content. Default is 200KB.",
                "type": "Integer",
                "cardinality": "required",
                "default": 204800
            },
            "org.apache.felix.http.path_exclusions": {
                "name": "Path Exclusions",
                "description": "Contains a list of context path prefixes. If a Web Application Bundle is started with a context path matching any of these prefixes, it will not be deployed in the servlet container.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/system"
                ]
            },
            "org.apache.felix.https.jetty.ciphersuites.excluded": {
                "name": "Excluded Cipher Suites",
                "description": "List of cipher suites that should be excluded. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.https.jetty.ciphersuites.included": {
                "name": "Included Cipher Suites",
                "description": "List of cipher suites that should be included. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.http.jetty.sendServerHeader": {
                "name": "Send Server Header",
                "description": "If enabled, the server header is sent.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.apache.felix.https.jetty.protocols.included": {
                "name": "Included Protocols",
                "description": "List of SSL protocols to include by default. Protocols may be any supported by the Java platform such as SSLv2Hello, SSLv3, TLSv1, TLSv1.1, or TLSv1.2. Any listed protocol not supported is silently ignored. Default is none assuming to use any protocol enabled and supported on the platform.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.https.jetty.protocols.excluded": {
                "name": "Excluded Protocols",
                "description": "List of SSL protocols to exclude. This property further restricts the enabled protocols by explicitly disabling. Any protocol listed in both this property and the Included protocols property is excluded. Default is none such as to accept all protocols enabled on platform or explicitly listed by the Included protocols property.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.proxy.load.balancer.connection.enable": {
                "name": "Enable Proxy/Load Balancer Connection",
                "description": "Whether or not the Proxy/Load Balancer Connection is enabled. Defaults to false thus disabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.apache.felix.https.jetty.renegotiateAllowed": {
                "name": "Renegotiation allowed",
                "description": "Whether TLS renegotiation is allowed (true by default)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.apache.felix.https.jetty.session.cookie.httpOnly": {
                "name": "Session Cookie httpOnly",
                "description": "Session Cookie httpOnly (true by default)",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "org.apache.felix.https.jetty.session.cookie.secure": {
                "name": "Session Cookie secure",
                "description": "Session Cookie secure (false by default)",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.eclipse.jetty.servlet.SessionIdPathParameterName": {
                "name": "Session Id path parameter",
                "description": "Defaults to jsessionid. If set to null or \"none\" no URL rewriting will be done.",
                "type": "String",
                "cardinality": "required",
                "default": "jsessionid"
            },
            "org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding": {
                "name": "Check remote session encoding",
                "description": "If true, Jetty will add JSESSIONID parameter even when encoding external urls with calls to encodeURL() (true by default)",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "org.eclipse.jetty.servlet.SessionCookie": {
                "name": "Session Cookie Name",
                "description": "Session Cookie Name",
                "type": "String",
                "cardinality": "required",
                "default": "JSESSIONID"
            },
            "org.eclipse.jetty.servlet.SessionDomain": {
                "name": "Session Domain",
                "description": "If this property is set, then it is used as the domain for session cookies. If it is not set, then no domain is specified for the session cookie. Default is none.",
                "type": "String",
                "cardinality": "required"
            },
            "org.eclipse.jetty.servlet.SessionPath": {
                "name": "Session Path",
                "description": "If this property is set, then it is used as the path for the session cookie. Default is context path.",
                "type": "String",
                "cardinality": "required"
            },
            "org.eclipse.jetty.servlet.MaxAge": {
                "name": "Session Max Age",
                "description": "Max age for the session cookie. Default is -1.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "org.eclipse.jetty.servlet.SessionScavengingInterval": {
                "name": "Session Scavenging Interval",
                "description": "Interval of session scavenging in seconds. Default is 600",
                "type": "Long",
                "cardinality": "required",
                "default": 600
            },
            "org.apache.felix.http.name": {
                "name": "HTTP Service Name",
                "description": "HTTP Service Name used in service filter to target specific HTTP instance. Default is null.",
                "type": "String",
                "cardinality": "required"
            },
            "org.apache.felix.jetty.gziphandler.enable": {
                "name": "Enable GzipHandler",
                "description": "Whether the server should use a server-wide gzip handler. Default is false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.apache.felix.jetty.gzip.minGzipSize": {
                "name": "Gzip Min Size",
                "description": "The minimum response size to trigger dynamic compression. Default is 32.",
                "type": "Integer",
                "cardinality": "required",
                "default": 32
            },
            "org.apache.felix.jetty.gzip.compressionLevel": {
                "name": "Gzip Compression Level",
                "description": "The compression level to use. Default is -1.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "org.apache.felix.jetty.gzip.inflateBufferSize": {
                "name": "Gzip Inflate Buffer Size",
                "description": "The size in bytes of the buffer to inflate compressed request, or <= 0 for no inflation. Default is -1.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "org.apache.felix.jetty.gzip.syncFlush": {
                "name": "Gzip Sync Flush",
                "description": "True if Deflater#SYNC_FLUSH should be used, else Deflater#NO_FLUSH will be used. Default is false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.apache.felix.jetty.gzip.excludedUserAgents": {
                "name": "Gzip Exclude User Agents",
                "description": "The regular expressions matching additional user agents to exclude. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.jetty.gzip.includedMethods": {
                "name": "Gzip Include Methods",
                "description": "The additional http methods to include in compression. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.jetty.gzip.excludedMethods": {
                "name": "Gzip Exclude Methods",
                "description": "The additional http methods to exclude in compression. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.jetty.gzip.includedPaths": {
                "name": "Gzip Included Paths",
                "description": "The additional path specs to include. Inclusion takes precedence over exclusion. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.jetty.gzip.excludedPaths": {
                "name": "Gzip Excluded Paths",
                "description": "The additional path specs to exclude. Inclusion takes precedence over exclusion. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.jetty.gzip.includedMimeTypes": {
                "name": "Gzip Included Mime Types",
                "description": "The included mime types. Inclusion takes precedence over exclusion. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.jetty.gzip.excludedMimeTypes": {
                "name": "Gzip Excluded Mime Types",
                "description": "The excluded mime types. Inclusion takes precedence over exclusion. Default is none.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "org.apache.felix.http.session.invalidate": {
                "name": "Invalidate Container Session",
                "description": "If this property is set, the container session is automatically validated.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "org.apache.felix.http.session.container.attribute": {
                "name": "Attributes added by server.",
                "description": "The attributes added by underlying session. Use this to invalidate session.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "org.eclipse.jetty.security.sessionCreatedSecure"
                ]
            },
            "org.apache.felix.http.session.uniqueid": {
                "name": "Unique Session Id",
                "description": "If this property is set, each http context gets a unique session id (derived from the container session).",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "org.apache.felix.jetty.stopTimeout": {
                "name": "Server stop timeout",
                "description": "If not -1, stop timeout for the server in milliseconds.",
                "type": "Long",
                "cardinality": "required",
                "default": -1
            },
            "org.apache.felix.http2.enable": {
                "name": "Enable Http/2",
                "description": "Whether to enable HTTP/2. Default is false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "org.apache.felix.jetty.http2.maxConcurrentStreams": {
                "name": "Http/2 Max Concurrent Streams",
                "description": "The max number of concurrent streams per connection. Default is 128.",
                "type": "Integer",
                "cardinality": "required",
                "default": 128
            },
            "org.apache.felix.jetty.http2.initialStreamRecvWindow": {
                "name": "Http/2 Initial Stream Recieve Window",
                "description": "The initial stream receive window (client to server). Default is 524288.",
                "type": "Integer",
                "cardinality": "required",
                "default": 524288
            },
            "org.apache.felix.jetty.http2.initialSessionRecvWindow": {
                "name": "Http/2 Initial Session Recieve Window",
                "description": "The initial session receive window (client to server). Default is 1048576.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1048576
            },
            "org.apache.felix.jetty.alpn.protocols": {
                "name": "ALPN Protocols",
                "description": "The ALPN protocols to consider. Default is h2, http/1.1.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "h2",
                    "http/1.1"
                ]
            },
            "org.apache.felix.jetty.alpn.defaultProtocol": {
                "name": "ALPN Default Protocol",
                "description": "The default protocol when negotiation fails. Default is http/1.1.",
                "type": "String",
                "cardinality": "required",
                "default": "http/1.1"
            }
        }
    },
    {
        "id": "org.apache.felix.http.sslfilter.SslFilter",
        "name": "Apache Felix Http Service SSL Filter",
        "description": "Configuration for the Http Service SSL Filter. Please consult the documentation of your proxy for the actual headers and values to use. ",
        "bundleName": "org.apache.felix.http.sslfilter",
        "attributes": {
            "ssl-forward.header": {
                "name": "SSL forward header",
                "description": "HTTP Request header name that indicates a request is a SSL request terminated at a proxy between the client and the originating server. The default value is 'X-Forwarded-SSL' as is customarily used in the wild. Other commonly used names are: 'X-Forwarded-Proto' (Amazon ELB), 'X-Forwarded-Protocol' (alternative), and 'Front-End-Https' (Microsoft IIS).",
                "type": "String",
                "cardinality": "required",
                "default": "X-Forwarded-SSL"
            },
            "ssl-forward.value": {
                "name": "SSL forward value",
                "description": "HTTP Request header value that indicates a request is a SSL request terminated at a proxy. The default value is 'on'. Another commonly used value is 'https'.",
                "type": "String",
                "cardinality": "required",
                "default": "on"
            },
            "ssl-forward-cert.header": {
                "name": "SSL client header",
                "description": "HTTP Request header name that contains the client certificate forwarded by a proxy. The default value is 'X-Forwarded-SSL-Certificate'. Another commonly used value is 'X-Forwarded-SSL-Client-Cert'.",
                "type": "String",
                "cardinality": "required",
                "default": "X-Forwarded-SSL-Certificate"
            },
            "rewrite.absolute.urls": {
                "name": "Rewrite Absolute URLs",
                "description": "If enabled, absolute URLs passed to either sendRedirect or by setting the location header are rewritten as well.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.felix.jaas.Configuration.factory",
        "name": "Apache Felix JAAS Configuration Factory",
        "description": "Captures JAAS configuration with options, control flag and classname",
        "bundleName": "org.apache.felix.jaas",
        "attributes": {
            "jaas.controlFlag": {
                "name": "Control Flag",
                "description": "The Flag value controls the overall behavior as authentication proceeds down the stack",
                "type": "String",
                "cardinality": "required",
                "default": "required",
                "options": [
                    {
                        "label": "Required",
                        "value": "required"
                    },
                    {
                        "label": "Requisite",
                        "value": "requisite"
                    },
                    {
                        "label": "Sufficient",
                        "value": "sufficient"
                    },
                    {
                        "label": "Optional",
                        "value": "optional"
                    }
                ]
            },
            "jaas.ranking": {
                "name": "Ranking",
                "description": "The relative ranking of this configuration.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "jaas.realmName": {
                "name": "Realm Name",
                "description": "Name of the application",
                "type": "String",
                "cardinality": "required"
            },
            "webconsole.configurationFactory.nameHint": {
                "name": "webconsole.configurationFactory.nameHint.name",
                "description": "webconsole.configurationFactory.nameHint.description",
                "type": "String",
                "cardinality": "required",
                "default": "{jaas.ranking} : {jaas.classname} ({jaas.controlFlag})"
            },
            "jaas.classname": {
                "name": "Class Name",
                "description": "Fully qualified name of the LoginModule class",
                "type": "String",
                "cardinality": "required"
            },
            "jaas.options": {
                "name": "Options",
                "description": "Properties in the form of key value pairs that are passed on to the LoginModule(name=value pairs)",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.felix.jaas.ConfigurationSpi",
        "name": "Apache Felix JAAS Configuration SPI",
        "description": "JAAS Configuration SPI implementation which provides configuration based on OSGi ConfigAdmin",
        "bundleName": "org.apache.felix.jaas",
        "attributes": {
            "jaas.defaultRealmName": {
                "name": "Default JAAS Realm",
                "description": "Default realm name to use if no realm is explicitly defined for LoginModule",
                "type": "String",
                "cardinality": "required"
            },
            "jaas.configProviderName": {
                "name": "JAAS Config Provider name",
                "description": "Name of the provider used to register the OSGi based configuration provider",
                "type": "String",
                "cardinality": "required",
                "default": "FelixJaasProvider"
            },
            "jaas.globalConfigPolicy": {
                "name": "Global Configuration Policy",
                "description": "Policy to manage global configuration. (1) Default: Global configuration is not modified. (2). Replace Global Configuration: Global configuration is replaced with OSGi based configuration (3). Proxy Global Configuration: Global configuration would be replaced with proxy configuration. The proxy would check with OSGi based configuration. If no config is found it would look in default global configuration",
                "type": "String",
                "cardinality": "required",
                "default": "default",
                "options": [
                    {
                        "label": "Default",
                        "value": "default"
                    },
                    {
                        "label": "Replace Global Configuration",
                        "value": "replace"
                    },
                    {
                        "label": "Proxy Global Configuration",
                        "value": "proxy"
                    }
                ]
            }
        }
    },
    {
        "id": "org.apache.felix.scr.ScrService",
        "name": "Apache Felix Declarative Service Implementation",
        "description": "Configuration for the Apache Felix Declarative Services Implementation. This configuration overwrites configuration defined in framework properties of the same names.",
        "bundleName": "org.apache.felix.scr",
        "attributes": {
            "ds.loglevel": {
                "name": "SCR Log Level",
                "description": "Allows limiting the amount of logging information sent to the OSGi LogService. Supported values are DEBUG, INFO, WARN, and ERROR. This property is not used if a R7 LogService implementation is available as the log level can be configured through that service. Default is ERROR.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2,
                "options": [
                    {
                        "label": "Debug",
                        "value": "4"
                    },
                    {
                        "label": "Information",
                        "value": "3"
                    },
                    {
                        "label": "Warnings",
                        "value": "2"
                    },
                    {
                        "label": "Error",
                        "value": "1"
                    }
                ]
            },
            "ds.factory.enabled": {
                "name": "Extended Factory Components",
                "description": "Whether or not to enable the support for creating Factory Component instances based on factory configuration. This is an Apache Felix SCR specific extension, explicitly not supported by the Declarative Services specification. Reliance on this feature prevent the component from being used with other Declarative Services implementations. The default value is false to disable this feature.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "ds.delayed.keepInstances": {
                "name": "Keep Component Instances",
                "description": "Whether or not to keep instances of delayed components once they are not referred to any more. The Declarative Services specifications suggests that instances of delayed components are disposed off if there is not used any longer. Setting this flag causes the components to not be disposed off and thus prevent them from being constantly recreated if often used. Examples of such components may be EventHandler services. The default is to dispose of unused components.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "ds.lock.timeout.milliseconds": {
                "name": "Lock timeout milliseconds",
                "description": "How long a lock is held before releasing due to suspected deadlock",
                "type": "Long",
                "cardinality": "required",
                "default": 5000
            },
            "ds.stop.timeout.milliseconds": {
                "name": "Stop timeout milliseconds",
                "description": "How long stopping a bundle is waited for before continuing due to suspected deadlock",
                "type": "Long",
                "cardinality": "required",
                "default": 60000
            },
            "ds.global.extender": {
                "name": "Global Extender",
                "description": "Whether to extend all bundles whether or not visible to this bundle.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.felix.systemready.impl.ComponentsCheck",
        "name": "DS Components System Ready Check",
        "description": "System ready check that checks a list of DS componentsand provides root cause analysis in case of errors",
        "bundleName": "org.apache.felix.systemready",
        "attributes": {
            "components.list": {
                "name": "Components list",
                "description": "The components that need to come up before this check reports GREEN",
                "type": "String",
                "cardinality": "unlimited"
            },
            "type": {
                "name": "Check type",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "ALIVE",
                "options": [
                    {
                        "label": "ALIVE",
                        "value": "ALIVE"
                    },
                    {
                        "label": "READY",
                        "value": "READY"
                    }
                ]
            }
        }
    },
    {
        "id": "org.apache.felix.systemready.impl.FrameworkStartCheck",
        "name": "Framework Start Ready Check",
        "description": "System ready that waits for the system bundle to be active",
        "bundleName": "org.apache.felix.systemready",
        "attributes": {
            "timeout": {
                "name": "Timeout (seconds)",
                "description": "Number of seconds after which this is considered a failure",
                "type": "Long",
                "cardinality": "required",
                "default": 1000
            },
            "target.start.level": {
                "name": "Target start level",
                "description": "The target start level at which the Framework is considered started. If zero or negative, it will default to the default bundle start level",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "target.start.level.prop.name": {
                "name": "Target start level OSGi property name",
                "description": "The name of the OSGi property which holds the \"Target start level\". It takes precedence over the target.start.level config. If the startlevel cannot be derived from the osgi property, this config attribute is ignored.",
                "type": "String",
                "cardinality": "required"
            },
            "type": {
                "name": "Check type",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "ALIVE",
                "options": [
                    {
                        "label": "ALIVE",
                        "value": "ALIVE"
                    },
                    {
                        "label": "READY",
                        "value": "READY"
                    }
                ]
            }
        }
    },
    {
        "id": "org.apache.felix.systemready.impl.ServicesCheck",
        "name": "Services Registered System Ready Check",
        "description": "System ready check that waits for a list of services to be registered",
        "bundleName": "org.apache.felix.systemready",
        "attributes": {
            "services.list": {
                "name": "Services list",
                "description": "The services that need to be registered for the check to pass",
                "type": "String",
                "cardinality": "unlimited"
            },
            "type": {
                "name": "Check type",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "ALIVE",
                "options": [
                    {
                        "label": "ALIVE",
                        "value": "ALIVE"
                    },
                    {
                        "label": "READY",
                        "value": "READY"
                    }
                ]
            }
        }
    },
    {
        "id": "org.apache.felix.systemready.impl.servlet.SystemAliveServlet",
        "name": "System Alive Servlet",
        "description": "Servlet exposing a http endpoint for retrieving the alive status",
        "bundleName": "org.apache.felix.systemready",
        "attributes": {
            "osgi.http.whiteboard.servlet.pattern": {
                "name": "Servlet Path",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "/systemalive"
            },
            "osgi.http.whiteboard.context.select": {
                "name": "Servlet Context select",
                "description": null,
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.felix.systemready.impl.servlet.SystemReadyServlet",
        "name": "System Ready Servlet",
        "description": "Servlet exposing a http endpoint for retrieving the ready status",
        "bundleName": "org.apache.felix.systemready",
        "attributes": {
            "osgi.http.whiteboard.servlet.pattern": {
                "name": "Servlet Path",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "/systemready"
            },
            "osgi.http.whiteboard.context.select": {
                "name": "Servlet Context select",
                "description": null,
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.felix.systemready.SystemReadyMonitor",
        "name": "System Ready Monitor",
        "description": "System ready monitor for System Ready Checks",
        "bundleName": "org.apache.felix.systemready",
        "attributes": {
            "poll.interval": {
                "name": "Poll interval",
                "description": "Number of milliseconds between subsequents updates of all the checks",
                "type": "Long",
                "cardinality": "required",
                "default": 5000
            }
        }
    },
    {
        "id": "org.apache.felix.webconsole.internal.servlet.OsgiManager",
        "name": "Apache Felix OSGi Management Console",
        "description": "Configuration of the Apache Felix OSGi Management Console.",
        "bundleName": "org.apache.felix.webconsole",
        "attributes": {
            "manager.root": {
                "name": "Root URI",
                "description": "The root path to the OSGi Management Console.",
                "type": "String",
                "cardinality": "required",
                "default": "/system/console"
            },
            "http.service.filter": {
                "name": "Http Service Selector",
                "description": "The Http Service Selector is an OSGi filter used to select the Http Service towhich the Web Console binds. The value of this property (if not empty) iscombined the object class selection term to get the actual service selectionfilter like (&(objectClass=org.osgi.service.http.HttpService)(selector)). Thisproperty must not have leading an trailing parentheses. For example, to bindto the service with service ID 15 set the selector to 'service.id=15' (withoutthe quotes). By default (if this property is not set or set to an emptystring) the Web Console binds with any Http Service available.",
                "type": "String",
                "cardinality": "required",
                "default": ""
            },
            "default.render": {
                "name": "Default Page",
                "description": "The name of the default configuration page when invoking the OSGi Management console.",
                "type": "String",
                "cardinality": "required",
                "default": "bundles"
            },
            "realm": {
                "name": "Realm",
                "description": "The name of the HTTP Authentication Realm.",
                "type": "String",
                "cardinality": "required",
                "default": "OSGi Management Console"
            },
            "username": {
                "name": "User Name",
                "description": "The name of the user allowed to access the OSGi Management Console. To disable authentication clear this value. This property is ignored if a WebConsoleSecurityProvider is used for authentication.",
                "type": "String",
                "cardinality": "required",
                "default": "admin"
            },
            "category": {
                "name": "Default Category",
                "description": "The default category (menu label) to be used for plugins not registered with a felix.webconsole.category service property or overwriting the AbstractWebConsole.getCategory() method. The default value is \"Main\".",
                "type": "String",
                "cardinality": "required",
                "default": "Main"
            },
            "locale": {
                "name": "Locale",
                "description": "If set, this locale forces the localization to use this locale instead of the one requested by the web browser",
                "type": "String",
                "cardinality": "required",
                "default": ""
            },
            "password": {
                "name": "Password",
                "description": "The password for the user allowed to access the OSGi Management Console. This property is ignored if a WebConsoleSecurityProvider is used for authentication.",
                "type": "Password",
                "cardinality": "required"
            },
            "secret.heuristic.enabled": {
                "name": "Secret Heuristics",
                "description": "If enabled, password properties are detected based on their name in addition to their metatype information.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "loglevel": {
                "name": "Log Level",
                "description": "Logging Level",
                "type": "Integer",
                "cardinality": "required",
                "default": 2,
                "options": [
                    {
                        "label": "DEBUG",
                        "value": "4"
                    },
                    {
                        "label": "INFO",
                        "value": "3"
                    },
                    {
                        "label": "WARN",
                        "value": "2"
                    },
                    {
                        "label": "ERROR",
                        "value": "1"
                    }
                ]
            },
            "plugins": {
                "name": "Plugins",
                "description": "Select active plugins",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "org.apache.felix.webconsole.internal.compendium.LogServlet",
                    "org.apache.felix.webconsole.internal.configuration.ConfigManager",
                    "org.apache.felix.webconsole.internal.core.BundlesServlet",
                    "org.apache.felix.webconsole.internal.core.ServicesServlet",
                    "org.apache.felix.webconsole.internal.misc.LicenseServlet",
                    "org.apache.felix.webconsole.internal.system.VMStatPlugin"
                ],
                "options": [
                    {
                        "label": "Log Service",
                        "value": "org.apache.felix.webconsole.internal.compendium.LogServlet"
                    },
                    {
                        "label": "Configuration",
                        "value": "org.apache.felix.webconsole.internal.configuration.ConfigManager"
                    },
                    {
                        "label": "Bundles",
                        "value": "org.apache.felix.webconsole.internal.core.BundlesServlet"
                    },
                    {
                        "label": "Services",
                        "value": "org.apache.felix.webconsole.internal.core.ServicesServlet"
                    },
                    {
                        "label": "Licenses",
                        "value": "org.apache.felix.webconsole.internal.misc.LicenseServlet"
                    },
                    {
                        "label": "System Information",
                        "value": "org.apache.felix.webconsole.internal.system.VMStatPlugin"
                    }
                ]
            }
        }
    },
    {
        "id": "org.apache.felix.webconsole.plugins.event.internal.PluginServlet",
        "name": "Apache Felix Web Console Event Plugin",
        "description": "This is a plugin for the Apache Felix Web Console displaying all events occuring in the system.",
        "bundleName": "org.apache.felix.webconsole.plugins.event",
        "attributes": {
            "max.size": {
                "name": "Maximum Events",
                "description": "The maximum number of events displayed in the plugin.",
                "type": "Integer",
                "cardinality": "required",
                "default": 250
            }
        }
    },
    {
        "id": "org.apache.felix.webconsole.plugins.memoryusage.internal.MemoryUsageConfigurator",
        "name": "Apache Felix Web Console Memory Usage Plugin",
        "description": "Configuration of the Apache Felix Web Console Memory Usage Plugin.",
        "bundleName": "org.apache.felix.webconsole.plugins.memoryusage",
        "attributes": {
            "felix.memoryusage.dump.threshold": {
                "name": "Dump Threshold",
                "description": "Threshold at which to automatically create a memory dump as a percentage in the range 50 to 99 or zero to disable automatic dump creation.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "felix.memoryusage.dump.interval": {
                "name": "Dump Interval",
                "description": "The minimum interval between two consecutive memory dumps being taken in seconds. This property allows the limitation of the number of memory dumps being taken. The default value for the interval is 6 hours. This means that a memory threshold event is ignored unless the last memory dump has been taken at least 6 hours earlier. This property allows limiting the number of memory dumps in case memory consumption is oscillating around the threshold point. The property must be an integer value or be parseable to an integer value. This should be a positive value or zero to force each memory threshold event to cause a memory dump (discouraged).",
                "type": "Integer",
                "cardinality": "required",
                "default": 21600000
            },
            "felix.memoryusage.dump.location": {
                "name": "Dumpe Location",
                "description": "The filesystem location where heap dumps are stored. If this is null or empty (the default) the dumps are stored in C:\\Users\\roger.lee\\Documents\\Projects\\aem-test\\author\\crx-quickstart\\launchpad\\felix\\bundle59\\data\\dumps",
                "type": "String",
                "cardinality": "required",
                "default": ""
            }
        }
    },
    {
        "id": "org.apache.http.proxyconfigurator",
        "name": "Apache HTTP Components Proxy Configuration",
        "description": "Proxy configuration for central and transparent proxying of http client connections.",
        "bundleName": "org.apache.httpcomponents.httpclient",
        "attributes": {
            "proxy.enabled": {
                "name": "Enable HTTP Proxy",
                "description": "Whether to enable or disable this particular proxy configuration. The default value is false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "proxy.host": {
                "name": "HTTP Proxy Host",
                "description": "Host name (or IP Address) of the HTTP Proxy. This property is ignored if this proxy configuration is disabled. This property does not have a default value. Enabling this proxy but not setting the HTTP Proxy Host effectively disables this configuration.",
                "type": "String",
                "cardinality": "required"
            },
            "proxy.port": {
                "name": "HTTP Proxy Port",
                "description": "TCP port of the HTTP Proxy. This property is ignored if this proxy configuration is disabled. This property does not have a default value. Enabling this proxy but not setting the HTTP Proxy Port effectively disables this configuration.",
                "type": "Integer",
                "cardinality": "required",
                "default": 8080
            },
            "proxy.user": {
                "name": "HTTP Proxy User",
                "description": "The name of the user to authenticate as with the HTTP Proxy Host. If this field is empty, the proxy is considered to not be authenticated. The default is empty. This property is ignored if proxying is disabled or the proxy host is not properly configured.",
                "type": "String",
                "cardinality": "required"
            },
            "proxy.password": {
                "name": "HTTP Proxy Password",
                "description": "The password of the HTTP Proxy user to authenticate with. The default is empty. This property is ignored if proxying is disabled or the proxy host is not properly configured.",
                "type": "Password",
                "cardinality": "required"
            },
            "proxy.exceptions": {
                "name": "No Proxy For",
                "description": "Lists domain names, host names, IP Addresses or or network addresses for which this proxy configuration should not be used. A domain name indicating all hosts of a domain is indicated by a leading dot, e.g. \".day.com\". A network address is indicated with subnet mask notation indicating the number of bits make up the network address, e.g 192.168.1.0/24 means the class C network \"192.168.1\". Note that for proxy selection, the host name of URL is not resolved but directly compared to the list of exceptions. For this reason you might want to indicate both the network address and the domain for targets which should not be passed through the proxy. This property has no effect if this proxy configuration is disabled. The default value is [ localhost, 127.0.0.1 ].",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "localhost",
                    "127.0.0.1"
                ]
            },
            "webconsole.configurationFactory.nameHint": {
                "name": null,
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "{proxy.host}:{proxy.port} (enabled = {proxy.enabled})"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.blob.datastore.DataStoreTextProviderService",
        "name": "Apache Jackrabbit Oak DataStore PreExtractedTextProvider",
        "description": "Configures a PreExtractedTextProvider based on extracted text stored on FileSystem",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "dir": {
                "name": "Path",
                "description": "Local file system path where extracted text is stored in files.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreService",
        "name": "Apache Jackrabbit Oak Document NodeStore Service",
        "description": "NodeStore implementation based on Document model. For configuration option refer to http://jackrabbit.apache.org/oak/docs/osgi_config.html#DocumentNodeStore. Note that for system stability purpose it is advisable to not change these settings at runtime. Instead the config change should be done via file system based config file and this view should ONLY be used to determine which options are supported",
        "bundleName": "org.apache.jackrabbit.oak-store-document",
        "attributes": {
            "mongouri": {
                "name": "Mongo URI",
                "description": "Mongo connection URI used to connect to Mongo. Refer to http://docs.mongodb.org/manual/reference/connection-string/ for details. Note that this value can be overridden via framework property 'oak.mongo.uri'",
                "type": "String",
                "cardinality": "required",
                "default": "mongodb://localhost:27017/oak"
            },
            "db": {
                "name": "Mongo DB name",
                "description": "Name of the database in Mongo. Note that this value can be overridden via framework property 'oak.mongo.db'",
                "type": "String",
                "cardinality": "required",
                "default": "oak"
            },
            "socketKeepAlive": {
                "name": "MongoDB socket keep-alive option",
                "description": "Whether socket keep-alive should be enabled for connections to MongoDB. Note that this value can be overridden via framework property 'oak.mongo.socketKeepAlive'",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "mongoLeaseSocketTimeout": {
                "name": "MongoDB socket timeout for lease update operations",
                "description": "Socket timeout for lease update operations in milliseconds. Note that this value can be overridden via framework property 'oak.mongo.leaseSocketTimeout'",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "cache": {
                "name": "Cache Size (in MB)",
                "description": "Cache size in MB. This is distributed among various caches used in DocumentNodeStore",
                "type": "Integer",
                "cardinality": "required",
                "default": 256
            },
            "nodeCachePercentage": {
                "name": "NodeState Cache",
                "description": "Percentage of cache to be allocated towards Node cache",
                "type": "Integer",
                "cardinality": "required",
                "default": 35
            },
            "prevDocCachePercentage": {
                "name": "PreviousDocument Cache",
                "description": "Percentage of cache to be allocated towards Previous Document cache",
                "type": "Integer",
                "cardinality": "required",
                "default": 4
            },
            "childrenCachePercentage": {
                "name": "NodeState Children Cache",
                "description": "Percentage of cache to be allocated towards Children cache",
                "type": "Integer",
                "cardinality": "required",
                "default": 15
            },
            "diffCachePercentage": {
                "name": "Diff Cache",
                "description": "Percentage of cache to be allocated towards Diff cache",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            },
            "cacheSegmentCount": {
                "name": "LIRS Cache Segment Count",
                "description": "The number of segments in the LIRS cache (default 16, a higher count means higher concurrency but slightly lower cache hit rate)",
                "type": "Integer",
                "cardinality": "required",
                "default": 16
            },
            "cacheStackMoveDistance": {
                "name": "LIRS Cache Stack Move Distance",
                "description": "The delay to move entries to the head of the queue in the LIRS cache (default 16, a higher value means higher concurrency but slightly lower cache hit rate)",
                "type": "Integer",
                "cardinality": "required",
                "default": 16
            },
            "blobCacheSize": {
                "name": "Blob Cache Size (in MB)",
                "description": "Cache size to store blobs in memory. Used only with default BlobStore (as per DocumentStore type)",
                "type": "Integer",
                "cardinality": "required",
                "default": 16
            },
            "persistentCache": {
                "name": "Persistent Cache Config",
                "description": "Configuration for persistent cache. Refer to http://jackrabbit.apache.org/oak/docs/nodestore/persistent-cache.html for various options",
                "type": "String",
                "cardinality": "required",
                "default": "cache"
            },
            "journalCache": {
                "name": "Journal Cache Config",
                "description": "Configuration for journal cache. Refer to http://jackrabbit.apache.org/oak/docs/nodestore/persistent-cache.html for various options",
                "type": "String",
                "cardinality": "required",
                "default": "diff-cache"
            },
            "customBlobStore": {
                "name": "Custom BlobStore",
                "description": "Boolean value indicating that a custom BlobStore is to be used. By default, for MongoDB, MongoBlobStore is used; for RDB, RDBBlobStore is used.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "journalGCInterval": {
                "name": "Journal Garbage Collection Interval (millis)",
                "description": "Long value indicating interval (in milliseconds) with which the journal (for external changes) is cleaned up. Default is 300000",
                "type": "Long",
                "cardinality": "required",
                "default": 300000
            },
            "journalGCMaxAge": {
                "name": "Maximum Age of Journal Entries (millis)",
                "description": "Long value indicating max age (in milliseconds) that journal (for external changes) entries are kept (older ones are candidates for gc). Default is 86400000",
                "type": "Long",
                "cardinality": "required",
                "default": 86400000
            },
            "prefetchExternalChanges": {
                "name": "Pre-fetch external changes",
                "description": "Boolean value indicating if external changes should be pre-fetched in a background thread.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "role": {
                "name": "NodeStoreProvider role",
                "description": "Property indicating that this component will not register as a NodeStore but as a NodeStoreProvider with given role",
                "type": "String",
                "cardinality": "required"
            },
            "versionGcMaxAgeInSecs": {
                "name": "Version GC Max Age (in secs)",
                "description": "Version Garbage Collector (GC) logic will only consider those deleted for GC which are not accessed recently (currentTime - lastModifiedTime > versionGcMaxAgeInSecs). For example as per default only those document which have been *marked* deleted 24 hrs ago will be considered for GC. This also applies how older revision of live document are GC.",
                "type": "Long",
                "cardinality": "required",
                "default": 86400
            },
            "versionGCExpression": {
                "name": "Version GC scheduler expression",
                "description": "A cron expression that defines when the Version GC is scheduled. If this configuration entry is left empty, the default behaviour is to schedule a run every five seconds (also known as Continuous Revision Garbage Collection). Otherwise, the schedule can be configured with a cron expression. E.g. the following expression triggers a GC run every night at 2 AM: '0 0 2 * * ?'.",
                "type": "String",
                "cardinality": "required"
            },
            "versionGCTimeLimitInSecs": {
                "name": "Time limit for a Version GC run (in sec)",
                "description": "A Version GC run is canceled after this number of seconds. The default value is 10800 seconds.",
                "type": "Long",
                "cardinality": "required",
                "default": 10800
            },
            "blobGcMaxAgeInSecs": {
                "name": "Blob GC Max Age (in secs)",
                "description": "Blob Garbage Collector (GC) logic will only consider those blobs for GC which are not accessed recently (currentTime - lastModifiedTime > blobGcMaxAgeInSecs). For example as per default only those blobs which have been created 24 hrs ago will be considered for GC",
                "type": "Long",
                "cardinality": "required",
                "default": 86400
            },
            "blobTrackSnapshotIntervalInSecs": {
                "name": "Blob tracking snapshot interval (in secs)",
                "description": "This is the default interval in which the snapshots of locally tracked blob ids willbe taken and synchronized with the blob store. This should be configured to be less than the frequency of blob GC so that deletions during blob GC can be accounted for in the next GC execution.",
                "type": "Long",
                "cardinality": "required",
                "default": 43200
            },
            "repository.home": {
                "name": "Root directory",
                "description": "Root directory for local tracking of blob ids. This service will first lookup the 'repository.home' framework property and then a component context property with the same name. If none of them is defined, a sub directory 'repository' relative to the current working directory is used.",
                "type": "String",
                "cardinality": "required"
            },
            "maxReplicationLagInSecs": {
                "name": "Max Replication Lag (in secs)",
                "description": "Value in seconds. Determines the duration beyond which it can be safely assumed that the state on the secondaries is consistent with the primary, and it is safe to read from them",
                "type": "Long",
                "cardinality": "required",
                "default": 21600
            },
            "documentStoreType": {
                "name": "DocumentStore Type",
                "description": "Type of DocumentStore to use for persistence. Defaults to MONGO",
                "type": "String",
                "cardinality": "required",
                "default": "MONGO",
                "options": [
                    {
                        "label": "MONGO",
                        "value": "MONGO"
                    },
                    {
                        "label": "RDB",
                        "value": "RDB"
                    }
                ]
            },
            "bundlingDisabled": {
                "name": "Bundling Disabled",
                "description": "Boolean value indicating that Node bundling is disabled",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "updateLimit": {
                "name": "DocumentNodeStore update.limit",
                "description": "Number of content updates that need to happen before the updates are automatically purged to the private branch.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100000
            },
            "persistentCacheIncludes": {
                "name": "Persistent Cache Includes",
                "description": "Paths which should be cached in persistent cache",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/"
                ]
            },
            "leaseCheckMode": {
                "name": "Lease check mode",
                "description": "The lease check mode. 'STRICT' is the default and will stop the DocumentNodeStore as soon as the lease expires. 'LENIENT' will give the background lease update a chance to renew the lease even when the lease expired. This mode is only recommended for development, e.g. when debugging an application and the lease may expire when the JVM is stopped at a breakpoint.",
                "type": "String",
                "cardinality": "required",
                "default": "STRICT",
                "options": [
                    {
                        "label": "STRICT",
                        "value": "STRICT"
                    },
                    {
                        "label": "LENIENT",
                        "value": "LENIENT"
                    }
                ]
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.document.secondary.SecondaryStoreCacheService",
        "name": "Apache Jackrabbit Oak DocumentNodeStateCache Provider",
        "description": "Configures a DocumentNodeStateCache based on a secondary NodeStore",
        "bundleName": "org.apache.jackrabbit.oak-store-document",
        "attributes": {
            "includedPaths": {
                "name": "Included Paths",
                "description": "List of paths which are to be included in the secondary store",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/"
                ]
            },
            "enableAsyncObserver": {
                "name": "Async Observation",
                "description": "Enable async observation processing",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "observerQueueSize": {
                "name": "Observer queue size",
                "description": "Observer queue size. Used if 'enableAsyncObserver' is set to true",
                "type": "Integer",
                "cardinality": "required",
                "default": 10000
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexerService",
        "name": "Apache Jackrabbit Oak Async Indexer Service",
        "description": "Configures the async indexer services which performs periodic indexing of repository content",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "asyncConfigs": {
                "name": "Async Indexer Configs",
                "description": "Async indexer configs in the form of <name>:<interval in secs> e.g. \"async:5\"",
                "type": "String",
                "cardinality": 1024,
                "default": [
                    "async:5"
                ]
            },
            "leaseTimeOutMinutes": {
                "name": "Lease time out",
                "description": "Lease timeout in minutes. AsyncIndexer would wait for this timeout period before breaking async indexer lease",
                "type": "Integer",
                "cardinality": "required",
                "default": 15
            },
            "failingIndexTimeoutSeconds": {
                "name": "Failing Index Timeout (s)",
                "description": "Time interval in seconds after which a failing index is considered as corrupted and ignored from further indexing untill reindex. To disable this set it to 0",
                "type": "Long",
                "cardinality": "required",
                "default": 1800
            },
            "errorWarnIntervalSeconds": {
                "name": "Error warn interval (s)",
                "description": "Time interval in seconds after which a warning log would be logged for skipped indexes. This is done to avoid flooding the log in case of corrupted index.",
                "type": "Long",
                "cardinality": "required",
                "default": 900
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService",
        "name": "Apache Jackrabbit Oak LuceneIndexProvider",
        "description": "Description for org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService",
        "bundleName": "org.apache.jackrabbit.oak-lucene",
        "attributes": {
            "disabled": {
                "name": "Disable this component",
                "description": "If true, this component is disabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "debug": {
                "name": "Enable Debug Logging",
                "description": "Enables debug logging in Lucene. After enabling this actual logging can be controlled via changing log level for category 'oak.lucene' to debug",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "localIndexDir": {
                "name": "Local index storage path",
                "description": "Local file system path where Lucene indexes would be copied when CopyOnRead is enabled. If not specified then indexes would be stored under 'index' dir under Repository Home",
                "type": "String",
                "cardinality": "required"
            },
            "enableOpenIndexAsync": {
                "name": "Open index asynchronously",
                "description": "Enable opening of indexes in asynchronous mode",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "threadPoolSize": {
                "name": "Thread pool size",
                "description": "Thread pool size used to perform various asynchronous task in Oak Lucene",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "prefetchIndexFiles": {
                "name": "Prefetch Index Files",
                "description": "Prefetch the index files when CopyOnRead is enabled. When enabled all new Lucene index files would be copied locally before the index is made available to QueryEngine",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "extractedTextCacheSizeInMB": {
                "name": "Extracted text cache size (MB)",
                "description": "Cache size in MB for caching extracted text for some time. When set to 0 then cache would be disabled",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "extractedTextCacheExpiryInSecs": {
                "name": "Extracted text cache expiry (secs)",
                "description": "Time in seconds for which the extracted text would be cached in memory",
                "type": "Integer",
                "cardinality": "required",
                "default": 300
            },
            "alwaysUsePreExtractedCache": {
                "name": "Always use pre-extracted text cache",
                "description": "By default pre extracted text cache would only be used for reindex case. If this setting is enabled then it would also be used in normal incremental indexing",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "booleanClauseLimit": {
                "name": "Boolean Clause Limit",
                "description": "Limit for number of boolean clauses generated for handling of OR query",
                "type": "Integer",
                "cardinality": "required",
                "default": 1024
            },
            "enableHybridIndexing": {
                "name": "Hybrid Indexing",
                "description": "When enabled Lucene NRT Indexing mode would be enabled",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "hybridQueueSize": {
                "name": "Queue size",
                "description": "Size of in memory queue used for storing Lucene Documents which need to be added to local index",
                "type": "Integer",
                "cardinality": "required",
                "default": 10000
            },
            "disableStoredIndexDefinition": {
                "name": "Disable index definition storage",
                "description": "By default index definitions would be stored at time of reindexing to ensure that future modifications to it are not effective untill index is reindex. Set this to true would disable this feature",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "deletedBlobsCollectionEnabled": {
                "name": "Enable actively removing deleted index blobs from blob store",
                "description": "Index blobs are explicitly unique and don't require mark-sweep type collection.This is used to enable the feature. Cleanup implies purging index blobs marked as deleted earlier during some indexing cycle.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "luceneIndexStatsUpdateInterval": {
                "name": "Lucene index stats update interval (seconds)",
                "description": "Delay in seconds after which Lucene stats are updated in async index update cycle.",
                "type": "Integer",
                "cardinality": "required",
                "default": 300
            },
            "propIndexCleanerIntervalInSecs": {
                "name": "Property Index Cleaner Interval (seconds)",
                "description": "Cleaner interval time (in seconds) for synchronous property indexes configured as part of lucene indexes",
                "type": "Integer",
                "cardinality": "required",
                "default": 600
            },
            "enableSingleBlobIndexFiles": {
                "name": "With CoW enabled, should index files by written as single blobs",
                "description": "Index files can be written as single blobs as chunked into smaller blobs. Enable this to write single blob per index file. This would reduce number of blobs in the data store.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "propIndexFSStatsIntervalInSecs": {
                "name": "Lucene Index File System Stats Interval (seconds)",
                "description": "Interval (in seconds) for calculation of File System metrics for Lucene Index such as Local Index Directory Size",
                "type": "Long",
                "cardinality": "required",
                "default": 300
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService",
        "name": "Apache Jackrabbit Oak Solr persisted configuration observer",
        "description": "Description for org.apache.jackrabbit.oak.plugins.index.solr.osgi.NodeStateSolrServersObserverService",
        "bundleName": "org.apache.jackrabbit.oak-solr-osgi",
        "attributes": {
            "enabled": {
                "name": "enabled",
                "description": "enable persisted configuration observer",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService",
        "name": "Apache Jackrabbit Oak Solr indexing / search configuration",
        "description": "Description for org.apache.jackrabbit.oak.plugins.index.solr.osgi.OakSolrConfigurationProviderService",
        "bundleName": "org.apache.jackrabbit.oak-solr-osgi",
        "attributes": {
            "path.desc.field": {
                "name": "field for descendants search",
                "description": "Description for path.desc.field",
                "type": "String",
                "cardinality": "required",
                "default": "path_des"
            },
            "path.child.field": {
                "name": "field for children search",
                "description": "Description for path.child.field",
                "type": "String",
                "cardinality": "required",
                "default": "path_child"
            },
            "path.parent.field": {
                "name": "field for parent search",
                "description": "Description for path.parent.field",
                "type": "String",
                "cardinality": "required",
                "default": "path_anc"
            },
            "path.exact.field": {
                "name": "field for path search",
                "description": "Description for path.exact.field",
                "type": "String",
                "cardinality": "required",
                "default": "path_exact"
            },
            "catch.all.field": {
                "name": "catch all field",
                "description": "Description for catch.all.field",
                "type": "String",
                "cardinality": "required",
                "default": "catch_all"
            },
            "collapsed.path.field": {
                "name": "field for collapsing jcr:content paths",
                "description": "Description for collapsed.path.field",
                "type": "String",
                "cardinality": "required",
                "default": "path_collapsed"
            },
            "path.depth.field": {
                "name": "field for path depth",
                "description": "Description for path.depth.field",
                "type": "String",
                "cardinality": "required",
                "default": "path_depth"
            },
            "commit.policy": {
                "name": "Property commit.policy",
                "description": "Description for commit.policy",
                "type": "String",
                "cardinality": "required",
                "default": "SOFT",
                "options": [
                    {
                        "label": "Hard commit",
                        "value": "HARD"
                    },
                    {
                        "label": "Soft commit",
                        "value": "SOFT"
                    },
                    {
                        "label": "Auto commit",
                        "value": "AUTO"
                    }
                ]
            },
            "rows": {
                "name": "rows",
                "description": "Description for rows",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "path.restrictions": {
                "name": "path restrictions",
                "description": "Description for path.restrictions",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "property.restrictions": {
                "name": "property restrictions",
                "description": "Description for property.restrictions",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "primarytypes.restrictions": {
                "name": "primary types restrictions",
                "description": "Description for primarytypes.restrictions",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "ignored.properties": {
                "name": "ignored properties",
                "description": "Description for ignored.properties",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "rep:members",
                    "rep:authorizableId",
                    "jcr:uuid",
                    "rep:principalName",
                    "rep:password"
                ]
            },
            "used.properties": {
                "name": "used properties",
                "description": "Description for used.properties",
                "type": "String",
                "cardinality": "unlimited"
            },
            "type.mappings": {
                "name": "mappings from Oak Types to Solr fields",
                "description": "each item should be in the form TypeString=FieldName (e.g. STRING=text_general)",
                "type": "String",
                "cardinality": 13
            },
            "property.mappings": {
                "name": "mappings from JCR property names to Solr fields",
                "description": "each item should be in the form PropertyName=FieldName (e.g. jcr:title=text_en)",
                "type": "String",
                "cardinality": "unlimited"
            },
            "collapse.jcrcontent.nodes": {
                "name": "collapse jcr:content nodes",
                "description": "Description for collapse.jcrcontent.nodes",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "collapse.jcrcontent.parents": {
                "name": "collapse jcr:content parents",
                "description": "Description for collapse.jcrcontent.parents",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider",
        "name": "Apache Jackrabbit Oak Solr remote server configuration",
        "description": "Description for org.apache.jackrabbit.oak.plugins.index.solr.osgi.RemoteSolrServerConfigurationProvider",
        "bundleName": "org.apache.jackrabbit.oak-solr-osgi",
        "attributes": {
            "solr.http.url": {
                "name": "Solr HTTP URL",
                "description": "Description for solr.http.url",
                "type": "String",
                "cardinality": "required",
                "default": "http://127.0.0.1:8983/solr/oak"
            },
            "solr.zk.host": {
                "name": "ZooKeeper host",
                "description": "Description for solr.zk.host",
                "type": "String",
                "cardinality": "required",
                "default": "127.0.0.1:9983"
            },
            "solr.collection": {
                "name": "Solr collection",
                "description": "Description for solr.collection",
                "type": "String",
                "cardinality": "required",
                "default": "oak"
            },
            "solr.socket.timeout": {
                "name": "Socket timeout (ms)",
                "description": "Description for solr.socket.timeout",
                "type": "Integer",
                "cardinality": "required",
                "default": 3000
            },
            "solr.connection.timeout": {
                "name": "Connection timeout (ms)",
                "description": "Description for solr.connection.timeout",
                "type": "Integer",
                "cardinality": "required",
                "default": 3000
            },
            "solr.shards.no": {
                "name": "No. of collection shards",
                "description": "Description for solr.shards.no",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "solr.replication.factor": {
                "name": "Replication factor",
                "description": "Description for solr.replication.factor",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "solr.conf.dir": {
                "name": "Solr configuration directory",
                "description": "Description for solr.conf.dir",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService",
        "name": "Apache Jackrabbit Oak Solr Query index provider configuration",
        "description": "Description for org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrQueryIndexProviderService",
        "bundleName": "org.apache.jackrabbit.oak-solr-osgi",
        "attributes": {
            "query.aggregation": {
                "name": "query time aggregation",
                "description": "enable query time aggregation for Solr index",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService",
        "name": "Apache Jackrabbit Oak Solr server provider",
        "description": "Description for org.apache.jackrabbit.oak.plugins.index.solr.osgi.SolrServerProviderService",
        "bundleName": "org.apache.jackrabbit.oak-solr-osgi",
        "attributes": {
            "server.type": {
                "name": "Property server.type",
                "description": "Description for server.type",
                "type": "String",
                "cardinality": "required",
                "default": "none",
                "options": [
                    {
                        "label": "None",
                        "value": "none"
                    },
                    {
                        "label": "Embedded Solr",
                        "value": "embedded"
                    },
                    {
                        "label": "Remote Solr",
                        "value": "remote"
                    }
                ]
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.metric.StatisticsProviderFactory",
        "name": "Apache Jackrabbit Oak StatisticsProviderFactory",
        "description": "Creates a statistics providers used by Oak. By default if checks if Metrics (See http://metrics.dropwizard.io) library is present then that is used. Otherwise it fallbacks to default",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "providerType": {
                "name": "Provider type",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "options": [
                    {
                        "label": "DEFAULT",
                        "value": "DEFAULT"
                    },
                    {
                        "label": "METRIC",
                        "value": "METRIC"
                    },
                    {
                        "label": "NONE",
                        "value": "NONE"
                    }
                ]
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.plugins.observation.ChangeCollectorProvider",
        "name": "Apache Jackrabbit Oak Change Collector Service",
        "description": "It hooks into the commit and collects a ChangeSet of changed items of a commit which is then used to speed up observation processing",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "maxItems": {
                "name": "Maximum Number of Collected Items (per type)",
                "description": "Integer value indicating maximum number of individual items of changes - such as property, nodeType, node name, path - to be collected. If there are more changes, the collection is considered failed and marked as such. Default is 50",
                "type": "Integer",
                "cardinality": "required",
                "default": 50
            },
            "maxPathDepth": {
                "name": "Maximum depth of paths to collect",
                "description": "Integer value indicating maximum depth of paths to collect. Paths deeper than this will not be individually reported, and instead a path at this max depth will be added. Note that this doesn't affect any other collected item such as property, nodeType - ie those will all be collected irrespective of this config param.Default is 9",
                "type": "Integer",
                "cardinality": "required",
                "default": 9
            },
            "enabled": {
                "name": "enable/disable this validator",
                "description": "Whether this validator is enabled. If disabled no ChangeSet will be generated. Default is true",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.query.QueryEngineSettingsService",
        "name": "Apache Jackrabbit Query Engine Settings Service",
        "description": "Various settings exposed by Oak QueryEngine. Note that settings done by system property supersedes the one defined via OSGi config",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "queryLimitInMemory": {
                "name": "In memory limit",
                "description": "Maximum number of entries that can be held in memory while evaluating any query",
                "type": "Integer",
                "cardinality": "required",
                "default": 500000
            },
            "queryLimitReads": {
                "name": "In memory read limit",
                "description": "Maximum number of results which can be read by any query",
                "type": "Integer",
                "cardinality": "required",
                "default": 100000
            },
            "queryFailTraversal": {
                "name": "Fail traversal",
                "description": "If enabled any query execution which results in traversal would fail.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "fastQuerySize": {
                "name": "Fast result size",
                "description": "Whether the query result size (QueryResult.getSize()) should return an estimation for queries that return many nodes. The estimate will be larger or equal the actual result size, as it includes unindexed properties and nodes that are not accessible. If disabled, for such cases -1 is returned. Note: even if enabled, getSize may still return -1 if the index used does not support the feature.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "getStrictPathRestrictionsForIndexes": {
                "name": "Enable Strict Path restrictions for indexes to be used",
                "description": "Whether path restrictions of indexes (excludedPaths / includedPaths) are taken intoaccount during query execution, for Lucene indexes. When enabled, only indexes are considered ifthe index path restriction is compatible with the query path restrictions. When disabled, onlythe queryPaths of the index is taken into account.",
                "type": "String",
                "cardinality": "required",
                "default": "DISABLE"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.security.authentication.AuthenticationConfigurationImpl",
        "name": "Apache Jackrabbit Oak AuthenticationConfiguration",
        "description": "",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "org.apache.jackrabbit.oak.authentication.appName": {
                "name": "Application Name",
                "description": "Application named used for JAAS authentication",
                "type": "String",
                "cardinality": "required",
                "default": "jackrabbit.oak"
            },
            "org.apache.jackrabbit.oak.authentication.configSpiName": {
                "name": "JAAS Config SPI Name",
                "description": "Name of JAAS Configuration Spi. This needs to be set to JAAS config provider name if JAAS authentication is managed by Felix JAAS Support with its Global Configuration Policy set to 'default'.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider",
        "name": "Apache Jackrabbit Oak LDAP Identity Provider",
        "description": "Description for org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider",
        "bundleName": "org.apache.jackrabbit.oak-auth-ldap",
        "attributes": {
            "provider.name": {
                "name": "LDAP Provider Name",
                "description": "Name of this LDAP provider configuration. This is used to reference this provider by the login modules.",
                "type": "String",
                "cardinality": "required",
                "default": "ldap"
            },
            "host.name": {
                "name": "LDAP Server Hostname",
                "description": "Hostname of the LDAP server",
                "type": "String",
                "cardinality": "required",
                "default": "localhost"
            },
            "host.port": {
                "name": "LDAP Server Port",
                "description": "Port of the LDAP server",
                "type": "Integer",
                "cardinality": "required",
                "default": 389
            },
            "host.ssl": {
                "name": "Use SSL",
                "description": "Indicates if an SSL (LDAPs) connection should be used.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "host.tls": {
                "name": "Use TLS",
                "description": "Indicates if TLS should be started on connections.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "host.noCertCheck": {
                "name": "Disable certificate checking",
                "description": "Indicates if server certificate validation should be disabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "bind.dn": {
                "name": "Bind DN",
                "description": "DN of the user for authentication. Leave empty for anonymous bind.",
                "type": "String",
                "cardinality": "required"
            },
            "bind.password": {
                "name": "Bind Password",
                "description": "Password of the user for authentication.",
                "type": "Password",
                "cardinality": "required"
            },
            "searchTimeout": {
                "name": "Search Timeout",
                "description": "Time in until a search times out (eg: '1s' or '1m 30s').",
                "type": "String",
                "cardinality": "required",
                "default": "60s"
            },
            "adminPool.maxActive": {
                "name": "Admin pool max active",
                "description": "The max active size of the admin connection pool.",
                "type": "Long",
                "cardinality": "required",
                "default": 8
            },
            "adminPool.lookupOnValidate": {
                "name": "Admin pool lookup on validate",
                "description": "Indicates an ROOT DSE lookup is performed to test if the connection is still valid when taking it out of the pool.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "userPool.maxActive": {
                "name": "User pool max active",
                "description": "The max active size of the user connection pool.",
                "type": "Long",
                "cardinality": "required",
                "default": 8
            },
            "userPool.lookupOnValidate": {
                "name": "User pool lookup on validate",
                "description": "Indicates an ROOT DSE lookup is performed to test if the connection is still valid when taking it out of the pool.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "user.baseDN": {
                "name": "User base DN",
                "description": "The base DN for user searches.",
                "type": "String",
                "cardinality": "required",
                "default": "ou=people,o=example,dc=com"
            },
            "user.objectclass": {
                "name": "User object classes",
                "description": "The list of object classes an user entry must contain.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "person"
                ]
            },
            "user.idAttribute": {
                "name": "User id attribute",
                "description": "Name of the attribute that contains the user id.",
                "type": "String",
                "cardinality": "required",
                "default": "uid"
            },
            "user.extraFilter": {
                "name": "User extra filter",
                "description": "Extra LDAP filter to use when searching for users. The final filter isformatted like: '(&(<idAttr>=<userId>)(objectclass=<objectclass>)<extraFilter>)'",
                "type": "String",
                "cardinality": "required"
            },
            "user.makeDnPath": {
                "name": "User DN paths",
                "description": "Controls if the DN should be used for calculating a portion of the intermediate path.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "group.baseDN": {
                "name": "Group base DN",
                "description": "The base DN for group searches.",
                "type": "String",
                "cardinality": "required",
                "default": "ou=groups,o=example,dc=com"
            },
            "group.objectclass": {
                "name": "Group object classes",
                "description": "The list of object classes a group entry must contain.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "groupOfUniqueNames"
                ]
            },
            "group.nameAttribute": {
                "name": "Group name attribute",
                "description": "Name of the attribute that contains the group name.",
                "type": "String",
                "cardinality": "required",
                "default": "cn"
            },
            "group.extraFilter": {
                "name": "Group extra filter",
                "description": "Extra LDAP filter to use when searching for groups. The final filter isformatted like: '(&(<nameAttr>=<groupName>)(objectclass=<objectclass>)<extraFilter>)'",
                "type": "String",
                "cardinality": "required"
            },
            "group.makeDnPath": {
                "name": "Group DN paths",
                "description": "Controls if the DN should be used for calculating a portion of the intermediate path.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "group.memberAttribute": {
                "name": "Group member attribute",
                "description": "Group attribute that contains the member(s) of a group.",
                "type": "String",
                "cardinality": "required",
                "default": "uniquemember"
            },
            "useUidForExtId": {
                "name": "Use user id for external ids",
                "description": "If enabled, the value of the user id (resp. group name) attribute will be used to create external identifiers. Leave disabled to use the DN instead.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "customattributes": {
                "name": "Custom Attributes",
                "description": "Attributes retrieved when looking up LDAP entries. Leave empty to retrieve all attributes.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImpl",
        "name": "Apache Jackrabbit Oak TokenConfiguration",
        "description": "",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "tokenExpiration": {
                "name": "Token Expiration",
                "description": "Expiration time of login tokens in ms.",
                "type": "String",
                "cardinality": "required"
            },
            "tokenLength": {
                "name": "Token Length",
                "description": "Length of the generated token.",
                "type": "String",
                "cardinality": "required"
            },
            "tokenRefresh": {
                "name": "Token Refresh",
                "description": "Enable/disable refresh of login tokens (i.e. resetting the expiration time).",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "tokenCleanupThreshold": {
                "name": "Token Cleanup Threshold",
                "description": "Setting this option to a value > 0 will trigger a cleanup upon token creation: if the number of existing token matches/exceeds the configured value an attempt is made to removed expired tokens.",
                "type": "Long",
                "cardinality": "required",
                "default": 0
            },
            "passwordHashAlgorithm": {
                "name": "Hash Algorithm",
                "description": "Name of the algorithm to hash the token.",
                "type": "String",
                "cardinality": "required",
                "default": "SHA-256"
            },
            "passwordHashIterations": {
                "name": "Hash Iterations",
                "description": "Number of iterations used to hash the token.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "passwordSaltSize": {
                "name": "Hash Salt Size",
                "description": "Size of the salt used to generate the hash.",
                "type": "Integer",
                "cardinality": "required",
                "default": 8
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.security.authorization.AuthorizationConfigurationImpl",
        "name": "Apache Jackrabbit Oak AuthorizationConfiguration",
        "description": "",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "permissionsJr2": {
                "name": "Jackrabbit 2.x Permissions",
                "description": "Enforce backwards compatible permission validation with respect to the configurable options.",
                "type": "String",
                "cardinality": 2,
                "options": [
                    {
                        "label": "USER_MANAGEMENT",
                        "value": "USER_MANAGEMENT"
                    },
                    {
                        "label": "REMOVE_NODE",
                        "value": "REMOVE_NODE"
                    }
                ]
            },
            "importBehavior": {
                "name": "Import Behavior",
                "description": "Behavior for access control related items upon XML import.",
                "type": "String",
                "cardinality": "required",
                "default": "abort",
                "options": [
                    {
                        "label": "abort",
                        "value": "abort"
                    },
                    {
                        "label": "besteffort",
                        "value": "besteffort"
                    },
                    {
                        "label": "ignore",
                        "value": "ignore"
                    }
                ]
            },
            "readPaths": {
                "name": "Readable Paths",
                "description": "Enable full read access to regular nodes and properties at the specified paths irrespective of other policies that may take effective.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/jcr:system/rep:namespaces",
                    "/jcr:system/jcr:nodeTypes",
                    "/jcr:system/rep:privileges"
                ]
            },
            "administrativePrincipals": {
                "name": "Administrative Principals",
                "description": "Allows to specify principals that should be granted full permissions on the complete repository content.",
                "type": "String",
                "cardinality": 10
            },
            "configurationRanking": {
                "name": "Ranking",
                "description": "Ranking of this configuration in a setup with multiple authorization configurations.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.security.internal.SecurityProviderRegistration",
        "name": "Apache Jackrabbit Oak SecurityProvider",
        "description": "The default SecurityProvider embedded in Apache Jackrabbit Oak",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "requiredServicePids": {
                "name": "Required Services",
                "description": "The SecurityProvider will not register itself unless the services identified by the following service pids or the oak.security.name properties are registered first. The class name is identified by checking the service.pid property. If that property does not exist, the oak.security.name property is used as a fallback.Only implementations of the following interfaces are checked :AuthorizationConfiguration, PrincipalConfiguration, TokenConfiguration, AuthorizableActionProvider, RestrictionProvider and UserAuthenticationFactory.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "org.apache.jackrabbit.oak.security.authorization.AuthorizationConfigurationImpl",
                    "org.apache.jackrabbit.oak.security.principal.PrincipalConfigurationImpl",
                    "org.apache.jackrabbit.oak.security.authentication.token.TokenConfigurationImpl",
                    "org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider",
                    "org.apache.jackrabbit.oak.security.authorization.restriction.RestrictionProviderImpl",
                    "org.apache.jackrabbit.oak.security.user.UserAuthenticationFactoryImpl"
                ]
            },
            "authorizationCompositionType": {
                "name": "Authorization Composition Type",
                "description": "The Composite Authorization model uses this flag to determine what type of logic to apply to the existing providers (default value is AND).",
                "type": "String",
                "cardinality": "required",
                "default": "AND",
                "options": [
                    {
                        "label": "AND",
                        "value": "AND"
                    },
                    {
                        "label": "OR",
                        "value": "OR"
                    }
                ]
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.security.user.RandomAuthorizableNodeName",
        "name": "Apache Jackrabbit Oak Random Authorizable Node Name",
        "description": "Generates a random name for the authorizable node.",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "length": {
                "name": "Name Length",
                "description": "Length of the generated node name.",
                "type": "Integer",
                "cardinality": "required",
                "default": 21
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.security.user.UserConfigurationImpl",
        "name": "Apache Jackrabbit Oak UserConfiguration",
        "description": "",
        "bundleName": "org.apache.jackrabbit.oak-core",
        "attributes": {
            "usersPath": {
                "name": "User Path",
                "description": "Path underneath which user nodes are being created.",
                "type": "String",
                "cardinality": "required",
                "default": "/rep:security/rep:authorizables/rep:users"
            },
            "groupsPath": {
                "name": "Group Path",
                "description": "Path underneath which group nodes are being created.",
                "type": "String",
                "cardinality": "required",
                "default": "/rep:security/rep:authorizables/rep:groups"
            },
            "systemRelativePath": {
                "name": "System User Relative Path",
                "description": "Path relative to the user root path underneath which system user nodes are being created. The default value is 'system'.",
                "type": "String",
                "cardinality": "required",
                "default": "system"
            },
            "defaultDepth": {
                "name": "Default Depth",
                "description": "Number of levels that are used by default to store authorizable nodes",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "importBehavior": {
                "name": "Import Behavior",
                "description": "Behavior for user/group related items upon XML import.",
                "type": "String",
                "cardinality": "required",
                "default": "ignore",
                "options": [
                    {
                        "label": "abort",
                        "value": "abort"
                    },
                    {
                        "label": "besteffort",
                        "value": "besteffort"
                    },
                    {
                        "label": "ignore",
                        "value": "ignore"
                    }
                ]
            },
            "passwordHashAlgorithm": {
                "name": "Hash Algorithm",
                "description": "Name of the algorithm used to generate the password hash.",
                "type": "String",
                "cardinality": "required",
                "default": "SHA-256"
            },
            "passwordHashIterations": {
                "name": "Hash Iterations",
                "description": "Number of iterations to generate the password hash.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "passwordSaltSize": {
                "name": "Hash Salt Size",
                "description": "Salt size to generate the password hash.",
                "type": "Integer",
                "cardinality": "required",
                "default": 8
            },
            "omitAdminPw": {
                "name": "Omit Admin Password",
                "description": "Boolean flag to prevent the administrator account to be created with a password upon repository initialization. Please note that changing this option after the initial repository setup will have no effect.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "supportAutoSave": {
                "name": "Autosave Support",
                "description": "Configuration option to enable autosave behavior. Note: this config option is present for backwards compatibility with Jackrabbit 2.x and should only be used for broken code that doesn't properly verify the autosave behavior (see Jackrabbit API). If this option is turned on autosave will be enabled by default; otherwise autosave is not supported.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "passwordMaxAge": {
                "name": "Maximum Password Age",
                "description": "Maximum age in days a password may have. Values greater 0 will implicitly enable password expiry. A value of 0 indicates unlimited password age.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "initialPasswordChange": {
                "name": "Change Password On First Login",
                "description": "When enabled, forces users to change their password upon first login.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "passwordHistorySize": {
                "name": "Maximum Password History Size",
                "description": "Maximum number of passwords recorded for a user after changing her password (NOTE: upper limit is 1000). When changing the password the new password must not be present in the password history. A value of 0 indicates no password history is recorded.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "passwordExpiryForAdmin": {
                "name": "Enable Password Expiry for Admin User",
                "description": "When enabled, the admin user will also be subject to password expiry. The default value is false for backwards compatibility.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "cacheExpiration": {
                "name": "Principal Cache Expiration",
                "description": "Optional configuration defining the number of milliseconds until the principal cache expires (NOTE: currently only respected for principal resolution with the internal system session such as used for login). If not set or equal/lower than zero no caches are created/evaluated.",
                "type": "Long",
                "cardinality": "required",
                "default": 0
            },
            "enableRFC7613UsercaseMappedProfile": {
                "name": "RFC7613 Username Comparison Profile",
                "description": "Enable the UsercaseMappedProfile defined in RFC7613 for username comparison.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.segment.azure.AzureSegmentStoreService",
        "name": "Apache Jackrabbit Oak Azure Segment Store Service",
        "description": "Azure backend for the Oak Segment Node Store",
        "bundleName": "org.apache.jackrabbit.oak-segment-azure",
        "attributes": {
            "accountName": {
                "name": "Azure account name",
                "description": "Name of the Azure Storage account to use.",
                "type": "String",
                "cardinality": "required"
            },
            "containerName": {
                "name": "Azure container name",
                "description": "Name of the container to use. If it doesn't exists, it'll be created.",
                "type": "String",
                "cardinality": "required",
                "default": "oak"
            },
            "accessKey": {
                "name": "Azure account access key",
                "description": "Access key which should be used to authenticate on the account",
                "type": "String",
                "cardinality": "required"
            },
            "rootPath": {
                "name": "Root path",
                "description": "Names of all the created blobs will be prefixed with this path",
                "type": "String",
                "cardinality": "required",
                "default": "/oak"
            },
            "connectionURL": {
                "name": "Azure connection string (optional)",
                "description": "Connection string to be used to connect to the Azure Storage. Setting it will override the accountName and accessKey properties.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.segment.SegmentNodeStoreFactory",
        "name": "Apache Jackrabbit Oak Segment-Tar NodeStore Factory",
        "description": "Factory allowing configuration of adjacent instances of NodeStore implementation based on Segment model besides a default SegmentNodeStore in same setup.",
        "bundleName": "org.apache.jackrabbit.oak-segment-tar",
        "attributes": {
            "repository.home": {
                "name": "Repository Home Directory",
                "description": "Path on the file system where repository data will be stored. Defaults to the value of the framework property 'repository.home' or to 'repository' if that is neither specified.",
                "type": "String",
                "cardinality": "required"
            },
            "tarmk.mode": {
                "name": "Mode",
                "description": "TarMK mode (64 for memory mapped file access, 32 for normal file access). Default value is taken from the 'sun.arch.data.model' system property.",
                "type": "String",
                "cardinality": "required"
            },
            "tarmk.size": {
                "name": "Maximum tar file size (MB)",
                "description": "The maximum size of the tar files in megabytes. Default value is '256'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 256
            },
            "segmentCache.size": {
                "name": "Segment cache size (MB)",
                "description": "Cache size for storing most recently used segments in megabytes. Default value is '256'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 256
            },
            "stringCache.size": {
                "name": "String cache size (MB)",
                "description": "Cache size for storing most recently used strings in megabytes. Default value is '256'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 256
            },
            "templateCache.size": {
                "name": "Template cache size (MB)",
                "description": "Cache size for storing most recently used templates in megabytes. Default value is '64'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 64
            },
            "stringDeduplicationCache.size": {
                "name": "String deduplication cache size (#items)",
                "description": "Maximum number of strings to keep in the deduplication cache. Default value is '15000'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 15000
            },
            "templateDeduplicationCache.size": {
                "name": "Template deduplication cache size (#items)",
                "description": "Maximum number of templates to keep in the deduplication cache. Default value is '3000'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 3000
            },
            "nodeDeduplicationCache.size": {
                "name": "Node deduplication cache size (#items)",
                "description": "Maximum number of node to keep in the deduplication cache. If the supplied value is not a power of 2, it will be rounded up to the next power of 2. Default value is '1048576'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1048576
            },
            "pauseCompaction": {
                "name": "Pause compaction",
                "description": "When set to true the compaction phase is skipped during garbage collection. Default value is 'false'.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "compaction.retryCount": {
                "name": "Compaction retries",
                "description": "Number of tries to compact concurrent commits on top of already compacted commits. Default value is '5'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "compaction.force.timeout": {
                "name": "Force compaction timeout",
                "description": "Number of seconds to attempt to force compact concurrent commits on top of already compacted commits after the maximum number of retries has been reached. Forced compaction tries to acquire an exclusive write lock on the node store, blocking concurrent write access as long as the lock is held. Default value is '60'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "compaction.sizeDeltaEstimation": {
                "name": "Garbage collection repository size threshold",
                "description": "Garbage collection will be skipped unless the repository grew at least by the number of bytes specified. Default value is '1073741824'.",
                "type": "Long",
                "cardinality": "required",
                "default": 1073741824
            },
            "compaction.disableEstimation": {
                "name": "Disable estimation phase",
                "description": "Disables the estimation phase allowing garbage collection to run unconditionally. Default value is 'false'.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "compaction.retainedGenerations": {
                "name": "Compaction retained generations",
                "description": "Number of segment generations to retain during garbage collection. The number of generations defaults to 2 and can't be changed. This configuration option is considered deprecated and will be removed in the future.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "compaction.memoryThreshold": {
                "name": "Compaction memory threshold",
                "description": "Threshold of available heap memory in percent of total heap memory below which the compaction phase is canceled. 0 disables heap memory monitoring. Default value is '15'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 15
            },
            "compaction.progressLog": {
                "name": "Compaction progress log",
                "description": "The number of nodes compacted after which a status message is logged. -1 disables progress logging. Default value is '-1'.",
                "type": "Long",
                "cardinality": "required",
                "default": -1
            },
            "standby": {
                "name": "Standby mode",
                "description": "Flag indicating this component will not register as a NodeStore but as a NodeStoreProvider instead. Default value is 'false'.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "customBlobStore": {
                "name": "Custom blob store",
                "description": "Boolean value indicating that a custom BlobStore is used for storing large binary values.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "customSegmentStore": {
                "name": "Custom segment store",
                "description": "Boolean value indicating that a custom (non-tar) segment store is used",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "splitPersistence": {
                "name": "Split persistence",
                "description": "Boolean value indicating that the writes should be done locally when using the custom segment store",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "repository.backup.dir": {
                "name": "Backup directory",
                "description": "Directory (relative to current working directory) for storing repository backups. Defaults to 'repository.home/segmentstore-backup'.",
                "type": "String",
                "cardinality": "required"
            },
            "blobGcMaxAgeInSecs": {
                "name": "Blob gc max age (in secs)",
                "description": "The blob garbage collection logic will only consider those blobs which are not accessed recently (currentTime - lastModifiedTime > blobGcMaxAgeInSecs). For example with the default setting only those blobs which have been created at least 24 hours ago will be considered for garbage collection. Default value is '86400'.",
                "type": "Long",
                "cardinality": "required",
                "default": 86400
            },
            "blobTrackSnapshotIntervalInSecs": {
                "name": "Blob tracking snapshot interval",
                "description": "Interval in seconds in which snapshots of locally tracked blob ids are taken and synchronized with the blob store. This should be configured to be less than the frequency of blob garbage collection so that deletions during blob garbage collection can be accounted for in the next garbage collection execution. Default value is '43200'.",
                "type": "Long",
                "cardinality": "required",
                "default": 43200
            },
            "role": {
                "name": "Role",
                "description": "As multiple SegmentNodeStores can be configured, this parameter defines the role of 'this' SegmentNodeStore.",
                "type": "String",
                "cardinality": "required"
            },
            "registerDescriptors": {
                "name": "Register JCR descriptors as OSGi services",
                "description": "Should only be done for one factory instance",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "dispatchChanges": {
                "name": "Dispatch changes",
                "description": "Enable support for observers on this factory instance",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.segment.SegmentNodeStoreMonitorService",
        "name": "Oak Segment Tar Monitoring service",
        "description": "This service is responsible for different configurations related to Oak Segment Tar read/write monitoring.",
        "bundleName": "org.apache.jackrabbit.oak-segment-tar",
        "attributes": {
            "commitsTrackerWriterGroups": {
                "name": "Writer groups",
                "description": "Writer groups for which commits are tracked individually",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.segment.SegmentNodeStoreService",
        "name": "Oak Segment Tar NodeStore service",
        "description": "Apache Jackrabbit Oak NodeStore implementation based on the segment model. For configuration refer to http://jackrabbit.apache.org/oak/docs/osgi_config.html#SegmentNodeStore. Note that for system stability purpose it is advisable to not change these settings at runtime. Instead the config change should be done via file system based config file and this view should ONLY be used to determine which options are supported.",
        "bundleName": "org.apache.jackrabbit.oak-segment-tar",
        "attributes": {
            "repository.home": {
                "name": "Repository Home Directory",
                "description": "Path on the file system where repository data will be stored. Defaults to the value of the framework property 'repository.home' or to 'repository' if that is neither specified.",
                "type": "String",
                "cardinality": "required"
            },
            "tarmk.mode": {
                "name": "Mode",
                "description": "TarMK mode (64 for memory mapped file access, 32 for normal file access). Default value is taken from the 'sun.arch.data.model' system property.",
                "type": "String",
                "cardinality": "required"
            },
            "tarmk.size": {
                "name": "Maximum tar file size (MB)",
                "description": "The maximum size of the tar files in megabytes. Default value is '256'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 256
            },
            "segmentCache.size": {
                "name": "Segment cache size (MB)",
                "description": "Cache size for storing most recently used segments in megabytes. Default value is '256'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 256
            },
            "stringCache.size": {
                "name": "String cache size (MB)",
                "description": "Cache size for storing most recently used strings in megabytes. Default value is '256'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 256
            },
            "templateCache.size": {
                "name": "Template cache size (MB)",
                "description": "Cache size for storing most recently used templates in megabytes. Default value is '64'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 64
            },
            "stringDeduplicationCache.size": {
                "name": "String deduplication cache size (#items)",
                "description": "Maximum number of strings to keep in the deduplication cache. Default value is '15000'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 15000
            },
            "templateDeduplicationCache.size": {
                "name": "Template deduplication cache size (#items)",
                "description": "Maximum number of templates to keep in the deduplication cache. Default value is '3000'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 3000
            },
            "nodeDeduplicationCache.size": {
                "name": "Node deduplication cache size (#items)",
                "description": "Maximum number of node to keep in the deduplication cache. If the supplied value is not a power of 2, it will be rounded up to the next power of 2. Default value is '1048576'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1048576
            },
            "pauseCompaction": {
                "name": "Pause compaction",
                "description": "When set to true the compaction phase is skipped during garbage collection. Default value is 'false'.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "compaction.retryCount": {
                "name": "Compaction retries",
                "description": "Number of tries to compact concurrent commits on top of already compacted commits. Default value is '5'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "compaction.force.timeout": {
                "name": "Force compaction timeout",
                "description": "Number of seconds to attempt to force compact concurrent commits on top of already compacted commits after the maximum number of retries has been reached. Forced compaction tries to acquire an exclusive write lock on the node store, blocking concurrent write access as long as the lock is held. Default value is '60'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            },
            "compaction.sizeDeltaEstimation": {
                "name": "Garbage collection repository size threshold",
                "description": "Garbage collection will be skipped unless the repository grew at least by the number of bytes specified. Default value is '1073741824'.",
                "type": "Long",
                "cardinality": "required",
                "default": 1073741824
            },
            "compaction.disableEstimation": {
                "name": "Disable estimation phase",
                "description": "Disables the estimation phase allowing garbage collection to run unconditionally. Default value is 'false'.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "compaction.retainedGenerations": {
                "name": "Compaction retained generations",
                "description": "Number of segment generations to retain during garbage collection. The number of generations defaults to 2 and can't be changed. This configuration option is considered deprecated and will be removed in the future.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2
            },
            "compaction.memoryThreshold": {
                "name": "Compaction memory threshold",
                "description": "Threshold of available heap memory in percent of total heap memory below which the compaction phase is canceled. 0 disables heap memory monitoring. Default value is '15'.",
                "type": "Integer",
                "cardinality": "required",
                "default": 15
            },
            "compaction.progressLog": {
                "name": "Compaction progress log",
                "description": "The number of nodes compacted after which a status message is logged. -1 disables progress logging. Default value is '-1'.",
                "type": "Long",
                "cardinality": "required",
                "default": -1
            },
            "standby": {
                "name": "Standby mode",
                "description": "Flag indicating this component will not register as a NodeStore but as a NodeStoreProvider instead. Default value is 'false'.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "customBlobStore": {
                "name": "Custom blob store",
                "description": "Boolean value indicating that a custom BlobStore is used for storing large binary values.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "customSegmentStore": {
                "name": "Custom segment store",
                "description": "Boolean value indicating that a custom (non-tar) segment store is used",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "splitPersistence": {
                "name": "Split persistence",
                "description": "Boolean value indicating that the writes should be done locally when using the custom segment store",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "repository.backup.dir": {
                "name": "Backup directory",
                "description": "Directory (relative to current working directory) for storing repository backups. Defaults to 'repository.home/segmentstore-backup'.",
                "type": "String",
                "cardinality": "required"
            },
            "blobGcMaxAgeInSecs": {
                "name": "Blob gc max age (in secs)",
                "description": "The blob garbage collection logic will only consider those blobs which are not accessed recently (currentTime - lastModifiedTime > blobGcMaxAgeInSecs). For example with the default setting only those blobs which have been created at least 24 hours ago will be considered for garbage collection. Default value is '86400'.",
                "type": "Long",
                "cardinality": "required",
                "default": 86400
            },
            "blobTrackSnapshotIntervalInSecs": {
                "name": "Blob tracking snapshot interval",
                "description": "Interval in seconds in which snapshots of locally tracked blob ids are taken and synchronized with the blob store. This should be configured to be less than the frequency of blob garbage collection so that deletions during blob garbage collection can be accounted for in the next garbage collection execution. Default value is '43200'.",
                "type": "Long",
                "cardinality": "required",
                "default": 43200
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.segment.standby.store.StandbyStoreService",
        "name": "Apache Jackrabbit Oak Segment Tar Cold Standby Service",
        "description": "Provides continuous backups of repositories based on Segment Tar",
        "bundleName": "org.apache.jackrabbit.oak-segment-tar",
        "attributes": {
            "org.apache.sling.installer.configuration.persist": {
                "name": "Persist configuration",
                "description": "Must be always disabled to avoid storing the configuration in the repository",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "mode": {
                "name": "Mode",
                "description": "TarMK Cold Standby mode (primary or standby)",
                "type": "String",
                "cardinality": "required",
                "default": "primary",
                "options": [
                    {
                        "label": "primary",
                        "value": "primary"
                    },
                    {
                        "label": "standby",
                        "value": "standby"
                    }
                ]
            },
            "port": {
                "name": "Port",
                "description": "TCP/IP port to use",
                "type": "Integer",
                "cardinality": "required",
                "default": 8023
            },
            "primary.host": {
                "name": "Primary Host",
                "description": "Primary host (standby mode only)",
                "type": "String",
                "cardinality": "required",
                "default": "127.0.0.1"
            },
            "interval": {
                "name": "Sync interval (seconds)",
                "description": "Sync interval in seconds (standby mode only)",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "primary.allowed-client-ip-ranges": {
                "name": "Allowed IP-Ranges",
                "description": "Accept incoming requests for these host names and IP-ranges only (primary mode only)",
                "type": "String",
                "cardinality": "unlimited"
            },
            "secure": {
                "name": "Secure",
                "description": "Use secure connections",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "standby.readtimeout": {
                "name": "Standby Read Timeout",
                "description": "Timeout for requests issued from the standby instance in milliseconds",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            },
            "standby.autoclean": {
                "name": "Standby Automatic Cleanup",
                "description": "Call the cleanup method when the root segment Garbage Collector (GC) generation number increases",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "sslKeyFile": {
                "name": "SSL Key File",
                "description": "The file name which contains the SSL key. If this is empty, a key will be generated on-the-fly.",
                "type": "String",
                "cardinality": "required"
            },
            "sslKeyPassword": {
                "name": "SSL Key Password",
                "description": "Password for the SSL key. If this is empty, an unencrypted key is expected.",
                "type": "Password",
                "cardinality": "required"
            },
            "sslChainFile": {
                "name": "SSL Certificate Chain File",
                "description": "The file name which contains the SSL certificate chain.",
                "type": "String",
                "cardinality": "required"
            },
            "sslValidateClient": {
                "name": "SSL Validate Client",
                "description": "Validate the client's SSL certificate.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "sslSubjectPattern": {
                "name": "SSL Certificate Subject Pattern",
                "description": "The peer certificate's subject must match this pattern in order to be accepted.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.spi.security.authentication.external.impl.DefaultSyncHandler",
        "name": "Apache Jackrabbit Oak Default Sync Handler",
        "description": "Description for org.apache.jackrabbit.oak.spi.security.authentication.external.impl.DefaultSyncHandler",
        "bundleName": "org.apache.jackrabbit.oak-auth-external",
        "attributes": {
            "handler.name": {
                "name": "Sync Handler Name",
                "description": "Name of this sync configuration. This is used to reference this handler by the login modules.",
                "type": "String",
                "cardinality": "required",
                "default": "default"
            },
            "user.expirationTime": {
                "name": "User Expiration Time",
                "description": "Duration until a synced user gets expired (eg. '1h 30m' or '1d').",
                "type": "String",
                "cardinality": "required",
                "default": "1h"
            },
            "user.autoMembership": {
                "name": "User auto membership",
                "description": "List of groups that a synced user is added to automatically",
                "type": "String",
                "cardinality": "unlimited"
            },
            "user.propertyMapping": {
                "name": "User property mapping",
                "description": "List mapping definition of local properties from external ones. eg: 'profile/email=mail'.Use double quotes for fixed values. eg: 'profile/nt:primaryType=\"nt:unstructured\"",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "rep:fullname=cn"
                ]
            },
            "user.pathPrefix": {
                "name": "User Path Prefix",
                "description": "The path prefix used when creating new users.",
                "type": "String",
                "cardinality": "required"
            },
            "user.membershipExpTime": {
                "name": "User Membership Expiration",
                "description": "Time after which membership expires (eg. '1h 30m' or '1d'). Note however, that a membership sync is aways bound to a sync of the user.",
                "type": "String",
                "cardinality": "required",
                "default": "1h"
            },
            "user.membershipNestingDepth": {
                "name": "User membership nesting depth",
                "description": "Returns the maximum depth of group nesting when membership relations are synced. A value of 0 effectively disables group membership lookup. A value of 1 only adds the direct groups of a user. This value has no effect when syncing individual groups only when syncing a users membership ancestry.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "user.dynamicMembership": {
                "name": "User Dynamic Membership",
                "description": "If enabled membership of external identities (user) is no longer fully reflected within the repositories user management.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "user.disableMissing": {
                "name": "Disable missing users",
                "description": "If true, users that no longer exist on the external provider will be locally disabled, and re-enabled if they become valid again. If false (default) they will be removed.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "group.expirationTime": {
                "name": "Group Expiration Time",
                "description": "Duration until a synced group expires (eg. '1h 30m' or '1d').",
                "type": "String",
                "cardinality": "required",
                "default": "1d"
            },
            "group.autoMembership": {
                "name": "Group auto membership",
                "description": "List of groups that a synced group is added to automatically",
                "type": "String",
                "cardinality": "unlimited"
            },
            "group.propertyMapping": {
                "name": "Group property mapping",
                "description": "List mapping definition of local properties from external ones.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "group.pathPrefix": {
                "name": "Group Path Prefix",
                "description": "The path prefix used when creating new groups.",
                "type": "String",
                "cardinality": "required"
            },
            "enableRFC7613UsercaseMappedProfile": {
                "name": "RFC7613 Username Normalization Profile",
                "description": "Enable the UsercaseMappedProfile defined in RFC7613 for username normalization.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.spi.security.authentication.external.impl.ExternalLoginModuleFactory",
        "name": "Apache Jackrabbit Oak External Login Module",
        "description": "Description for org.apache.jackrabbit.oak.spi.security.authentication.external.impl.ExternalLoginModuleFactory",
        "bundleName": "org.apache.jackrabbit.oak-auth-external",
        "attributes": {
            "jaas.ranking": {
                "name": "JAAS Ranking",
                "description": "Specifying the ranking (i.e. sort order) of this login module entry. The entries are sorted in a descending order (i.e. higher value ranked configurations come first).",
                "type": "Integer",
                "cardinality": "required",
                "default": 150
            },
            "jaas.controlFlag": {
                "name": "JAAS Control Flag",
                "description": "Property specifying whether or not a LoginModule is REQUIRED, REQUISITE, SUFFICIENT or OPTIONAL. Refer to the JAAS configuration documentation for more details around the meaning of these flags.",
                "type": "String",
                "cardinality": "required",
                "default": "SUFFICIENT"
            },
            "jaas.realmName": {
                "name": "JAAS Realm",
                "description": "The realm name (or application name) against which the LoginModule  is be registered. If no realm name is provided then LoginModule is registered with a default realm as configured in the Felix JAAS configuration.",
                "type": "String",
                "cardinality": "required"
            },
            "idp.name": {
                "name": "Identity Provider Name",
                "description": "Name of the identity provider (for example: 'ldap').",
                "type": "String",
                "cardinality": "required"
            },
            "sync.handlerName": {
                "name": "Sync Handler Name",
                "description": "Name of the sync handler.",
                "type": "String",
                "cardinality": "required",
                "default": "default"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.spi.security.authentication.external.impl.principal.ExternalPrincipalConfiguration",
        "name": "Apache Jackrabbit Oak External PrincipalConfiguration",
        "description": "Description for org.apache.jackrabbit.oak.spi.security.authentication.external.impl.principal.ExternalPrincipalConfiguration",
        "bundleName": "org.apache.jackrabbit.oak-auth-external",
        "attributes": {
            "protectExternalId": {
                "name": "External Identity Protection",
                "description": "If disabled rep:externalId properties won't be properly protected (backwards compatible behavior). NOTE: for security reasons it is strongly recommend to keep the protection enabled!",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugConfiguration",
        "name": "Apache Jackrabbit Oak CUG Configuration",
        "description": "Authorization configuration dedicated to setup and evaluate 'Closed User Group' permissions.",
        "bundleName": "org.apache.jackrabbit.oak-authorization-cug",
        "attributes": {
            "cugSupportedPaths": {
                "name": "Supported Paths",
                "description": "Paths under which CUGs can be created and will be evaluated.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "cugEnabled": {
                "name": "CUG Evaluation Enabled",
                "description": "Flag to enable the evaluation of the configured CUG policies.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "configurationRanking": {
                "name": "Ranking",
                "description": "Ranking of this configuration in a setup with multiple authorization configurations.",
                "type": "Integer",
                "cardinality": "required",
                "default": 200
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.spi.security.authorization.cug.impl.CugExcludeImpl",
        "name": "Apache Jackrabbit Oak CUG Exclude List",
        "description": "Exclude principal(s) from CUG evaluation. In addition to the principals defined by the default CugExclude ('AdminPrincipal', 'SystemPrincipal', 'SystemUserPrincipal' classes), this component allows to optionally configure additional principals by name.",
        "bundleName": "org.apache.jackrabbit.oak-authorization-cug",
        "attributes": {
            "principalNames": {
                "name": "Principal Names",
                "description": "Name(s) of additional principal(s) that are excluded from CUG evaluation.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.oak.spi.security.user.action.DefaultAuthorizableActionProvider",
        "name": "Apache Jackrabbit Oak AuthorizableActionProvider",
        "description": "",
        "bundleName": "org.apache.jackrabbit.oak-security-spi",
        "attributes": {
            "enabledActions": {
                "name": "Authorizable Actions",
                "description": "The set of actions that is supported by this provider implementation.",
                "type": "String",
                "cardinality": 4,
                "options": [
                    {
                        "label": "AccessControlAction",
                        "value": "org.apache.jackrabbit.oak.spi.security.user.action.AccessControlAction"
                    },
                    {
                        "label": "PasswordValidationAction",
                        "value": "org.apache.jackrabbit.oak.spi.security.user.action.PasswordValidationAction"
                    },
                    {
                        "label": "PasswordChangeAction",
                        "value": "org.apache.jackrabbit.oak.spi.security.user.action.PasswordChangeAction"
                    },
                    {
                        "label": "ClearMembershipAction",
                        "value": "org.apache.jackrabbit.oak.spi.security.user.action.ClearMembershipAction"
                    }
                ]
            },
            "userPrivilegeNames": {
                "name": "Configure AccessControlAction: User Privileges",
                "description": "The name of the privileges that should be granted to a given user on it's home.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "groupPrivilegeNames": {
                "name": "Configure AccessControlAction: Group Privileges",
                "description": "The name of the privileges that should be granted to a given group on it's home.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "constraint": {
                "name": "Configure PasswordValidationAction: Password Constraint",
                "description": "A regular expression specifying the pattern that must be matched by a user's password.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.vault.packaging.impl.PackagingImpl",
        "name": "Apache Jackrabbit Packaging Service",
        "description": "",
        "bundleName": "org.apache.jackrabbit.vault",
        "attributes": {
            "packageRoots": {
                "name": "Package roots",
                "description": null,
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/etc/packages"
                ],
                "hint": "path"
            }
        }
    },
    {
        "id": "org.apache.jackrabbit.vault.packaging.registry.impl.FSPackageRegistry",
        "name": "Apache Jackrabbit FS Package Registry Service",
        "description": "",
        "bundleName": "org.apache.jackrabbit.vault",
        "attributes": {
            "homePath": {
                "name": "Home path",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "packageregistry"
            }
        }
    },
    {
        "id": "org.apache.sling.auth.core.impl.LogoutServlet",
        "name": "Apache Sling Authentication Logout Servlet",
        "description": "Servlet for logging out users through the authenticator service.",
        "bundleName": "org.apache.sling.auth.core",
        "attributes": {
            "sling.servlet.methods": {
                "name": "Method",
                "description": "Supported Methods",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "GET",
                    "POST"
                ]
            }
        }
    },
    {
        "id": "org.apache.sling.caconfig.impl.ConfigurationBindingsValueProvider",
        "name": "Apache Sling Context-Aware Configuration HTL Binding Values Provider",
        "description": "Binds a script variable 'caconfig' to the HTL/Sightly scripting context.",
        "bundleName": "org.apache.sling.caconfig.impl",
        "attributes": {
            "enabled": {
                "name": "Enabled",
                "description": "Enable provider.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.caconfig.impl.ConfigurationResolverImpl",
        "name": "Apache Sling Context-Aware Configuration Resolver",
        "description": "Getting context-aware configurations for a given resource context.",
        "bundleName": "org.apache.sling.caconfig.impl",
        "attributes": {
            "configBucketNames": {
                "name": "Config bucket names",
                "description": "Additional bucket resource names to 'sling:configs' to store configuration resources. The names are used in the order defined, always starting with sling:configs. Once a bucket resource with a matching name is found, that bucket is used and the following names are skipped. For writeback via ConfigurationManager always sling:configs is used.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.caconfig.impl.def.DefaultConfigurationInheritanceStrategy",
        "name": "Apache Sling Context-Aware Configuration Default Inheritance Strategy",
        "description": "Standardized resource inheritance for configurations.",
        "bundleName": "org.apache.sling.caconfig.impl",
        "attributes": {
            "enabled": {
                "name": "Enabled",
                "description": "Enable this configuration inheritance strategy.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "configPropertyInheritancePropertyNames": {
                "name": "Config property inheritance property names",
                "description": "Additional property names to sling:configPropertyInherit to handle property inheritance. The names are used in the order defined, always starting with sling:configPropertyInherit. Once a property with a value is found, that value is used and the following property names are skipped.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.caconfig.impl.def.DefaultConfigurationPersistenceStrategy",
        "name": "Apache Sling Context-Aware Configuration Default Resource Persistence Strategy",
        "description": "Directly uses configuration resources for storing configuration data.",
        "bundleName": "org.apache.sling.caconfig.impl",
        "attributes": {
            "enabled": {
                "name": "Enabled",
                "description": "Enable this configuration resource persistence strategy.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.caconfig.impl.override.OsgiConfigurationOverrideProvider",
        "name": "Apache Sling Context-Aware Configuration Override Provider: OSGi configuration",
        "description": "Allows to override configuration property values from OSGi configurations.",
        "bundleName": "org.apache.sling.caconfig.impl",
        "attributes": {
            "description": {
                "name": "Description",
                "description": "This description is used for display in the web console.",
                "type": "String",
                "cardinality": "required"
            },
            "overrides": {
                "name": "Overrides",
                "description": "Override strings - examples: {configName}/{propertyName}={propertyJsonValue} {configName}={propertyJsonObject} [{contextPath}]{configName}/{propertyName}={propertyJsonValue} [{contextPath}]{configName}={propertyJsonObject}",
                "type": "String",
                "cardinality": "unlimited"
            },
            "enabled": {
                "name": "Enabled",
                "description": "Enable this override provider.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Priority of configuration override providers (higher = higher priority).",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "webconsole.configurationFactory.nameHint": {
                "name": "Webconsole configuration factory name hint",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "{description}, enabled={enabled}"
            }
        }
    },
    {
        "id": "org.apache.sling.caconfig.impl.override.SystemPropertyConfigurationOverrideProvider",
        "name": "Apache Sling Context-Aware Configuration Override Provider: System Properties",
        "description": "Allows to override configuration property values from system environment properties.",
        "bundleName": "org.apache.sling.caconfig.impl",
        "attributes": {
            "enabled": {
                "name": "Enabled",
                "description": "Enable this override provider.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Priority of configuration override providers (higher = higher priority).",
                "type": "Integer",
                "cardinality": "required",
                "default": 200
            }
        }
    },
    {
        "id": "org.apache.sling.caconfig.management.impl.ConfigurationManagementSettingsImpl",
        "name": "Apache Sling Context-Aware Configuration Management Settings",
        "description": "Management settings for reading and writing configurations.",
        "bundleName": "org.apache.sling.caconfig.impl",
        "attributes": {
            "ignorePropertyNameRegex": {
                "name": "Ignore Property Regex",
                "description": "List of regular expressions with property names that should be ignored when reading or writing configuration data properties.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "^jcr:.+$",
                    "^sling:resourceType$"
                ]
            },
            "configCollectionPropertiesResourceNames": {
                "name": "Config collection parent properties resource names",
                "description": "Names of resource to try to look up configuration collection properties in. If list is empty only the collection parent resource is checked. If the list is not empty than only those listed resources are used for look up. If you want to include the collection parent resource you can use a dot for the value.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.caconfig.resource.impl.def.DefaultConfigurationResourceResolvingStrategy",
        "name": "Apache Sling Context-Aware Configuration Default Resource Resolving Strategy",
        "description": "Standardized access to configurations in the resource tree.",
        "bundleName": "org.apache.sling.caconfig.impl",
        "attributes": {
            "enabled": {
                "name": "Enabled",
                "description": "Enable this configuration resource resolving strategy.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "configPath": {
                "name": "Configurations path",
                "description": "Paths where the configurations are stored in.",
                "type": "String",
                "cardinality": "required",
                "default": "/conf",
                "hint": "path"
            },
            "fallbackPaths": {
                "name": "Fallback paths",
                "description": "Global fallback configurations, ordered from most specific (checked first) to least specific.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/conf/global",
                    "/apps/conf",
                    "/libs/conf"
                ],
                "hint": "path"
            },
            "configCollectionInheritancePropertyNames": {
                "name": "Config collection inheritance property names",
                "description": "Additional property names to sling:configCollectionInherit to handle configuration inheritance. The names are used in the order defined, always starting with sling:configCollectionInherit. Once a property with a value is found, that value is used and the following property names are skipped.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.caconfig.resource.impl.def.DefaultContextPathStrategy",
        "name": "Apache Sling Context-Aware Configuration Default Context Path Strategy",
        "description": "Detects context path by existence of sling:configRef properties.",
        "bundleName": "org.apache.sling.caconfig.impl",
        "attributes": {
            "enabled": {
                "name": "Enabled",
                "description": "Enable this context path strategy.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "configRefResourceNames": {
                "name": "Config ref. resource names",
                "description": "Names of resource to try to look up sling:configRef property in. If list is empty only current resource is checked. If the list is not empty than only those listed resources are used for look up. If you want to include the current resource you can use a dot for the value.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "configRefPropertyNames": {
                "name": "Config ref. property names",
                "description": "Additional property names to sling:configRef to look up a configuration reference. The names are used in the order defined, always starting with sling:configRef. Once a property with a value is found, that value is used and the following property names are skipped.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "service.ranking": {
                "name": "Service Ranking",
                "description": "Priority of persistence strategy (higher = higher priority).",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            }
        }
    },
    {
        "id": "org.apache.sling.commons.html.internal.TagsoupHtmlParser",
        "name": "Apache Sling HTML Parser (TagSoup)",
        "description": "TagSoup parser configuration",
        "bundleName": "org.apache.sling.commons.html",
        "attributes": {
            "parser.features": {
                "name": "parser features",
                "description": "Turn features in the underlying parser on or off by setting featureID=[true|false]",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.commons.log.LogManager",
        "name": "Apache Sling Logging Configuration",
        "description": "Global configuration setup for the Sling OSGi LogService implementation. See http://sling.apache.org/site/logging.html for more detailed documentation and description.",
        "bundleName": "org.apache.sling.commons.log",
        "attributes": {
            "org.apache.sling.commons.log.level": {
                "name": "Log Level",
                "description": "Root Logger log level setting.",
                "type": "String",
                "cardinality": "required",
                "default": "info",
                "options": [
                    {
                        "label": "Off",
                        "value": "off"
                    },
                    {
                        "label": "Trace",
                        "value": "trace"
                    },
                    {
                        "label": "Debug",
                        "value": "debug"
                    },
                    {
                        "label": "Information",
                        "value": "info"
                    },
                    {
                        "label": "Warnings",
                        "value": "warn"
                    },
                    {
                        "label": "Error",
                        "value": "error"
                    }
                ]
            },
            "org.apache.sling.commons.log.file": {
                "name": "Log File",
                "description": "The name and path of the log file. If this is empty, logging goes to standard output (the console). If this path is relative it is resolved below ${sling.home}.",
                "type": "String",
                "cardinality": "required",
                "default": "logs/error.log"
            },
            "org.apache.sling.commons.log.file.number": {
                "name": "Number of Log Files",
                "description": "The number of log files to keep. When the threshold of the log file reaches the configured maximum (see Log File Threshold), the log file is copied and a new log file is created. This setting specifies how many generations (incl. the active log file) should be kept. This is a positive numeric value. The default value is 5. If the Log File Threshold property specifies time/date controlled log file rotation, log file deletion can be disabled by setting the number of log files to '0'. Warning: setting this to a high number (more than 20) may be expensive on some file-systems, because all files need to be renamed when log files are rotated.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "org.apache.sling.commons.log.file.size": {
                "name": "Log File Threshold",
                "description": "Controls the rotation of the log file by setting a maximum file size or a time/date schedule at which to rotate the log file. A size limit can be specified setting a pure number indicating the number of bytes or a number with a size indicator KB, MB, or GB (case is ignored). A time/date schedule can be specified as a java.util.SimpleDateFormat pattern. The default is \"'.'yyyy-MM-dd\" (daily log rotation).",
                "type": "String",
                "cardinality": "required",
                "default": "'.'yyyy-MM-dd"
            },
            "org.apache.sling.commons.log.pattern": {
                "name": "Message Pattern",
                "description": "Message Pattern for formatting the log messages. For complete details refer to http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout",
                "type": "String",
                "cardinality": "required",
                "default": "%d{dd.MM.yyyy HH:mm:ss.SSS} *%level* [%thread] %logger %msg%n"
            },
            "org.apache.sling.commons.log.configurationFile": {
                "name": "Logback Config File",
                "description": "The name and path of the Logback Config file. If this is empty, then default configuration would be used. If this path is relative it is resolved below ${sling.home}. See http://logback.qos.ch/manual/ for details.",
                "type": "String",
                "cardinality": "required"
            },
            "org.apache.sling.commons.log.packagingDataEnabled": {
                "name": "Packaging Data",
                "description": "Include the packaging data which provide details about jar name and version of jar from which the class is loaded as part of stacktrace. See http://logback.qos.ch/reasonsToSwitch.html#packagingData",
                "type": "Boolean",
                "cardinality": "required"
            },
            "org.apache.sling.commons.log.maxCallerDataDepth": {
                "name": "Max Caller Depth",
                "description": "The stack data depth computed during caller data extraction. See http://logback.qos.ch/manual/layouts.html#caller",
                "type": "Integer",
                "cardinality": "required",
                "default": 7
            },
            "org.apache.sling.commons.log.maxOldFileCountInDump": {
                "name": "Max Count of files in dump",
                "description": "Maximum number of old rolled over files for each active file to be included while generating the dump as part of Status zip support",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "org.apache.sling.commons.log.numOfLines": {
                "name": "Number of lines",
                "description": "Number of lines from each log files to include while generating the dump in 'txt' mode. If set to -1 then whole file would be included",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "org.apache.sling.commons.log.LogManager.factory.config",
        "name": "Apache Sling Logging Logger Configuration",
        "description": "Configure Loggers with levels, pattern and destination. See http://sling.apache.org/site/logging.html for more detailed documentation and description.",
        "bundleName": "org.apache.sling.commons.log",
        "attributes": {
            "org.apache.sling.commons.log.level": {
                "name": "Log Level",
                "description": "Root Logger log level setting.",
                "type": "String",
                "cardinality": "required",
                "default": "info",
                "options": [
                    {
                        "label": "Trace",
                        "value": "trace"
                    },
                    {
                        "label": "Debug",
                        "value": "debug"
                    },
                    {
                        "label": "Information",
                        "value": "info"
                    },
                    {
                        "label": "Warnings",
                        "value": "warn"
                    },
                    {
                        "label": "Error",
                        "value": "error"
                    }
                ]
            },
            "org.apache.sling.commons.log.file": {
                "name": "Log File",
                "description": "The name and path of the log file. If this is empty, logging goes to standard output (the console). If this path is relative it is resolved below ${sling.home}.",
                "type": "String",
                "cardinality": "required",
                "default": "logs/error.log"
            },
            "org.apache.sling.commons.log.pattern": {
                "name": "Message Pattern",
                "description": "Message Pattern for formatting the log messages. For complete details refer to http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout",
                "type": "String",
                "cardinality": "required",
                "default": "{0,date,dd.MM.yyyy HH:mm:ss.SSS} *{4}* [{2}] {3} {5}"
            },
            "org.apache.sling.commons.log.names": {
                "name": "Logger",
                "description": "The logger names applicable for this logger configuration. Each logger name applies for any child category unless configured otherwise. E.g. a logger name of org.apache.sling applies to logger org.apache.sling.commons unless there is a different configuration for org.apache.sling.commons.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "webconsole.configurationFactory.nameHint": {
                "name": null,
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "{org.apache.sling.commons.log.file}: {org.apache.sling.commons.log.level}"
            },
            "org.apache.sling.commons.log.additiv": {
                "name": "Additivity",
                "description": "If set to false then logs from these loggers would not be sent to any appender attached higher in the hierarchy",
                "type": "Boolean",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.commons.log.LogManager.factory.writer",
        "name": "Apache Sling Logging Writer Configuration",
        "description": "Configure a Logger Writer for Sling Logging. See http://sling.apache.org/site/logging.html for more detailed documentation and description.",
        "bundleName": "org.apache.sling.commons.log",
        "attributes": {
            "org.apache.sling.commons.log.file": {
                "name": "Log File",
                "description": "The name and path of the log file. If this is empty, logging goes to standard output (the console). If this path is relative it is resolved below ${sling.home}.",
                "type": "String",
                "cardinality": "required",
                "default": "logs/error.log"
            },
            "org.apache.sling.commons.log.file.number": {
                "name": "Number of Log Files",
                "description": "The number of log files to keep. When the threshold of the log file reaches the configured maximum (see Log File Threshold), the log file is copied and a new log file is created. This setting specifies how many generations (incl. the active log file) should be kept. This is a positive numeric value. The default value is 5. If the Log File Threshold property specifies time/date controlled log file rotation, log file deletion can be disabled by setting the number of log files to '0'. Warning: setting this to a high number (more than 20) may be expensive on some file-systems, because all files need to be renamed when log files are rotated.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "org.apache.sling.commons.log.file.size": {
                "name": "Log File Threshold",
                "description": "Controls the rotation of the log file by setting a maximum file size or a time/date schedule at which to rotate the log file. A size limit can be specified setting a pure number indicating the number of bytes or a number with a size indicator KB, MB, or GB (case is ignored). A time/date schedule can be specified as a java.util.SimpleDateFormat pattern. The default is \"'.'yyyy-MM-dd\" (daily log rotation).",
                "type": "String",
                "cardinality": "required",
                "default": "'.'yyyy-MM-dd"
            },
            "org.apache.sling.commons.log.file.buffered": {
                "name": "Buffered Logging",
                "description": "By default logging events are immediately written to disk and will not be lost in case your application exits without properly closing appenders. If set to true  and if appenders are not closed properly when your application exits, then logging events not yet written to disk may be lost. See http://logback.qos.ch/manual/encoders.html#immediateFlush",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "webconsole.configurationFactory.nameHint": {
                "name": null,
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "{org.apache.sling.commons.log.file}"
            }
        }
    },
    {
        "id": "org.apache.sling.commons.metrics.internal.LogReporter",
        "name": "Apache Sling Metrics Log Reporter Configuration",
        "description": "",
        "bundleName": "org.apache.sling.commons.metrics",
        "attributes": {
            "period": {
                "name": "Period",
                "description": "Period at which the metrics data will be logged",
                "type": "Long",
                "cardinality": "required",
                "default": 5
            },
            "timeUnit": {
                "name": "Time unit",
                "description": "Unit of time for evaluating the period",
                "type": "String",
                "cardinality": "required",
                "default": "MINUTES",
                "options": [
                    {
                        "label": "NANOSECONDS",
                        "value": "NANOSECONDS"
                    },
                    {
                        "label": "MICROSECONDS",
                        "value": "MICROSECONDS"
                    },
                    {
                        "label": "MILLISECONDS",
                        "value": "MILLISECONDS"
                    },
                    {
                        "label": "SECONDS",
                        "value": "SECONDS"
                    },
                    {
                        "label": "MINUTES",
                        "value": "MINUTES"
                    },
                    {
                        "label": "HOURS",
                        "value": "HOURS"
                    },
                    {
                        "label": "DAYS",
                        "value": "DAYS"
                    }
                ]
            },
            "level": {
                "name": "Level",
                "description": "The log level to log at.",
                "type": "String",
                "cardinality": "required",
                "default": "INFO",
                "options": [
                    {
                        "label": "TRACE",
                        "value": "TRACE"
                    },
                    {
                        "label": "DEBUG",
                        "value": "DEBUG"
                    },
                    {
                        "label": "INFO",
                        "value": "INFO"
                    },
                    {
                        "label": "WARN",
                        "value": "WARN"
                    },
                    {
                        "label": "ERROR",
                        "value": "ERROR"
                    }
                ]
            },
            "loggerName": {
                "name": "Logger name",
                "description": "The logger name",
                "type": "String",
                "cardinality": "required",
                "default": "metrics"
            },
            "prefix": {
                "name": "Prefix",
                "description": "If specified, only metrics whose name starts with this value are logged. If both prefix and pattern are set, prefix is used.",
                "type": "String",
                "cardinality": "required"
            },
            "pattern": {
                "name": "Pattern",
                "description": "If specified, only metrics whose name matches this regular expression will be logged. If both prefix and pattern are set, prefix is used.",
                "type": "String",
                "cardinality": "required"
            },
            "registryName": {
                "name": "Registry name",
                "description": "Restrict the metrics logged to a specifically named registry.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.commons.metrics.rrd4j.impl.CodahaleMetricsReporter",
        "name": "Apache Sling Metrics reporter writing to RRD4J",
        "description": "For syntax details on RRD data-source and round robin archive definitions see https://oss.oetiker.ch/rrdtool/doc/rrdcreate.en.html and https://github.com/rrd4j/rrd4j/wiki/Tutorial. Changing any attribute in this configuration will replace an existing RRD file with a empty one!",
        "bundleName": "org.apache.sling.commons.metrics-rrd4j",
        "attributes": {
            "datasources": {
                "name": "Data sources",
                "description": "RRDTool data source definitions (e.g. 'DS:oak_SESSION_LOGIN_COUNTER:COUNTER:300:0:U'). Replace colon characters in the metric name with an underscore!",
                "type": "String",
                "cardinality": "unlimited"
            },
            "step": {
                "name": "Step",
                "description": "The base interval in seconds with which data will be fed into the RRD",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "archives": {
                "name": "Archives",
                "description": "RRDTool round robin archive definitions. The default configuration defines four archives based on a default step of five seconds: 1) per minute averages for six hours, 2) per five minute averages 48 hours, 3) per hour averages for four weeks, 4) per day averages for one year.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "RRA:AVERAGE:0.5:12:360",
                    "RRA:AVERAGE:0.5:60:576",
                    "RRA:AVERAGE:0.5:720:336",
                    "RRA:AVERAGE:0.5:17280:365"
                ]
            },
            "path": {
                "name": "Path",
                "description": "Path of the RRD file where metrics are stored. If the path is relative, it is resolved relative to the value of the framework property 'sling.home' when available, otherwise relative to the current working directory.",
                "type": "String",
                "cardinality": "required",
                "default": "metrics/metrics.rrd"
            }
        }
    },
    {
        "id": "org.apache.sling.commons.mime.internal.MimeTypeServiceImpl",
        "name": "Apache Sling Commons MIME Type Service",
        "description": "The Sling Commons MIME Type Service provides support for maintaining and configuring MIME Type mappings.",
        "bundleName": "org.apache.sling.commons.mime",
        "attributes": {
            "mime.types": {
                "name": "MIME Types",
                "description": "Configures additional MIME type mappings in the traditional mime.types file format: Each property is a blank space separated list of strings where the first string is the MIME type and the rest of the strings are filename extensions referring to the MIME type. Using this property additional MIME type mappings may be defined. Existing MIME type mappings cannot be redefined and setting such mappings in this property has no effect. For a list of existing mappings refer to the MIME Types page.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.commons.scheduler.impl.QuartzScheduler",
        "name": "Apache Sling Scheduler",
        "description": "The scheduler is able to run services and jobs at specific times or periodically based on cron expressions.",
        "bundleName": "org.apache.sling.commons.scheduler",
        "attributes": {
            "poolName": {
                "name": "Thread Pool Name",
                "description": "The name of a configured thread pool - if no name is configured the default pool is used.",
                "type": "String",
                "cardinality": "required",
                "default": "default"
            },
            "allowedPoolNames": {
                "name": "Allowed Thread Pools",
                "description": "The names of thread pools that are allowed to be used by jobs. If a job is using a pool not in this list, the default pool is used.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "scheduler.useleaderforsingle": {
                "name": "Force Leader for Single",
                "description": "If a job is to be run on a single instance only, disable distribution and always run on leader.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "metrics.filters": {
                "name": "Metrics Filters",
                "description": "Whether the metrics (sling:commons.scheduler.*) should be grouped by filters. If configured this grouping happens before any thread pool grouping. Filter format: filter1=ParticularJob",
                "type": "String",
                "cardinality": "unlimited"
            },
            "slowThresholdMillis": {
                "name": "Slow Job Threshold (millis)",
                "description": "duration in millis after which a job is considered slow. Slow jobs are detected while measuring oldest running jobs (via a Gauge) and when the job is finished. In the former case a temporary gauge is added with the job name as the suffix. In the latter case a permanent timer is added, also with the job name as the suffix. 0 or a negative value disables this feature.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "org.apache.sling.commons.scheduler.impl.SchedulerHealthCheck",
        "name": "Apache Sling Scheduler Health Check Config",
        "description": "Apache Sling Scheduler Health Check Config",
        "bundleName": "org.apache.sling.commons.scheduler",
        "attributes": {
            "max.quartzJob.duration.acceptable": {
                "name": "Acceptable Duration Millis",
                "description": "Maximum a job should take (in millis) for it to be acceptable. Best to set this equal or higher to org.apache.sling.commons.scheduler.impl.QuartzScheduler.slowThresholdMillis",
                "type": "Long",
                "cardinality": "required",
                "default": 60000
            }
        }
    },
    {
        "id": "org.apache.sling.commons.threads.impl.DefaultThreadPool.factory",
        "name": "Apache Sling Thread Pool Configuration",
        "description": "Configuration for a named thread pool.",
        "bundleName": "org.apache.sling.commons.threads",
        "attributes": {
            "name": {
                "name": "Name",
                "description": "The unique name for this thread pool.",
                "type": "String",
                "cardinality": "required"
            },
            "minPoolSize": {
                "name": "Min Pool Size",
                "description": "The minimum pool size.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "maxPoolSize": {
                "name": "Max Pool Size",
                "description": "The maximum pool size.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5
            },
            "queueSize": {
                "name": "Queue Size",
                "description": "The queue size or -1 for an unlimited queue size.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "maxThreadAge": {
                "name": "Max Thread Age",
                "description": "Milliseconds before a pooled thread is replaced (-1 to disable expiry). Useful to avoid memory leaks by accumulation of ThreadLocals.",
                "type": "Long",
                "cardinality": "required",
                "default": 300000
            },
            "keepAliveTime": {
                "name": "Keep Alive Time",
                "description": "The keep alive time.",
                "type": "Long",
                "cardinality": "required",
                "default": 60000
            },
            "blockPolicy": {
                "name": "Block Policy",
                "description": "The block policy.",
                "type": "String",
                "cardinality": "required",
                "default": "RUN",
                "options": [
                    {
                        "label": "Abort",
                        "value": "ABORT"
                    },
                    {
                        "label": "Discard",
                        "value": "DISCARD"
                    },
                    {
                        "label": "Discard Oldest",
                        "value": "DISCARDOLDEST"
                    },
                    {
                        "label": "Run",
                        "value": "RUN"
                    }
                ]
            },
            "shutdownGraceful": {
                "name": "Shutdown Graceful",
                "description": "Should the pool be shutdown gracefully?",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "daemon": {
                "name": "Daemon Threads",
                "description": "Should the pool create daemon threads?",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "shutdownWaitTime": {
                "name": "Shutdown Wait Time",
                "description": "The shutdown wait time. A value below 1 means no wait time.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "priority": {
                "name": "Priority",
                "description": "The default priority for the threads.",
                "type": "String",
                "cardinality": "required",
                "default": "NORM",
                "options": [
                    {
                        "label": "Norm",
                        "value": "NORM"
                    },
                    {
                        "label": "Min",
                        "value": "MIN"
                    },
                    {
                        "label": "Max",
                        "value": "MAX"
                    }
                ]
            },
            "webconsole.configurationFactory.nameHint": {
                "name": null,
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "{name}"
            }
        }
    },
    {
        "id": "org.apache.sling.datasource.DataSourceFactory",
        "name": "Apache Sling Connection Pooled DataSource",
        "description": "Creates a DataSource services based on configuration provided. For more details on the various properties refer to http://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html#Common_Attributes",
        "bundleName": "org.apache.sling.datasource",
        "attributes": {
            "datasource.name": {
                "name": "Datasource name(*)",
                "description": "Name of this data source (required)",
                "type": "String",
                "cardinality": "required"
            },
            "datasource.svc.prop.name": {
                "name": "DataSource Service Property Name",
                "description": "Name of the service property which would store the DataSource Name whileregistering the DataSource instance as OSGi service",
                "type": "String",
                "cardinality": "required",
                "default": "datasource.name"
            },
            "driverClassName": {
                "name": "JDBC driver class",
                "description": "Java class name of the JDBC driver to use",
                "type": "String",
                "cardinality": "required"
            },
            "url": {
                "name": "JDBC connection URI",
                "description": "URI of the JDBC connection to use e.g. jdbc:mysql://localhost:3306/mysql",
                "type": "String",
                "cardinality": "required"
            },
            "username": {
                "name": "Username",
                "description": "The connection username to be passed to our JDBC driver to establish a connection",
                "type": "String",
                "cardinality": "required"
            },
            "password": {
                "name": "Password",
                "description": "The connection password to be passed to our JDBC driver to establish a connection.",
                "type": "Password",
                "cardinality": "required"
            },
            "defaultAutoCommit": {
                "name": "Auto Commit",
                "description": "The default auto-commit state of connections created by this pool. (If 'default' then the setAutoCommit method will not be called.)",
                "type": "String",
                "cardinality": "required",
                "options": [
                    {
                        "label": "default",
                        "value": "Default"
                    },
                    {
                        "label": "true",
                        "value": "true"
                    },
                    {
                        "label": "false",
                        "value": "false"
                    }
                ]
            },
            "defaultReadOnly": {
                "name": "Readonly",
                "description": "The default read-only state of connections created by this pool.",
                "type": "String",
                "cardinality": "required",
                "options": [
                    {
                        "label": "default",
                        "value": "Default"
                    },
                    {
                        "label": "true",
                        "value": "true"
                    },
                    {
                        "label": "false",
                        "value": "false"
                    }
                ]
            },
            "defaultTransactionIsolation": {
                "name": "Transaction Isolation",
                "description": "The default TransactionIsolation state of connections created by this pool. If 'default', the method will not be called and it defaults to the JDBC driver.",
                "type": "String",
                "cardinality": "required",
                "options": [
                    {
                        "label": "default",
                        "value": "Default"
                    },
                    {
                        "label": "NONE",
                        "value": "NONE"
                    },
                    {
                        "label": "READ_COMMITTED",
                        "value": "READ_COMMITTED"
                    },
                    {
                        "label": "READ_UNCOMMITTED",
                        "value": "READ_UNCOMMITTED"
                    },
                    {
                        "label": "REPEATABLE_READ",
                        "value": "REPEATABLE_READ"
                    },
                    {
                        "label": "SERIALIZABLE",
                        "value": "SERIALIZABLE"
                    }
                ]
            },
            "defaultCatalog": {
                "name": "Catalog Name",
                "description": "The default catalog of connections created by this pool.",
                "type": "String",
                "cardinality": "required"
            },
            "maxActive": {
                "name": "Max Active Connections",
                "description": "The maximum number of active connections that can be allocated from this pool at the same time. The default value is 100",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "maxIdle": {
                "name": "Max Idle Connections",
                "description": "The maximum number of connections that should be kept in the pool at all times. Idle connections are checked periodically (if enabled) and connections that been idle for longer than minEvictableIdleTimeMillis will be released. (also see testWhileIdle)",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "minIdle": {
                "name": "Min Idle Connections",
                "description": "The minimum number of established connections that should be kept in the pool at all times. The connection pool can shrink below this number if validation queries fail. Default value is derived frominitialSize:10 (also see testWhileIdle)",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "initialSize": {
                "name": "Initial Size",
                "description": "The initial number of connections that are created when the pool is started. Default value is 10",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "maxWait": {
                "name": "Max Wait",
                "description": "The maximum number of milliseconds that the pool will wait (when there are no availableconnections) for a connection to be returned before throwing an exception. Default value is 30000 (30 seconds)",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "maxAge": {
                "name": "Max Age",
                "description": "Time in milliseconds to keep this connection.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "testOnBorrow": {
                "name": "Test on Borrow",
                "description": "The indication of whether objects will be validated before being borrowed from the pool.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "testOnReturn": {
                "name": "Test on Return",
                "description": "The indication of whether objects will be validated before being returned to the pool.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "testWhileIdle": {
                "name": "Test while Idle",
                "description": "The indication of whether objects will be validated by the idle object evictor (if any).",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "validationQuery": {
                "name": "Validation Query",
                "description": "The SQL query that will be used to validate connections from this pool before returning them to the caller. If specified, this query does not have to return any data, it just can't throw a SQLException. The default value is null. Example values are SELECT 1(mysql), select 1 from dual(oracle), SELECT 1(MS Sql Server)",
                "type": "String",
                "cardinality": "required"
            },
            "validationQueryTimeout": {
                "name": "Validation Query timeout",
                "description": "The timeout in seconds before a connection validation queries fail. A value less than or equal to zero will disable this feature. The default value is -1.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "timeBetweenEvictionRunsMillis": {
                "name": "Eviction Run Interval",
                "description": "The number of milliseconds to sleep between runs of the idle connectionvalidation/cleaner thread.",
                "type": "Integer",
                "cardinality": "required",
                "default": 5000
            },
            "minEvictableIdleTimeMillis": {
                "name": "Eviction Idle Time",
                "description": "The minimum amount of time an object may sit idle in the pool before it is eligible for eviction.",
                "type": "Integer",
                "cardinality": "required",
                "default": 60000
            },
            "connectionProperties": {
                "name": "Connection Properties",
                "description": "The connection properties that will be sent to our JDBC driver when establishing new connections. Format of the string must be [propertyName=property;]* NOTE - The \"user\" and \"password\" propertieswill be passed explicitly, so they do not need to be included here.",
                "type": "String",
                "cardinality": "required"
            },
            "initSQL": {
                "name": "Init Sql",
                "description": "A custom query to be run when a connection is first created",
                "type": "String",
                "cardinality": "required"
            },
            "jdbcInterceptors": {
                "name": "JDBC Interceptors",
                "description": "A semicolon separated list of classnames of JDBCInterceptor. See http://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html#Configuring_JDBC_interceptors for more details",
                "type": "String",
                "cardinality": "required",
                "default": "StatementCache;SlowQueryReport(threshold=10000);ConnectionState"
            },
            "validationInterval": {
                "name": "Validation Interval",
                "description": "avoid excess validation, only run validation at most at this frequency - time in milliseconds. If a connection is due for validation, but has been validated previously within this interval, it will not be validated again.",
                "type": "Integer",
                "cardinality": "required",
                "default": 30000
            },
            "logValidationErrors": {
                "name": "Log Validation Error",
                "description": "Set this to true to log errors during the validation phase to the log file",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "datasource.svc.properties": {
                "name": "Additional Properties",
                "description": "Properties that are added additionally to the underlying DataSource provider(name=value pairs). Refer to http://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html#Common_Attributes for various property names and details.",
                "type": "String",
                "cardinality": 1024
            }
        }
    },
    {
        "id": "org.apache.sling.datasource.JNDIDataSourceFactory",
        "name": "Apache Sling JNDI DataSource",
        "description": "Registers a DataSource instance with OSGi ServiceRegistry which is looked up from the JNDI",
        "bundleName": "org.apache.sling.datasource",
        "attributes": {
            "datasource.name": {
                "name": "Datasource name(*)",
                "description": "Name of this data source (required)",
                "type": "String",
                "cardinality": "required"
            },
            "datasource.svc.prop.name": {
                "name": "DataSource Service Property Name",
                "description": "Name of the service property which would store the DataSource Name whileregistering the DataSource instance as OSGi service",
                "type": "String",
                "cardinality": "required",
                "default": "datasource.name"
            },
            "datasource.jndi.name": {
                "name": "JNDI Name (*)",
                "description": "JNDI location name used to perform DataSource instance lookup",
                "type": "String",
                "cardinality": "required"
            },
            "jndi.properties": {
                "name": "JNDI Properties",
                "description": "Set the environment for the JNDI InitialContext i.e. properties passed on to InitialContext for performing the JNDI instance lookup. Each row form a map entry where each row format be propertyName=property e.g. java.naming.factory.initial=exampleFactory",
                "type": "String",
                "cardinality": 1024
            }
        }
    },
    {
        "id": "org.apache.sling.discovery.oak.Config",
        "name": "Apache Sling Oak-Based Discovery Service Configuration",
        "description": "The configuration of the Oak based discovery service implementation.",
        "bundleName": "org.apache.sling.discovery.oak",
        "attributes": {
            "connectorPingTimeout": {
                "name": "Connector Ping timeout (seconds)",
                "description": "Configure the timeout (in seconds) after which an announcement sent via a topology connector is considered timed out. Default is 120 seconds.",
                "type": "Long",
                "cardinality": "required",
                "default": 120
            },
            "connectorPingInterval": {
                "name": "Connector Ping interval (seconds)",
                "description": "Configure the interval (in seconds) according to which the topology connector pings are exchanged in the topology. Default is 30 seconds.",
                "type": "Long",
                "cardinality": "required",
                "default": 30
            },
            "discoveryLiteCheckInterval": {
                "name": "Discovery-Lite Check interval (seconds)",
                "description": "Configure the interval (in seconds) with which Oak's discoveryLite descriptor should be checked for changes. Default is 2 seconds. Note that the timeout value is configured within Oak directly.",
                "type": "Long",
                "cardinality": "required",
                "default": 2
            },
            "clusterSyncServiceTimeout": {
                "name": "SyncService timeout (seconds)",
                "description": "Configure the timeout (in seconds) after which the SyncService gives up when it did not see sync tokens of peer instances in the cluster. The SyncService mechanism ensures switching to a new topology is handled synchronously in the cluster and if this timeout is hit, there is a risk of an instance not having noticed a new topology just yet. Default is 120 seconds.",
                "type": "Long",
                "cardinality": "required",
                "default": 120
            },
            "clusterSyncServiceInterval": {
                "name": "SyncService interval (seconds)",
                "description": "Configure the interval (in seconds) at which the SyncService checks for sync tokens or their timeout. Default is 2 seconds.",
                "type": "Long",
                "cardinality": "required",
                "default": 2
            },
            "enableSyncToken": {
                "name": "Enable the SyncService",
                "description": "When enabled, the SyncService that exchanges sync tokens upon every topology change is used. The SyncService ensures that a topology change event is only sent once all instances have indicated they are aware of the ongoing change. Disabling this results in the topology change events being sent out quicker, however without a synchronization guarantee.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "minEventDelay": {
                "name": "Minimal Event Delay (seconds)",
                "description": "Configure a minimal delay (in seconds) between TOPOLOGY_CHANGING and TOPOLOGY_CHANGED. Any further changes happening during this delay are accumulated and combined in the TOPOLOGY_CHANGED after this delay. This helps avoiding event-flooding. Default is 3 seconds. A negative value or zero disables this delay.",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            },
            "socketConnectTimeout": {
                "name": "connector's socket.connect() timeout",
                "description": "Timeout (in seconds!) for the topology connector's socket.connect()",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "soTimeout": {
                "name": "connector's read timeout",
                "description": "Topology connector's socket timeout (SO_TIMEOUT) (in seconds!) which is the timeout for waiting for data",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "topologyConnectorUrls": {
                "name": "Topology Connector URLs",
                "description": "URLs where to join a topology, e.g. http://localhost:4502/libs/sling/topology/connector",
                "type": "String",
                "cardinality": 1024
            },
            "topologyConnectorWhitelist": {
                "name": "Topology Connector Whitelist",
                "description": "List of IPs and/or hostnames which are allowed to connect to the connector URL. There are four variants here: 1. provide a plain hostname. 2. provide an IP address. 3. provide a hostname or IP address with wildcards (* or ?). 4. provide an IP address with a subnet mask, either using the CIDR notation: 1.2.3.4/24 or an IP address, space, subnet mask: 1.2.3.4 255.255.255.0)",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "localhost",
                    "127.0.0.1"
                ]
            },
            "autoStopLocalLoopEnabled": {
                "name": "Auto-Stop Local-Loops",
                "description": "If true, and the discovery.impl detects a local-looping topology connector, the corresponding topology connector will be automatically stopped. This is useful to prevent unnecessary loops with eg pre-configured topology connectors.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "gzipConnectorRequestsEnabled": {
                "name": "gzip requests",
                "description": "If true, the payloads of topology connector requests will be gzipped. This is advisable on certain connector structures, eg in a tree structure, where a topology connector announces a large sub-topology. Note that this only works with the server running discovery.impl 1.0.4 and onwards. Replies are gzipped automatically.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "hmacEnabled": {
                "name": "Enable Hmac message signatures",
                "description": "If true, and the Shared Key is set to the same value on all members of the topology, the messages will be validated using a HMAC of a digest of the body of the message. The hmac and message digest are in the HTTP request and response headers. Both requests and responses are signed.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "enableEncryption": {
                "name": "Enable Message encryption",
                "description": "If Message HMACs are enabled and there is a shared key set, setting this to true will encrypt the body of the message using 128 bit AES encryption. Once encrypted you will not be able debug the messages at the http level.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "sharedKey": {
                "name": "Message shared key.",
                "description": "If message signing and encryption is used, this should be set to the same value on all members of the same topology. If any member of the topology has a different key it will effectively be excluded from the topology even if it attempts to send messages to other members of the topology.",
                "type": "String",
                "cardinality": "required"
            },
            "hmacSharedKeyTTL": {
                "name": "Shared Key TTL",
                "description": "Shared keys for message signatures are derived from the configured shared key. Each derived key has a lifetime (TTL). Once that time has expired a new key is derived and used for hmac signatures. This setting, sets the TTL in ms. Keys that are 2 lifetimes old are ignored. Set according to you level of paranoia, but don't set to less than the greatest possible clock drift between members of the topology. The default is 4 hours. Setting to a ridiculously low value will increase the turnover of keys. Generating a key takes about 2ms. There is no risk of memory consumption with low values, only a risk of the topology falling apart due to incorrectly set clocks.",
                "type": "Long",
                "cardinality": "required",
                "default": 14400000
            },
            "backoffStandbyFactor": {
                "name": "Backoff factor for standby connectors",
                "description": "When a topology connector is in standby mode (ie when it is redundant), the heartbeat frequency is lowered, ie the heartbeatInterval for this connector is increased , at maximum by the backoffStandbyFactor",
                "type": "String",
                "cardinality": "required"
            },
            "backoffStableFactor": {
                "name": "Backoff factor for stable connectors",
                "description": "When a topology connector is stable (ie no changes occuring in the announcements sent), then the heartbeat frequency is lowered, ie the heartbeatInterval for this connector is steadily increased, at maximum by the backoffStableFactor.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.discovery.oak.SynchronizedClocksHealthCheck",
        "name": "Apache Sling Discovery Oak Synchronized Clocks Health Check",
        "description": "",
        "bundleName": "org.apache.sling.discovery.oak",
        "attributes": {
            "hc.name": {
                "name": "Name",
                "description": "Health Check name",
                "type": "String",
                "cardinality": "required",
                "default": "Synchronized Clocks"
            },
            "hc.tags": {
                "name": "Tags",
                "description": "Health Check tags",
                "type": "String",
                "cardinality": "unlimited"
            },
            "hc.mbean.name": {
                "name": "MBean name",
                "description": "Health Check MBean name",
                "type": "String",
                "cardinality": "required",
                "default": "slingDiscoveryOakSynchronizedClocks"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.agent.impl.ForwardDistributionAgentFactory",
        "name": "Apache Sling Distribution Agent - Forward Agents Factory",
        "description": "OSGi configuration factory for forward agents",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Agent name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "title": {
                "name": "Title",
                "description": "The display friendly title of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "details": {
                "name": "Details",
                "description": "The display friendly details of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "enabled": {
                "name": "Enabled",
                "description": "Whether or not to start the distribution agent.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "serviceName": {
                "name": "Service Name",
                "description": "The name of the service used to access the repository. If not set, the calling user ResourceResolver will be used",
                "type": "String",
                "cardinality": "required"
            },
            "log.level": {
                "name": "Log Level",
                "description": "The log level recorded in the transient log accessible via http.",
                "type": "String",
                "cardinality": "required",
                "default": "info",
                "options": [
                    {
                        "label": "debug",
                        "value": "debug"
                    },
                    {
                        "label": "info",
                        "value": "info"
                    },
                    {
                        "label": "warn",
                        "value": "warn"
                    },
                    {
                        "label": "error",
                        "value": "error"
                    }
                ]
            },
            "allowed.roots": {
                "name": "Allowed roots",
                "description": "If set the agent will allow only distribution requests under the specified roots.",
                "type": "String",
                "cardinality": 100
            },
            "queue.processing.enabled": {
                "name": "Queue Processing Enabled",
                "description": "Whether or not the distribution agent should process packages in the queues.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "packageImporter.endpoints": {
                "name": "Importer Endpoints",
                "description": "List of endpoints to which packages are sent (imported). The list can be given as a map in case a queue should be configured for each endpoint, e.g. queueName=http://...",
                "type": "String",
                "cardinality": 100
            },
            "passiveQueues": {
                "name": "Passive queues",
                "description": "List of queues that should be disabled.These queues will gather all the packages until they are removed explicitly.",
                "type": "String",
                "cardinality": 100
            },
            "priorityQueues": {
                "name": "Priority queues",
                "description": "List of priority queues that should used for specific paths.The selector format is  {queuePrefix}[|{mainQueueMatcher}]={pathMatcher}, e.g. french=/content/fr.*",
                "type": "String",
                "cardinality": 100
            },
            "retry.strategy": {
                "name": "Retry Strategy",
                "description": "The strategy to apply after a certain number of failed retries.",
                "type": "String",
                "cardinality": "required",
                "default": "none",
                "options": [
                    {
                        "label": "none",
                        "value": "none"
                    },
                    {
                        "label": "errorQueue",
                        "value": "errorQueue"
                    }
                ]
            },
            "retry.attempts": {
                "name": "Retry attempts",
                "description": "The number of times to retry until the retry strategy is applied.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "requestAuthorizationStrategy.target": {
                "name": "Request Authorization Strategy",
                "description": "The target reference for the DistributionRequestAuthorizationStrategy used to authorize the access to distribution process,e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "transportSecretProvider.target": {
                "name": "Transport Secret Provider",
                "description": "The target reference for the DistributionTransportSecretProvider used to obtain the credentials used for accessing the remote endpoints, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "packageBuilder.target": {
                "name": "Package Builder",
                "description": "The target reference for the DistributionPackageBuilder used to create distribution packages, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "triggers.target": {
                "name": "Triggers",
                "description": "The target reference for DistributionTrigger used to trigger distribution, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=)"
            },
            "queue.provider": {
                "name": "Queue provider",
                "description": "The queue provider implementation.",
                "type": "String",
                "cardinality": "required",
                "default": "jobs",
                "options": [
                    {
                        "label": "Sling Jobs",
                        "value": "jobs"
                    },
                    {
                        "label": "In-memory",
                        "value": "simple"
                    },
                    {
                        "label": "In-file",
                        "value": "simple-checkpoint"
                    }
                ]
            },
            "async.delivery": {
                "name": "Async delivery",
                "description": "Whether or not to use a separate delivery queue to maximize transport throughput when queue has more than 100 items",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "http.conn.timeout": {
                "name": "HTTP connection timeout",
                "description": "The connection timeout for HTTP requests (in seconds).",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.agent.impl.PrivilegeDistributionRequestAuthorizationStrategyFactory",
        "name": "Apache Sling Distribution Request Authorization - Privilege Request Authorization Strategy",
        "description": "OSGi configuration for request based authorization strategy based on privileges",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Strategy name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "Description for name",
                "type": "String",
                "cardinality": "required"
            },
            "jcrPrivilege": {
                "name": "Jcr Privilege",
                "description": "Jcr privilege to check for authorizing distribution requests. The privilege is checked for the calling user session.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.agent.impl.QueueDistributionAgentFactory",
        "name": "Apache Sling Distribution Agent - Queue Agents Factory",
        "description": "OSGi configuration factory for queueing agents",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Agent name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "title": {
                "name": "Title",
                "description": "The display friendly title of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "details": {
                "name": "Details",
                "description": "The display friendly details of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "enabled": {
                "name": "Enabled",
                "description": "Whether or not to start the distribution agent.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "serviceName": {
                "name": "Service Name",
                "description": "The name of the service used to access the repository. If not set, the calling user ResourceResolver will be used",
                "type": "String",
                "cardinality": "required"
            },
            "log.level": {
                "name": "Log Level",
                "description": "The log level recorded in the transient log accessible via http.",
                "type": "String",
                "cardinality": "required",
                "default": "info",
                "options": [
                    {
                        "label": "debug",
                        "value": "debug"
                    },
                    {
                        "label": "info",
                        "value": "info"
                    },
                    {
                        "label": "warn",
                        "value": "warn"
                    },
                    {
                        "label": "error",
                        "value": "error"
                    }
                ]
            },
            "allowed.roots": {
                "name": "Allowed roots",
                "description": "If set the agent will allow only distribution requests under the specified roots.",
                "type": "String",
                "cardinality": 100
            },
            "requestAuthorizationStrategy.target": {
                "name": "Request Authorization Strategy",
                "description": "The target reference for the DistributionRequestAuthorizationStrategy used to authorize the access to distribution process,e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "queueProviderFactory.target": {
                "name": "Queue Provider Factory",
                "description": "The target reference for the DistributionQueueProviderFactory used to build queues,e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=jobQueue)"
            },
            "packageBuilder.target": {
                "name": "Package Builder",
                "description": "The target reference for the DistributionPackageBuilder used to create distribution packages, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "triggers.target": {
                "name": "Triggers",
                "description": "The target reference for DistributionTrigger used to trigger distribution, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=)"
            },
            "priorityQueues": {
                "name": "Priority queues",
                "description": "List of priority queues that should used for specific paths.The selector format is  {queuePrefix}[|{mainQueueMatcher}]={pathMatcher}, e.g. french=/content/fr.*",
                "type": "String",
                "cardinality": 100
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.agent.impl.ReverseDistributionAgentFactory",
        "name": "Apache Sling Distribution Agent - Reverse Agents Factory",
        "description": "OSGi configuration factory for reverse agents",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Agent name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "title": {
                "name": "Title",
                "description": "The display friendly title of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "details": {
                "name": "Details",
                "description": "The display friendly details of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "enabled": {
                "name": "Enabled",
                "description": "Whether or not to start the distribution agent.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "serviceName": {
                "name": "Service Name",
                "description": "The name of the service used to access the repository.",
                "type": "String",
                "cardinality": "required"
            },
            "log.level": {
                "name": "Log Level",
                "description": "The log level recorded in the transient log accessible via http.",
                "type": "String",
                "cardinality": "required",
                "default": "info",
                "options": [
                    {
                        "label": "debug",
                        "value": "debug"
                    },
                    {
                        "label": "info",
                        "value": "info"
                    },
                    {
                        "label": "warn",
                        "value": "warn"
                    },
                    {
                        "label": "error",
                        "value": "error"
                    }
                ]
            },
            "queue.processing.enabled": {
                "name": "Queue Processing Enabled",
                "description": "Whether or not the distribution agent should process packages in the queues.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "packageExporter.endpoints": {
                "name": "Importer Endpoints",
                "description": "List of endpoints from which packages are received (exported).",
                "type": "String",
                "cardinality": 100
            },
            "pull.items": {
                "name": "Pull Items",
                "description": "Number of subsequent pull requests to make.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "http.conn.timeout": {
                "name": "HTTP connection timeout",
                "description": "The connection timeout for HTTP requests (in seconds).",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "requestAuthorizationStrategy.target": {
                "name": "Request Authorization Strategy",
                "description": "The target reference for the DistributionRequestAuthorizationStrategy used to authorize the access to distribution process,e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "transportSecretProvider.target": {
                "name": "Transport Secret Provider",
                "description": "The target reference for the DistributionTransportSecretProvider used to obtain the credentials used for accessing the remote endpoints, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "packageBuilder.target": {
                "name": "Package Builder",
                "description": "The target reference for the DistributionPackageBuilder used to create distribution packages, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "triggers.target": {
                "name": "Triggers",
                "description": "The target reference for DistributionTrigger used to trigger distribution, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=)"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.agent.impl.SimpleDistributionAgentFactory",
        "name": "Apache Sling Distribution Agent - Simple Agents Factory",
        "description": "OSGi configuration factory for agents",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Agent name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "title": {
                "name": "Title",
                "description": "The display friendly title of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "details": {
                "name": "Details",
                "description": "The display friendly details of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "enabled": {
                "name": "Enabled",
                "description": "Whether or not to start the distribution agent.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "serviceName": {
                "name": "Service Name",
                "description": "The name of the service used to access the repository.",
                "type": "String",
                "cardinality": "required"
            },
            "log.level": {
                "name": "Log Level",
                "description": "The log level recorded in the transient log accessible via http.",
                "type": "String",
                "cardinality": "required",
                "default": "info",
                "options": [
                    {
                        "label": "debug",
                        "value": "debug"
                    },
                    {
                        "label": "info",
                        "value": "info"
                    },
                    {
                        "label": "warn",
                        "value": "warn"
                    },
                    {
                        "label": "error",
                        "value": "error"
                    }
                ]
            },
            "queue.processing.enabled": {
                "name": "Queue Processing Enabled",
                "description": "Whether or not the distribution agent should process packages in the queues.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "packageExporter.target": {
                "name": "Exporter",
                "description": "The target reference for the DistributionPackageExporter used to receive (export) the distribution packages,e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required"
            },
            "packageImporter.target": {
                "name": "Importer",
                "description": "The target reference for the DistributionPackageImporter used to send (import) the distribution packages,e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required"
            },
            "requestAuthorizationStrategy.target": {
                "name": "Request Authorization Strategy",
                "description": "The target reference for the DistributionRequestAuthorizationStrategy used to authorize the access to distribution process,e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required"
            },
            "triggers.target": {
                "name": "Triggers",
                "description": "The target reference for DistributionTrigger used to trigger distribution, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=)"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.agent.impl.SyncDistributionAgentFactory",
        "name": "Apache Sling Distribution Agent - Sync Agents Factory",
        "description": "OSGi configuration factory for syncing agents",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Agent name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "title": {
                "name": "Title",
                "description": "The display friendly title of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "details": {
                "name": "Details",
                "description": "The display friendly details of the agent.",
                "type": "String",
                "cardinality": "required"
            },
            "enabled": {
                "name": "Enabled",
                "description": "Whether or not to start the distribution agent.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "serviceName": {
                "name": "Service Name",
                "description": "The name of the service used to access the repository. If not set, the calling user ResourceResolver will be used",
                "type": "String",
                "cardinality": "required"
            },
            "log.level": {
                "name": "Log Level",
                "description": "The log level recorded in the transient log accessible via http.",
                "type": "String",
                "cardinality": "required",
                "default": "info",
                "options": [
                    {
                        "label": "debug",
                        "value": "debug"
                    },
                    {
                        "label": "info",
                        "value": "info"
                    },
                    {
                        "label": "warn",
                        "value": "warn"
                    },
                    {
                        "label": "error",
                        "value": "error"
                    }
                ]
            },
            "queue.processing.enabled": {
                "name": "Queue Processing Enabled",
                "description": "Whether or not the distribution agent should process packages in the queues.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "passiveQueues": {
                "name": "Passive queues",
                "description": "List of queues that should be disabled.These queues will gather all the packages until they are removed explicitly.",
                "type": "String",
                "cardinality": 100
            },
            "packageExporter.endpoints": {
                "name": "Exporter Endpoints",
                "description": "List of endpoints from which packages are received (exported)",
                "type": "String",
                "cardinality": 100
            },
            "packageImporter.endpoints": {
                "name": "Importer Endpoints",
                "description": "List of endpoints to which packages are sent (imported). The list can be given as a map in case a queue should be configured for each endpoint, e.g. queueName=http://...",
                "type": "String",
                "cardinality": 100
            },
            "retry.strategy": {
                "name": "Retry Strategy",
                "description": "The strategy to apply after a certain number of failed retries.",
                "type": "String",
                "cardinality": "required",
                "default": "none",
                "options": [
                    {
                        "label": "none",
                        "value": "none"
                    },
                    {
                        "label": "errorQueue",
                        "value": "errorQueue"
                    }
                ]
            },
            "retry.attempts": {
                "name": "Retry attempts",
                "description": "The number of times to retry until the retry strategy is applied.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "pull.items": {
                "name": "Pull Items",
                "description": "Number of subsequent pull requests to make.",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            },
            "http.conn.timeout": {
                "name": "HTTP connection timeout",
                "description": "The connection timeout for HTTP requests (in seconds).",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "requestAuthorizationStrategy.target": {
                "name": "Request Authorization Strategy",
                "description": "The target reference for the DistributionRequestAuthorizationStrategy used to authorize the access to distribution process,e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "transportSecretProvider.target": {
                "name": "Transport Secret Provider",
                "description": "The target reference for the DistributionTransportSecretProvider used to obtain the credentials used for accessing the remote endpoints, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "packageBuilder.target": {
                "name": "Package Builder",
                "description": "The target reference for the DistributionPackageBuilder used to create distribution packages, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "triggers.target": {
                "name": "Triggers",
                "description": "The target reference for DistributionTrigger used to trigger distribution, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=)"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.monitor.DistributionQueueHealthCheck",
        "name": "Apache Sling Distribution Queue Health Check",
        "description": "Description for org.apache.sling.distribution.monitor.DistributionQueueHealthCheck",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "hc.name": {
                "name": "Name",
                "description": "Health Check name",
                "type": "String",
                "cardinality": "required",
                "default": "SlingDistributionQueueHC"
            },
            "hc.tags": {
                "name": "Tags",
                "description": "Health Check tags",
                "type": "String",
                "cardinality": "unlimited"
            },
            "hc.mbean.name": {
                "name": "MBean name",
                "description": "Health Check MBean name",
                "type": "String",
                "cardinality": "required",
                "default": "slingDistributionQueue"
            },
            "numberOfRetriesAllowed": {
                "name": "Allowed retries",
                "description": "Number of allowed retries",
                "type": "Integer",
                "cardinality": "required",
                "default": 3
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.packaging.impl.exporter.AgentDistributionPackageExporterFactory",
        "name": "Apache Sling Distribution Exporter - Agent Based Package Exporter",
        "description": "Description for org.apache.sling.distribution.packaging.impl.exporter.AgentDistributionPackageExporterFactory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Exporter name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the exporter.",
                "type": "String",
                "cardinality": "required"
            },
            "queue": {
                "name": "Queue",
                "description": "The name of the queue from which the packages should be exported.",
                "type": "String",
                "cardinality": "required"
            },
            "drop.invalid.items": {
                "name": "Drop invalid queue items",
                "description": "Remove invalid items from the queue.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "agent.target": {
                "name": "The target reference for the DistributionAgent that will be used to export packages.",
                "description": "Description for agent.target",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.packaging.impl.exporter.LocalDistributionPackageExporterFactory",
        "name": "Apache Sling Distribution Exporter - Local Package Exporter Factory",
        "description": "Description for org.apache.sling.distribution.packaging.impl.exporter.LocalDistributionPackageExporterFactory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Exporter name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the exporter.",
                "type": "String",
                "cardinality": "required"
            },
            "packageBuilder.target": {
                "name": "Package Builder",
                "description": "The target reference for the DistributionPackageBuilder used to create distribution packages, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.packaging.impl.exporter.RemoteDistributionPackageExporterFactory",
        "name": "Apache Sling Distribution Exporter - Remote Package Exporter Factory",
        "description": "Description for org.apache.sling.distribution.packaging.impl.exporter.RemoteDistributionPackageExporterFactory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Exporter name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the exporter.",
                "type": "String",
                "cardinality": "required"
            },
            "endpoints": {
                "name": "Endpoints",
                "description": "The list of endpoints from which the packages will be exported.",
                "type": "String",
                "cardinality": 100
            },
            "pull.items": {
                "name": "Pull Items",
                "description": "number of subsequent pull requests to make",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "packageBuilder.target": {
                "name": "Package Builder",
                "description": "The target reference for the DistributionPackageBuilder used to create distribution packages, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "transportSecretProvider.target": {
                "name": "Transport Secret Provider",
                "description": "The target reference for the DistributionTransportSecretProvider used to obtain the credentials used for accessing the remote endpoints, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.packaging.impl.importer.LocalDistributionPackageImporterFactory",
        "name": "Apache Sling Distribution Importer - Local Package Importer Factory",
        "description": "Description for org.apache.sling.distribution.packaging.impl.importer.LocalDistributionPackageImporterFactory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Importer name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the importer.",
                "type": "String",
                "cardinality": "required"
            },
            "packageBuilder.target": {
                "name": "Package Builder",
                "description": "The target reference for the DistributionPackageBuilder used to create distribution packages, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.packaging.impl.importer.RemoteDistributionPackageImporterFactory",
        "name": "Apache Sling Distribution Importer - Remote Package Importer Factory",
        "description": "Description for org.apache.sling.distribution.packaging.impl.importer.RemoteDistributionPackageImporterFactory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Importer name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the importer.",
                "type": "String",
                "cardinality": "required"
            },
            "endpoints": {
                "name": "Endpoints",
                "description": "The list of endpoints to which the packages will be imported.",
                "type": "String",
                "cardinality": 100
            },
            "transportSecretProvider.target": {
                "name": "Transport Secret Provider",
                "description": "The target reference for the DistributionTransportSecretProvider used to obtain the credentials used for accessing the remote endpoints, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.packaging.impl.importer.RepositoryDistributionPackageImporterFactory",
        "name": "Apache Sling Distribution Importer - Repository Package Importer Factory",
        "description": "Description for org.apache.sling.distribution.packaging.impl.importer.RepositoryDistributionPackageImporterFactory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Importer name: {name}"
            },
            "name": {
                "name": "Property name",
                "description": "Description for name",
                "type": "String",
                "cardinality": "required"
            },
            "service.name": {
                "name": "Property service.name",
                "description": "Description for service.name",
                "type": "String",
                "cardinality": "required"
            },
            "path": {
                "name": "Property path",
                "description": "Description for path",
                "type": "String",
                "cardinality": "required"
            },
            "privilege.name": {
                "name": "Property privilege.name",
                "description": "Description for privilege.name",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.resources.impl.DistributionConfigurationResourceProviderFactory",
        "name": "Apache Sling Distribution Resources - Configuration Resource Provider Factory",
        "description": "Distribution Configuration Resource Provider Factory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "provider.roots": {
                "name": "Property provider.roots",
                "description": "Description for provider.roots",
                "type": "String",
                "cardinality": "required"
            },
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Resource kind: {kind}"
            },
            "kind": {
                "name": "Property kind",
                "description": "Description for kind",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.resources.impl.DistributionServiceResourceProviderFactory",
        "name": "Apache Sling Distribution Resources - Service Resource Provider Factory",
        "description": "Distribution Service Resource Provider Factory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "provider.roots": {
                "name": "Property provider.roots",
                "description": "Description for provider.roots",
                "type": "String",
                "cardinality": "required"
            },
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Resource kind: {kind}"
            },
            "kind": {
                "name": "Property kind",
                "description": "Description for kind",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.serialization.impl.DistributionPackageBuilderFactory",
        "name": "Apache Sling Distribution Packaging - Package Builder Factory",
        "description": "OSGi configuration for package builders",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Builder name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the package builder.",
                "type": "String",
                "cardinality": "required"
            },
            "type": {
                "name": "type",
                "description": "The persistence type used by this package builder",
                "type": "String",
                "cardinality": "required",
                "default": "resource",
                "options": [
                    {
                        "label": "resource packages",
                        "value": "resource"
                    },
                    {
                        "label": "file packages",
                        "value": "file"
                    },
                    {
                        "label": "in memory packages",
                        "value": "inmemory"
                    }
                ]
            },
            "format.target": {
                "name": "Content Serializer",
                "description": "The target reference for the DistributionSerializationFormat used to (de)serialize packages, e.g. use target=(name=...) to bind to services by name.",
                "type": "String",
                "cardinality": "required",
                "default": "(name=default)"
            },
            "tempFsFolder": {
                "name": "Temp Filesystem Folder",
                "description": "The filesystem folder where the temporary files should be saved.",
                "type": "String",
                "cardinality": "required"
            },
            "fileThreshold": {
                "name": "File threshold",
                "description": "Once the data reaches the configurable size value, buffering to memory switches to file buffering.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "memoryUnit": {
                "name": "The memory unit for the file threshold",
                "description": "The memory unit for the file threshold, Megabytes by default",
                "type": "String",
                "cardinality": "required",
                "default": "MEGA_BYTES",
                "options": [
                    {
                        "label": "Bytes",
                        "value": "BYTES"
                    },
                    {
                        "label": "Kilobytes",
                        "value": "KILO_BYTES"
                    },
                    {
                        "label": "Megabytes",
                        "value": "MEGA_BYTES"
                    },
                    {
                        "label": "Gigabytes",
                        "value": "GIGA_BYTES"
                    }
                ]
            },
            "useOffHeapMemory": {
                "name": "Flag to enable/disable the off-heap memory",
                "description": "Flag to enable/disable the off-heap memory, false by default",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "digestAlgorithm": {
                "name": "The digest algorithm to calculate the package checksum",
                "description": "The digest algorithm to calculate the package checksum, Megabytes by default",
                "type": "String",
                "cardinality": "required",
                "default": "NONE",
                "options": [
                    {
                        "label": "Do not send digest",
                        "value": "NONE"
                    },
                    {
                        "label": "md2",
                        "value": "MD2"
                    },
                    {
                        "label": "md5",
                        "value": "MD5"
                    },
                    {
                        "label": "sha1",
                        "value": "SHA-1"
                    },
                    {
                        "label": "sha256",
                        "value": "SHA-256"
                    },
                    {
                        "label": "sha384",
                        "value": "SHA-384"
                    },
                    {
                        "label": "sha512",
                        "value": "SHA-512"
                    }
                ]
            },
            "monitoringQueueSize": {
                "name": "The number of items for monitoring distribution packages creation/installation",
                "description": "The number of items for monitoring distribution packages creation/installation, 100 by default",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "cleanupDelay": {
                "name": "The delay in seconds between two runs of the cleanup phase for resource persisted packages.",
                "description": "The resource persisted packages are cleaned up periodically (asynchronously) since SLING-6503.The delay between two runs of the cleanup phase can be configured with this setting. 60 seconds by default",
                "type": "Long",
                "cardinality": "required",
                "default": 60
            },
            "package.filters": {
                "name": "Package Node Filters",
                "description": "The package node path filters. Filter format: path|+include|-exclude",
                "type": "String",
                "cardinality": 100
            },
            "property.filters": {
                "name": "Package Property Filters",
                "description": "The package property path filters. Filter format: path|+include|-exclude",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.serialization.impl.vlt.VaultDistributionPackageBuilderFactory",
        "name": "Apache Sling Distribution Packaging - Vault Package Builder Factory",
        "description": "OSGi configuration for vault package builders",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Builder name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the package builder.",
                "type": "String",
                "cardinality": "required"
            },
            "type": {
                "name": "type",
                "description": "The type of this package builder",
                "type": "String",
                "cardinality": "required",
                "default": "jcrvlt",
                "options": [
                    {
                        "label": "jcr packages",
                        "value": "jcrvlt"
                    },
                    {
                        "label": "file packages",
                        "value": "filevlt"
                    },
                    {
                        "label": "in memory packages",
                        "value": "inmemory"
                    }
                ]
            },
            "importMode": {
                "name": "Import Mode",
                "description": "The vlt import mode for created packages.",
                "type": "String",
                "cardinality": "required"
            },
            "aclHandling": {
                "name": "Acl Handling",
                "description": "The vlt acl handling mode for created packages.",
                "type": "String",
                "cardinality": "required"
            },
            "package.roots": {
                "name": "Package Roots",
                "description": "The package roots to be used for created packages. (this is useful for assembling packages with an user that cannot read above the package root)",
                "type": "String",
                "cardinality": "required"
            },
            "package.filters": {
                "name": "Package Node Filters",
                "description": "The package node path filters. Filter format: path|+include|-exclude",
                "type": "String",
                "cardinality": 100
            },
            "property.filters": {
                "name": "Package Property Filters",
                "description": "The package property path filters. Filter format: path|+include|-exclude",
                "type": "String",
                "cardinality": "unlimited"
            },
            "tempFsFolder": {
                "name": "Temp Filesystem Folder",
                "description": "The filesystem folder where the temporary files should be saved.",
                "type": "String",
                "cardinality": "required"
            },
            "useBinaryReferences": {
                "name": "Use Binary References",
                "description": "If activated, it avoids sending binaries in the distribution package.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "autoSaveThreshold": {
                "name": "Autosave threshold",
                "description": "The value after which autosave is triggered for intermediate changes.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "cleanupDelay": {
                "name": "The delay in seconds between two runs of the cleanup phase for resource persisted packages.",
                "description": "The resource persisted packages are cleaned up periodically (asynchronously) since SLING-6503.The delay between two runs of the cleanup phase can be configured with this setting. 60 seconds by default",
                "type": "Long",
                "cardinality": "required",
                "default": 60
            },
            "fileThreshold": {
                "name": "File threshold (in bytes)",
                "description": "Once the data reaches the configurable size value, buffering to memory switches to file buffering.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1
            },
            "MEGA_BYTES": {
                "name": "The memory unit for the file threshold",
                "description": "The memory unit for the file threshold, Megabytes by default",
                "type": "String",
                "cardinality": "required",
                "default": "MEGA_BYTES",
                "options": [
                    {
                        "label": "Bytes",
                        "value": "BYTES"
                    },
                    {
                        "label": "Kilobytes",
                        "value": "KILO_BYTES"
                    },
                    {
                        "label": "Megabytes",
                        "value": "MEGA_BYTES"
                    },
                    {
                        "label": "Gigabytes",
                        "value": "GIGA_BYTES"
                    }
                ]
            },
            "useOffHeapMemory": {
                "name": "Flag to enable/disable the off-heap memory",
                "description": "Flag to enable/disable the off-heap memory, false by default",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "digestAlgorithm": {
                "name": "The digest algorithm to calculate the package checksum",
                "description": "The digest algorithm to calculate the package checksum, Megabytes by default",
                "type": "String",
                "cardinality": "required",
                "default": "NONE",
                "options": [
                    {
                        "label": "Do not send digest",
                        "value": "NONE"
                    },
                    {
                        "label": "md2",
                        "value": "MD2"
                    },
                    {
                        "label": "md5",
                        "value": "MD5"
                    },
                    {
                        "label": "sha1",
                        "value": "SHA-1"
                    },
                    {
                        "label": "sha256",
                        "value": "SHA-256"
                    },
                    {
                        "label": "sha384",
                        "value": "SHA-384"
                    },
                    {
                        "label": "sha512",
                        "value": "SHA-512"
                    }
                ]
            },
            "monitoringQueueSize": {
                "name": "The number of items for monitoring distribution packages creation/installation",
                "description": "The number of items for monitoring distribution packages creation/installation, 100 by default",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "pathsMapping": {
                "name": "Paths mapping",
                "description": "List of paths that require be mapped.The format is {sourcePattern}={destinationPattern}, e.g. /etc/(.*)=/var/$1/some or simply /data=/bak",
                "type": "String",
                "cardinality": 100
            },
            "strictImport": {
                "name": "Install a content package in a strict mode",
                "description": "Flag to mark an error response will be thrown, if a content package will incorrectly installed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.transport.impl.UserCredentialsDistributionTransportSecretProvider",
        "name": "Apache Sling Distribution Transport Credentials - User Credentials based DistributionTransportSecretProvider",
        "description": "Description for org.apache.sling.distribution.transport.impl.UserCredentialsDistributionTransportSecretProvider",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Secret provider name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "Description for name",
                "type": "String",
                "cardinality": "required"
            },
            "username": {
                "name": "User Name",
                "description": "The name of the user used to perform remote actions.",
                "type": "String",
                "cardinality": "required"
            },
            "password": {
                "name": "Password",
                "description": "The clear text password to perform authentication. Warning: storing clear text passwords is not safe.",
                "type": "Password",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.trigger.impl.DistributionEventDistributeDistributionTriggerFactory",
        "name": "Apache Sling Distribution Trigger - Distribution Event Triggers Factory",
        "description": "Description for org.apache.sling.distribution.trigger.impl.DistributionEventDistributeDistributionTriggerFactory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Trigger name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the trigger.",
                "type": "String",
                "cardinality": "required"
            },
            "path": {
                "name": "Path",
                "description": "The path for which the distribution events will be forwarded.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.trigger.impl.JcrEventDistributionTriggerFactory",
        "name": "Apache Sling Distribution Trigger - Jcr Event Triggers Factory",
        "description": "Triggers a distribution request ('ADD', 'DELETE') for the given path (path) whenever the JCR node at the given path is modified (added, resp. removed).",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Trigger name: {name} on path {path}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the trigger.",
                "type": "String",
                "cardinality": "required"
            },
            "path": {
                "name": "Path",
                "description": "The path for which changes are distributed.",
                "type": "String",
                "cardinality": "required"
            },
            "ignoredPathsPatterns": {
                "name": "Ignored Paths Patterns",
                "description": "The paths matching one of these patterns will be ignored.",
                "type": "String",
                "cardinality": 100
            },
            "serviceName": {
                "name": "Service Name",
                "description": "The service used to listen for jcr events",
                "type": "String",
                "cardinality": "required"
            },
            "deep": {
                "name": "Use deep distribution",
                "description": "Distribute entire subtree of the event node path. Default is 'false'.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.trigger.impl.PersistedJcrEventDistributionTriggerFactory",
        "name": "Apache Sling Distribution Trigger - Persisted Jcr Event Triggers Factory",
        "description": "Description for org.apache.sling.distribution.trigger.impl.PersistedJcrEventDistributionTriggerFactory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Trigger name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the trigger.",
                "type": "String",
                "cardinality": "required"
            },
            "path": {
                "name": "Path",
                "description": "The path for which changes are listened and distributed as persisted nugget events.",
                "type": "String",
                "cardinality": "required"
            },
            "serviceName": {
                "name": "Service Name",
                "description": "The service used to listen for jcr events",
                "type": "String",
                "cardinality": "required"
            },
            "nuggetsPath": {
                "name": "Nuggets Path",
                "description": "The location where serialization of jcr events will be stored",
                "type": "String",
                "cardinality": "required",
                "default": "/var/sling/distribution/nuggets"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.trigger.impl.RemoteEventDistributionTriggerFactory",
        "name": "Apache Sling Distribution Trigger - Remote Event Triggers Factory",
        "description": "Description for org.apache.sling.distribution.trigger.impl.RemoteEventDistributionTriggerFactory",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Trigger name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the trigger.",
                "type": "String",
                "cardinality": "required"
            },
            "endpoint": {
                "name": "Endpoint",
                "description": "The endpoint from which the remote requests should be polled.",
                "type": "String",
                "cardinality": "required"
            },
            "transportSecretProvider.target": {
                "name": "Property transportSecretProvider.target",
                "description": "Description for transportSecretProvider.target",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.trigger.impl.ResourceEventDistributionTriggerFactory",
        "name": "Apache Sling Distribution Trigger - Resource Event Triggers Factory",
        "description": "Triggers a distribution request ('ADD', 'DELETE') for the given path (path) whenever the resource at the given path is modified (added, resp. removed).",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Trigger name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the trigger.",
                "type": "String",
                "cardinality": "required"
            },
            "path": {
                "name": "Path",
                "description": "The resource path for which changes are distributed",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.distribution.trigger.impl.ScheduledDistributionTriggerFactory",
        "name": "Apache Sling Distribution Trigger - Scheduled Triggers Factory",
        "description": "Triggers a distribution request of the given type (action) for the given path (path) at a periodical time interval (seconds).",
        "bundleName": "org.apache.sling.distribution.core",
        "attributes": {
            "webconsole.configurationFactory.nameHint": {
                "name": "Property webconsole.configurationFactory.nameHint",
                "description": "Description for webconsole.configurationFactory.nameHint",
                "type": "String",
                "cardinality": "required",
                "default": "Trigger name: {name}"
            },
            "name": {
                "name": "Name",
                "description": "The name of the trigger.",
                "type": "String",
                "cardinality": "required"
            },
            "action": {
                "name": "Distribution Type",
                "description": "The type of the distribution request produced by this trigger in ('ADD', 'DELETE', 'PULL', 'TEST'). Default 'PULL'.",
                "type": "String",
                "cardinality": "required"
            },
            "path": {
                "name": "Distributed Path",
                "description": "The path to be distributed periodically.",
                "type": "String",
                "cardinality": "required"
            },
            "seconds": {
                "name": "Interval in Seconds",
                "description": "The number of seconds between distribution requests. Default 30 seconds.",
                "type": "String",
                "cardinality": "required"
            },
            "serviceName": {
                "name": "Service Name",
                "description": "The name of the service used to trigger the distribution requests.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.engine.impl.auth.SlingAuthenticator",
        "name": "Apache Sling Authentication Service",
        "description": "Extracts user authentication details from the request with the help of authentication handlers registered as separate services. One example of such an authentication handler is the handler HTTP Authorization header contained authentication.",
        "bundleName": "org.apache.sling.auth.core",
        "attributes": {
            "auth.sudo.cookie": {
                "name": "Impersonation Cookie",
                "description": "The name the HTTP Cookie to set with the value of the user which is to be impersonated. This cookie will always be a session cookie.",
                "type": "String",
                "cardinality": "required",
                "default": "sling.sudo"
            },
            "auth.sudo.parameter": {
                "name": "Impersonation Parameter",
                "description": "The name of the request parameter initiating impersonation. Setting this parameter to a user id will result in using an impersonated session (instead of the actually authenticated session) and set a session cookie of the name defined in the Impersonation Cookie setting.",
                "type": "String",
                "cardinality": "required",
                "default": "sudo"
            },
            "auth.annonymous": {
                "name": "Allow Anonymous Access",
                "description": "Whether default access as anonymous when no credentials are present in the request is allowed. The default value is \"true\" to allow access without credentials. When set to \"false\" access to the repository is only allowed if valid credentials are presented. The value of this configuration option is added to list of Authentication Requirements and needs not be explicitly listed. If anonymous access is allowed the entry added is \"-/\". Otherwise anonymous access is denied and \"+/\" is added to the list.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "sling.auth.requirements": {
                "name": "Authentication Requirements",
                "description": "Defines URL space subtrees which require or don't require authentication. For any request the best matching path configured applies and defines whether authentication is actually required for the request or not. Each entry in this list can be an absolute path (such as /content) or and absolute URI (such as http://thehost/content). Optionally each entry may be prefixed by a plus (+) or minus (-) sign indicating that authentication is required (plus) or not required (minus). Example entries are \"/content\" or \"+/content\" to require authentication at and below \"/content\" and \"-/system/sling/login\" to not require authentication at and below \"/system/sling/login\". By default this list is empty. This list is extended at run time with additional entries: One entry is added for the \"Allow Anonymous Access\" configuration. Other entries are added for any services setting the \"sling.auth.requirements\" service registration property.",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            },
            "sling.auth.anonymous.user": {
                "name": "Anonymous User Name",
                "description": "Defines which user name to assume for anonymous requests, that is requests not providing credentials supported by any of the registered authentication handlers. If this property is missing or empty, the default is assumed which depends on the resource provider(s). Otherwise anonymous requests are handled with this user name. If the configured user name does not exist or is not allowed to access the resource data, anonymous requests may still be blocked. If anonymous access is not allowed, this property is ignored.",
                "type": "String",
                "cardinality": "required"
            },
            "sling.auth.anonymous.password": {
                "name": "Anonymous User Password",
                "description": "Password for the anonymous user defined in the Anonymous User Name field. This property is only used if a non-empty anonymous user name is configured. If this property is not defined but a password is required, an empty password would be assumed.",
                "type": "Password",
                "cardinality": "required"
            },
            "auth.http": {
                "name": "HTTP Basic Authentication",
                "description": "Level of support for HTTP Basic Authentication. Such support can be provided in three levels: (1) no support at all, that is disabled, (2) preemptive support, that is HTTP Basic Authentication is supported if the authentication header is set in the request, (3) full support. The default is preemptive support unless Anonymous Access is not allowed. In this case HTTP Basic Authentication is always enabled to ensure clients can authenticate at least with basic authentication.",
                "type": "String",
                "cardinality": "required",
                "default": "preemptive",
                "options": [
                    {
                        "label": "Enabled",
                        "value": "enabled"
                    },
                    {
                        "label": "Enabled (Preemptive)",
                        "value": "preemptive"
                    },
                    {
                        "label": "Disabled",
                        "value": "disabled"
                    }
                ]
            },
            "auth.http.realm": {
                "name": "Realm",
                "description": "HTTP BASIC authentication realm. This property is only used if the HTTP Basic Authentication support is not disabled. The default value is \"Sling (Development)\".",
                "type": "String",
                "cardinality": "required",
                "default": "Sling (Development)"
            },
            "auth.uri.suffix": {
                "name": "Authentication URI Suffices",
                "description": "A list of request URI suffixes intended to be handled by Authentication Handlers. Any request whose request URI ends with any one of the listed suffices is intended to be handled by an Authentication Handler causing the request to either be rejected or the client being redirected to another location and thus the request not being further processed after the authentication phase. The default is just \"/j_security_check\" which is the suffix defined by the Servlet API specification used for FORM based authentication.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/j_security_check"
                ]
            }
        }
    },
    {
        "id": "org.apache.sling.engine.impl.debug.RequestProgressTrackerLogFilter",
        "name": "Apache Sling Request Progress Tracker Log Filter",
        "description": "Filter that enables logging of request progress tracker information. To enable the log output, the category org.apache.sling.engine.impl.debug.RequestProgressTrackerLogFilter needs to be logged on debug level.",
        "bundleName": "org.apache.sling.engine",
        "attributes": {
            "extensions": {
                "name": "Extension filter",
                "description": "Only requests with the listed extensions will be logged. If no extensions are configured all requests are logged. Empty by default.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "minDurationMs": {
                "name": "Min duration (ms)",
                "description": "Only requests that take at least the minimum duration in milliseconds are logged. Default is 0.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "maxDurationMs": {
                "name": "Max duration (ms)",
                "description": "Only requests that take at most the maximum duration in milliseconds are logged. Default is 2147483647, i.e. Integer.MAX_VALUE.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2147483647
            },
            "compactLogFormat": {
                "name": "Compact Log Format",
                "description": "Whether or not to use the compact format. In compact one log entry is logged per request, detailing the request progress tracker information in individual lines, like stack-traces. This keeps log files smaller and makes them more readable. In the older (non-compact) format, one log entry is printed per line, thus potentially containing more noise. Default is false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.engine.impl.log.RequestLogger",
        "name": "Apache Sling Request Logger",
        "description": "Configures the main loggers of the request logger, namely the request log and the access log. Further loggers may be configured by creating configurations for the Request Logger Service.",
        "bundleName": "org.apache.sling.engine",
        "attributes": {
            "request.log.output": {
                "name": "Request Log Name",
                "description": "Name of the destination for the request log. The request log logs the entry and exit of each request into and out of the system together with the entry time, exit time, time to process the request, a request counter as well as the final status code and response content type. In terms of Request Logger Service formats, request entry is logged with the format \"%t [%R] -> %m %U%q %H\" and request exit is logged with the format \"%{end}t [%R] <- %s %{Content-Type}o %Dms\".",
                "type": "String",
                "cardinality": "required",
                "default": "logs/request.log"
            },
            "request.log.outputtype": {
                "name": "Request Log Type",
                "description": "Type of request log destination. Select \"Logger Name\" to write the access log to an SLF4J logger, \"File Name\" to write the access log to a file (relative paths resolved against sling.home) or \"RequestLog Service\" to use a named OSGi service registered with the service interface \"org.apache.sling.engine.RequestLog\" and a service property \"requestlog.name\" equal to the Logger Name setting.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0,
                "options": [
                    {
                        "label": "Logger Name",
                        "value": "0"
                    },
                    {
                        "label": "File Name",
                        "value": "1"
                    },
                    {
                        "label": "RequestLog Service",
                        "value": "2"
                    }
                ]
            },
            "request.log.enabled": {
                "name": "Enable Request Log",
                "description": "Whether to enable Request logging or not.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "access.log.output": {
                "name": "Access Log Name",
                "description": "Name of the destination for the request log. The access log writes an entry for each request as the request terminates using the NCSA extended/combined log format. In terms of Request Logger Service formats the access log is written with the format \"%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"\".",
                "type": "String",
                "cardinality": "required",
                "default": "logs/access.log"
            },
            "access.log.outputtype": {
                "name": "Access Log Type",
                "description": "Type of access log destination. Select \"Logger Name\" to write the access log to an SLF4J logger, \"File Name\" to write the access log to a file (relative paths resolved against sling.home) or \"RequestLog Service\" to use a named OSGi service registered with the service interface \"org.apache.sling.engine.RequestLog\" and a service property \"requestlog.name\" equal to the Logger Name setting.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0,
                "options": [
                    {
                        "label": "Logger Name",
                        "value": "0"
                    },
                    {
                        "label": "File Name",
                        "value": "1"
                    },
                    {
                        "label": "RequestLog Service",
                        "value": "2"
                    }
                ]
            },
            "access.log.enabled": {
                "name": "Enable Access Log",
                "description": "Whether to enable Access logging or not.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.engine.impl.log.RequestLoggerService",
        "name": "Apache Sling Customizable Request Data Logger",
        "description": "This configuration creates customizable loggers for request content. Each configuration results in a logger writing the requested data. Deleting an existing configuration removes the respective logger.",
        "bundleName": "org.apache.sling.engine",
        "attributes": {
            "request.log.service.format": {
                "name": "Log Format",
                "description": "The format for log entries. This is a format string as defined at http://sling.apache.org/site/client-request-logging.html#ClientRequestLogging-LogFormatSpecification.",
                "type": "String",
                "cardinality": "required"
            },
            "request.log.service.output": {
                "name": "Logger Name",
                "description": "Name of the destination for the log output. Depending on the output type this is a file name (absolute or relative), a SLF4J logger name or the name under which a RequestLog service has been registered.",
                "type": "String",
                "cardinality": "required",
                "default": "reuest.log"
            },
            "request.log.service.outputtype": {
                "name": "Logger Type",
                "description": "Type of log destination. Select \"Logger Name\" to write the access log to an SLF4J logger, \"File Name\" to write the access log to a file (relative paths resolved against sling.home) or \"RequestLog Service\" to use a named OSGi service registered with the service interface \"org.apache.sling.engine.RequestLog\" and a service property \"requestlog.name\" equal to the Logger Name setting.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0,
                "options": [
                    {
                        "label": "Logger Name",
                        "value": "0"
                    },
                    {
                        "label": "File Name",
                        "value": "1"
                    },
                    {
                        "label": "RequestLog Service",
                        "value": "2"
                    }
                ]
            },
            "request.log.service.onentry": {
                "name": "Request Entry",
                "description": "Check if the logger is called on request entry. Otherwise leave unchecked and the logger will be called on request exit (aka termination), which is the default for access logger type loggers.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.engine.impl.SlingMainServlet",
        "name": "Apache Sling Main Servlet",
        "description": "Main processor of the Sling framework controlling all aspects of processing requests inside of Sling, namely authentication, resource resolution, servlet/script resolution and execution of servlets and scripts.",
        "bundleName": "org.apache.sling.engine",
        "attributes": {
            "sling.max.calls": {
                "name": "Number of Calls per Request",
                "description": "Defines the maximum number of Servlet and Script calls while processing a single client request. This number should be high enough to not limit request processing artificially. On the other hand it should not be too high to allow the mechanism to limit the resources required to process a request in case of errors. The default value is 1000.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "sling.max.inclusions": {
                "name": "Recursion Depth",
                "description": "The maximum number of recursive Servlet and Script calls while processing a single client request. This number should not be too high, otherwise StackOverflowErrors may occurr in case of erroneous scripts and servlets. The default value is 50. ",
                "type": "Integer",
                "cardinality": "required",
                "default": 50
            },
            "sling.trace.allow": {
                "name": "Allow the HTTP TRACE method",
                "description": "If set to true, the HTTP TRACE method will be enabled. By default the HTTP TRACE methods is disabled as it can be used in Cross Site Scripting attacks on HTTP servers.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "sling.max.record.requests": {
                "name": "Number of Requests to Record",
                "description": "Defines the number of requests that internally recorded for display on the \"Recent Requests\" Web Console page. If this value is less than or equal to zero, no requests are internally kept. The default value is 20. ",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "sling.store.pattern.requests": {
                "name": "Recorded Request Path Patterns",
                "description": "One or more regular expressions which limit the requests which are stored by the \"Recent Requests\" Web Console page.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "sling.serverinfo": {
                "name": "Server Info",
                "description": "The server info returned by Sling. If this field is left empty, Sling generates a default into.",
                "type": "String",
                "cardinality": "required"
            },
            "sling.additional.response.headers": {
                "name": "Additional response headers",
                "description": "Provides mappings for additional response headers Each entry is of the form 'bundleId [ \":\" responseHeaderName ] \"=\" responseHeaderValue'",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "X-Content-Type-Options=nosniff",
                    "X-Frame-Options=SAMEORIGIN"
                ]
            },
            "servlet.name": {
                "name": "Servlet Name",
                "description": "Optional name for the Sling main servlet registered by this component",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.engine.parameters",
        "name": "Apache Sling Request Parameter Handling",
        "description": "Configures Sling's request parameter handling.",
        "bundleName": "org.apache.sling.engine",
        "attributes": {
            "sling.default.parameter.encoding": {
                "name": "Default Parameter Encoding",
                "description": "The default request parameter encoding used to decode request parameters into strings. If this property is not set the default encoding is 'ISO-8859-1' as mandated by the Servlet API spec. This default encoding is used if the '_charset_' request parameter is not set to another (supported) character encoding. Applications being sure to always use the same encoding (e.g. UTF-8) can set this default here and may omit the '_charset_' request parameter",
                "type": "String",
                "cardinality": "required",
                "default": "ISO-8859-1"
            },
            "sling.default.max.parameters": {
                "name": "Maximum POST Parameters",
                "description": "The maximum number of parameters supported. To prevent a DOS-style attack with an overrunning number of parameters the number of parameters supported can be limited. This includes all of the query string as well as application/x-www-form-urlencoded and multipart/form-data parameters. The default value is 10000.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10000
            },
            "file.location": {
                "name": "Temporary File Location",
                "description": "The temporary directory where uploaded files are written to disk. The default is null, which means the directory given by the 'java.io.tmpdir' system property.",
                "type": "String",
                "cardinality": "required"
            },
            "file.threshold": {
                "name": "File Save Threshold",
                "description": "The size threshold after which the file will be written to disk. The default is 256KB.",
                "type": "Integer",
                "cardinality": "required",
                "default": 256000
            },
            "file.max": {
                "name": "Maximum File Size",
                "description": "The maximum size allowed for uploaded files. The default is -1, which means unlimited.",
                "type": "Long",
                "cardinality": "required",
                "default": -1
            },
            "request.max": {
                "name": "Maximum Request Size",
                "description": "The maximum size allowed for multipart/form-data requests. The default is -1, which means unlimited.",
                "type": "Long",
                "cardinality": "required",
                "default": -1
            },
            "sling.default.parameter.checkForAdditionalContainerParameters": {
                "name": "Check Additional Parameters",
                "description": "Enable this if you want to include request parameters added through the container, e.g through a valve.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.event.impl.EventingThreadPool",
        "name": "Apache Sling Job Thread Pool",
        "description": "This is the thread pool used by the Apache Sling job handling. The threads from this pool are merely used for executing jobs. By limiting this pool, it is possible to limit the maximum number of parallel processed jobs - regardless of the queue configuration.",
        "bundleName": "org.apache.sling.event",
        "attributes": {
            "minPoolSize": {
                "name": "Pool Size",
                "description": "The size of the thread pool. This pool is used to execute jobs and therefore limits the maximum number of jobs executed in parallel.",
                "type": "Integer",
                "cardinality": "required",
                "default": 35
            }
        }
    },
    {
        "id": "org.apache.sling.event.impl.jobs.DefaultJobManager",
        "name": "Apache Sling Job Default Queue",
        "description": "The configuration of the default job queue.",
        "bundleName": "org.apache.sling.event",
        "attributes": {
            "queue.priority": {
                "name": "Priority",
                "description": "The priority for the threads used by this queue. Default is norm.",
                "type": "String",
                "cardinality": "required",
                "default": "NORM",
                "options": [
                    {
                        "label": "Norm",
                        "value": "NORM"
                    },
                    {
                        "label": "Min",
                        "value": "MIN"
                    },
                    {
                        "label": "Max",
                        "value": "MAX"
                    }
                ]
            },
            "queue.retries": {
                "name": "Maximum Retries",
                "description": "The maximum number of times a failed job slated for retries is actually retried. If a job has been retried this number of times and still fails, it is not rescheduled and assumed to have failed. The default value is 10.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "queue.retrydelay": {
                "name": "Retry Delay",
                "description": "The number of milliseconds to sleep between two consecutive retries of a job which failed and was set to be retried. The default value is 2 seconds. This value is only relevant if there is a single failed job in the queue. If there are multiple failed jobs, each job is retried in turn without an intervening delay.",
                "type": "Long",
                "cardinality": "required",
                "default": 2000
            },
            "queue.maxparallel": {
                "name": "Maximum Parallel Jobs",
                "description": "The maximum number of parallel jobs started for this queue. A value of -1 is substituted with the number of available processors.",
                "type": "Integer",
                "cardinality": "required",
                "default": 15
            }
        }
    },
    {
        "id": "org.apache.sling.event.impl.jobs.jcr.PersistenceHandler",
        "name": "Apache Sling Job Manager",
        "description": "This is the central service of the job handling.",
        "bundleName": "org.apache.sling.event",
        "attributes": {
            "job.consumermanager.disableDistribution": {
                "name": "Disable Distribution",
                "description": "If the distribution is disabled, all jobs will be processed on the leader only! Please use this switch with care.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "startup.delay": {
                "name": "Startup Delay",
                "description": "Specify amount in seconds that job manager waits on startup before starting with job handling. This can be used to allow enough time to restart a cluster before jobs are eventually reassigned.",
                "type": "Long",
                "cardinality": "required",
                "default": 30
            },
            "cleanup.period": {
                "name": "Clean-up removed jobs period",
                "description": "Specify the periodic interval in minutes (default is 48h - use 0 to disable) after which removed jobs (ERROR or DROPPED) should be cleaned from the repository.",
                "type": "Integer",
                "cardinality": "required",
                "default": 2880
            }
        }
    },
    {
        "id": "org.apache.sling.event.impl.jobs.JobConsumerManager",
        "name": "Apache Sling Job Consumer Manager",
        "description": "The consumer manager controls the job consumer (= processors). It can be used to temporarily disable job processing on the current instance. Other instances in a cluster are not affected.",
        "bundleName": "org.apache.sling.event",
        "attributes": {
            "org.apache.sling.installer.configuration.persist": {
                "name": "Distribute config",
                "description": "If this is disabled, the configuration is not persisted on save in the cluster and is only used on the current instance. This option should always be disabled!",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "job.consumermanager.whitelist": {
                "name": "Topic Whitelist",
                "description": "This is a list of topics which currently should be processed by this instance. Leaving it empty, all job consumers are disabled. Putting a '*' as one entry, enables all job consumers. Adding separate topics enables job consumers for exactly this topic.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "*"
                ]
            },
            "job.consumermanager.blacklist": {
                "name": "Topic Blacklist",
                "description": "This is a list of topics which currently shouldn't be processed by this instance. Leaving it empty, all job consumers are enabled. Putting a '*' as one entry, disables all job consumers. Adding separate topics disables job consumers for exactly this topic.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.event.jobs.QueueConfiguration",
        "name": "Apache Sling Job Queue Configuration",
        "description": "The configuration of a job processing queue.",
        "bundleName": "org.apache.sling.event",
        "attributes": {
            "queue.name": {
                "name": "Name",
                "description": "The name of the queue. If matching is used the token {0} can be used to substitute the real value.",
                "type": "String",
                "cardinality": "required"
            },
            "queue.topics": {
                "name": "Topics",
                "description": "This value is required and lists the topics processed by this queue. The value is a list of strings. If a string ends with a dot, all topics in exactly this package match. If the string ends with a star, all topics in this package and all subpackages match. If the string neither ends with a dot nor with a star, this is assumed to define an exact topic.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "queue.type": {
                "name": "Type",
                "description": "The queue type.",
                "type": "String",
                "cardinality": "required",
                "default": "UNORDERED",
                "options": [
                    {
                        "label": "Parallel",
                        "value": "UNORDERED"
                    },
                    {
                        "label": "Ordered",
                        "value": "ORDERED"
                    },
                    {
                        "label": "Topic Round Robin",
                        "value": "TOPIC_ROUND_ROBIN"
                    }
                ]
            },
            "queue.priority": {
                "name": "Priority",
                "description": "The priority for the threads used by this queue. Default is norm.",
                "type": "String",
                "cardinality": "required",
                "default": "NORM",
                "options": [
                    {
                        "label": "Norm",
                        "value": "NORM"
                    },
                    {
                        "label": "Min",
                        "value": "MIN"
                    },
                    {
                        "label": "Max",
                        "value": "MAX"
                    }
                ]
            },
            "queue.retries": {
                "name": "Maximum Retries",
                "description": "The maximum number of times a failed job slated for retries is actually retried. If a job has been retried this number of times and still fails, it is not rescheduled and assumed to have failed. The default value is 10.",
                "type": "Integer",
                "cardinality": "required",
                "default": 10
            },
            "queue.retrydelay": {
                "name": "Retry Delay",
                "description": "The number of milliseconds to sleep between two consecutive retries of a job which failed and was set to be retried. The default value is 2 seconds. This value is only relevant if there is a single failed job in the queue. If there are multiple failed jobs, each job is retried in turn without an intervening delay.",
                "type": "Long",
                "cardinality": "required",
                "default": 2000
            },
            "queue.maxparallel": {
                "name": "Maximum Parallel Jobs",
                "description": "The maximum number of parallel jobs started for this queue. A value of -1 is substituted with the number of available processors. Positive integer values specify number of processors to use.  Can be greater than number of processors. A decimal number between 0.0 and 1.0 is treated as a fraction of available processors. For example 0.5 means half of the available processors. For ordered queue types this value is ignored (always enforced to be 1).",
                "type": "Double",
                "cardinality": "required",
                "default": 15
            },
            "queue.keepJobs": {
                "name": "Keep History",
                "description": "If this option is enabled, successful finished jobs are kept to provide a complete history.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "queue.preferRunOnCreationInstance": {
                "name": "Prefer Creation Instance",
                "description": "If this option is enabled, the jobs are tried to be run on the instance where the job was created.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "queue.threadPoolSize": {
                "name": "Thread Pool Size",
                "description": "Optional configuration value for a thread pool to be used by this queue. If this is value has a positive number of threads configuration, this queue uses an own thread pool with the configured number of threads.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "service.ranking": {
                "name": "Ranking",
                "description": "Integer value defining the ranking of this queue configuration. If more than one queue matches a job topic, the one with the highest ranking is used.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "webconsole.configurationFactory.nameHint": {
                "name": "Webconsole configuration factory name hint",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "Queue: {queue.name}"
            }
        }
    },
    {
        "id": "org.apache.sling.extensions.webconsolesecurityprovider.internal.SlingWebConsoleSecurityProvider",
        "name": "Apache Sling Web Console Security Provider",
        "description": "Configuration for the security provider used to verfiy user credentials and grant access to the Apache Felix Web Console based on registered JCR Repository users.",
        "bundleName": "org.apache.sling.extensions.webconsolesecurityprovider",
        "attributes": {
            "users": {
                "name": "User Names",
                "description": "Names of users granted full access to the Apache Felix Web Console. By default this lists the \"admin\" user. A maximum of 20 users may be configured. Administrators are encouraged to create a group whose members are to be granted access to Web Console instead of allowing access to individual users.",
                "type": "String",
                "cardinality": 20,
                "default": [
                    "admin"
                ]
            },
            "groups": {
                "name": "Group Names",
                "description": "Names of groups whose members are granted full access to the Apache Felix Web Console. The default lists no groups. Administrators are encouraged to create a group whose members are to be granted access to the Web Console. A maximum of 20 groups may be configured. Using groups to control access requires a Jackrabbit based repository.",
                "type": "String",
                "cardinality": 20
            }
        }
    },
    {
        "id": "org.apache.sling.featureflags.Feature",
        "name": "Apache Sling Configured Feature",
        "description": "Allows for the definition of statically configured features which are defined and enabled through OSGi configuration",
        "bundleName": "org.apache.sling.featureflags",
        "attributes": {
            "name": {
                "name": "Name",
                "description": "Short name of this feature. This name is used to refer to this feature when checking for it to be enabled or not. This property is required and defaults to a name derived from the feature's class name and object identity. It is strongly recommended to define a useful and unique for the feature",
                "type": "String",
                "cardinality": "required"
            },
            "description": {
                "name": "Description",
                "description": "Description for the feature. The intent is to descibe the behaviour of the application if this feature would be enabled. It is recommended to define this property. The default value is the value of the name property.",
                "type": "String",
                "cardinality": "required"
            },
            "enabled": {
                "name": "Enabled",
                "description": "Boolean flag indicating whether the feature is enabled or not by this configuration",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.featureflags.impl.ConfiguredFeature",
        "name": "Apache Sling Configured Feature",
        "description": "Allows for the definition of statically configured features which are defined and enabled through OSGi configuration",
        "bundleName": "org.apache.sling.featureflags",
        "attributes": {
            "name": {
                "name": "Name",
                "description": "Short name of this feature. This name is used to refer to this feature when checking for it to be enabled or not. This property is required and defaults to a name derived from the feature's class name and object identity. It is strongly recommended to define a useful and unique for the feature",
                "type": "String",
                "cardinality": "required"
            },
            "description": {
                "name": "Description",
                "description": "Description for the feature. The intent is to descibe the behaviour of the application if this feature would be enabled. It is recommended to define this property. The default value is the value of the name property.",
                "type": "String",
                "cardinality": "required"
            },
            "enabled": {
                "name": "Enabled",
                "description": "Boolean flag indicating whether the feature is enabled or not by this configuration",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.graphql.core.cache.SimpleGraphQLCacheProvider",
        "name": "Apache Sling GraphQL Simple Cache Provider",
        "description": "The Apache Sling GraphQL Simple Cache Provider provides an in-memory size bound cache for persisted GraphQL queries.",
        "bundleName": "com.adobe.aem.com.adobe.aem.graphql-java-wrapper",
        "attributes": {
            "cacheSize": {
                "name": "Capacity",
                "description": "The number of persisted queries to cache. If the cache size is set to a number greater than 0, then this parameter will have priority over maxMemory.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "maxMemory": {
                "name": "Max Values in Bytes",
                "description": "The maximum amount of memory the values stored in the cache can use.",
                "type": "Long",
                "cardinality": "required",
                "default": 10485760
            }
        }
    },
    {
        "id": "org.apache.sling.graphql.core.engine.DefaultQueryExecutor",
        "name": "Apache Sling Default GraphQL Query Executor",
        "description": "",
        "bundleName": "com.adobe.aem.com.adobe.aem.graphql-java-wrapper",
        "attributes": {
            "schemaCacheSize": {
                "name": "Schema Cache Size",
                "description": "The number of compiled GraphQL schemas to cache. Since a schema normally doesn't change often, they can be cached and reused, rather than parsed by the engine all the time. The cache is a LRU and will store up to this number of schemas.",
                "type": "Integer",
                "cardinality": "required",
                "default": 128
            }
        }
    },
    {
        "id": "org.apache.sling.graphql.core.GraphQLServlet",
        "name": "Apache Sling GraphQL Servlet",
        "description": "Servlet that implements GraphQL endpoints",
        "bundleName": "com.adobe.aem.com.adobe.aem.graphql-java-wrapper",
        "attributes": {
            "sling.servlet.selectors": {
                "name": "Selectors",
                "description": "Standard Sling servlet property",
                "type": "String",
                "cardinality": "unlimited"
            },
            "sling.servlet.resourceTypes": {
                "name": "Resource Types",
                "description": "Standard Sling servlet property",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "sling/servlet/default"
                ]
            },
            "sling.servlet.methods": {
                "name": "Methods",
                "description": "Standard Sling servlet property",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "GET"
                ]
            },
            "sling.servlet.extensions": {
                "name": "Extensions",
                "description": "Standard Sling servlet property",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "gql"
                ]
            },
            "persistedQueries.suffix": {
                "name": "Persisted queries suffix",
                "description": "The request suffix under which the HTTP API for persisted queries should be made available.",
                "type": "String",
                "cardinality": "required",
                "default": "/persisted"
            },
            "cache.control.max.age": {
                "name": "Persisted Queries Cache-Control max-age",
                "description": "The maximum amount of time a persisted query resource is considered fresh (in seconds). A negative value will be interpreted as 0.",
                "type": "Integer",
                "cardinality": "required",
                "default": 60
            }
        }
    },
    {
        "id": "org.apache.sling.graphql.core.scripting.GraphQLScriptEngineFactory",
        "name": "Apache Sling Scripting GraphQL ScriptEngineFactory",
        "description": "Scripting engine for GraphQL queries",
        "bundleName": "com.adobe.aem.com.adobe.aem.graphql-java-wrapper",
        "attributes": {
            "extensions": {
                "name": "extensions",
                "description": "extensions",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "gql"
                ]
            },
            "mimeTypes": {
                "name": "mime types",
                "description": "mime types",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "application/graphql"
                ]
            },
            "names": {
                "name": "names",
                "description": "names",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "GraphQL",
                    "graphql"
                ]
            }
        }
    },
    {
        "id": "org.apache.sling.hapi.impl.HApiUtilImpl",
        "name": "Apache Sling Hypermedia API tools",
        "description": "",
        "bundleName": "org.apache.sling.hapi",
        "attributes": {
            "org.apache.sling.hapi.tools.resourcetype": {
                "name": "HApi Resource Type",
                "description": "The resource used for hapi types",
                "type": "String",
                "cardinality": "required",
                "default": "sling/hapi/components/type"
            },
            "org.apache.sling.hapi.tools.collectionresourcetype": {
                "name": "HApi Collection Resource Type",
                "description": "The resource used for hapi type collections",
                "type": "String",
                "cardinality": "required",
                "default": "sling/hapi/components/typescollection"
            },
            "org.apache.sling.hapi.tools.searchpaths": {
                "name": "HApi Types Search Paths",
                "description": "The path under which children resources can be identified as hapi types by their FQDN value in addition to the type path",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/libs/sling/hapi/types"
                ]
            },
            "org.apache.sling.hapi.tools.externalurl": {
                "name": "External server URL",
                "description": "The external URL of the instance. This will prefix hapi absolute URLs",
                "type": "String",
                "cardinality": "required",
                "default": "http://localhost:8080"
            },
            "org.apache.sling.hapi.tools.enabled": {
                "name": "Enabled",
                "description": "Whether hapi is enabled or completely disabled (no output rendered in components)",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.hc.core.impl.CompositeHealthCheck",
        "name": "Apache Sling Composite Health Check",
        "description": "Executes a set of health checks, selected by tags.",
        "bundleName": "org.apache.sling.hc.core",
        "attributes": {
            "hc.name": {
                "name": "Name",
                "description": "Name of this health check.",
                "type": "String",
                "cardinality": "required"
            },
            "hc.tags": {
                "name": "Tags",
                "description": "List of tags for this health check, used to select subsets of health checks for execution e.g. by a composite health check.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "hc.mbean.name": {
                "name": "MBean Name",
                "description": "Name of the MBean to create for this health check. If empty, no MBean is registered.",
                "type": "String",
                "cardinality": "required"
            },
            "filter.tags": {
                "name": "Filter Tags",
                "description": "Tags used to select which health checks the composite health check executes.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "filter.combineTagsWithOr": {
                "name": "Combine Tags With Or",
                "description": "Tags used to select which health checks the composite health check executes.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.hc.core.impl.executor.HealthCheckExecutorImpl",
        "name": "Apache Sling Health Check Executor",
        "description": "Runs health checks for a given list of tags in parallel.",
        "bundleName": "org.apache.sling.hc.core",
        "attributes": {
            "timeoutInMs": {
                "name": "Timeout",
                "description": "Timeout in ms until a check is marked as timed out",
                "type": "Long",
                "cardinality": "required",
                "default": 2000
            },
            "longRunningFutureThresholdForCriticalMs": {
                "name": "Timeout threshold for CRITICAL",
                "description": "Threshold in ms until a check is marked as 'exceedingly' timed out and will marked CRITICAL instead of WARN only",
                "type": "Long",
                "cardinality": "required",
                "default": 300000
            },
            "resultCacheTtlInMs": {
                "name": "Results Cache TTL in Ms",
                "description": "Result Cache time to live - results will be cached for the given time",
                "type": "Long",
                "cardinality": "required",
                "default": 2000
            }
        }
    },
    {
        "id": "org.apache.sling.hc.core.impl.JmxAttributeHealthCheck",
        "name": "Apache Sling JMX Attribute Health Check",
        "description": "Checks the value of a single JMX attribute.",
        "bundleName": "org.apache.sling.hc.core",
        "attributes": {
            "hc.name": {
                "name": "Name",
                "description": "Name of this health check.",
                "type": "String",
                "cardinality": "required"
            },
            "hc.tags": {
                "name": "Tags",
                "description": "List of tags for this health check, used to select subsets of health checks for execution e.g. by a composite health check.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "hc.mbean.name": {
                "name": "MBean Name",
                "description": "Name of the MBean to create for this health check. If empty, no MBean is registered.",
                "type": "String",
                "cardinality": "required"
            },
            "mbean.name": {
                "name": "Check MBean Name",
                "description": "The name of the MBean to check by this health check.",
                "type": "String",
                "cardinality": "required"
            },
            "attribute.name": {
                "name": "Check Attribute Name",
                "description": "The name of the MBean attribute to check by this health check.",
                "type": "String",
                "cardinality": "required"
            },
            "attribute.value.constraint": {
                "name": "Check Attribute Constraint",
                "description": "Constraint on the MBean attribute value.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.hc.core.impl.ScriptableHealthCheck",
        "name": "Apache Sling Scriptable Health Check",
        "description": "Uses scripted expressions to verify multiple JMX attributes or other values.",
        "bundleName": "org.apache.sling.hc.core",
        "attributes": {
            "hc.name": {
                "name": "Name",
                "description": "Name of this health check.",
                "type": "String",
                "cardinality": "required"
            },
            "hc.tags": {
                "name": "Tags",
                "description": "List of tags for this health check, used to select subsets of health checks for execution e.g. by a composite health check.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "hc.mbean.name": {
                "name": "MBean Name",
                "description": "Name of the MBean to create for this health check. If empty, no MBean is registered.",
                "type": "String",
                "cardinality": "required"
            },
            "expression": {
                "name": "Expression",
                "description": "The value of this expression must be \"true\" for this check to be successful.",
                "type": "String",
                "cardinality": "required"
            },
            "language.extension": {
                "name": "Language Extension",
                "description": "File extension of the language to use to evaluate the expression, for example \"ecma\" or \"groovy\", asssuming the corresponding script engine is available. By default \"ecma\" is used.",
                "type": "String",
                "cardinality": "required",
                "default": "ecma"
            }
        }
    },
    {
        "id": "org.apache.sling.hc.core.impl.servlet.HealthCheckExecutorServlet",
        "name": "Apache Sling Health Check Executor Servlet",
        "description": "Serializes health check results into html or json format",
        "bundleName": "org.apache.sling.hc.core",
        "attributes": {
            "servletPath": {
                "name": "Path",
                "description": "Servlet path (defaults to /system/health in order to not be accessible via Apache/Internet)",
                "type": "String",
                "cardinality": "required",
                "default": "/system/health"
            },
            "disabled": {
                "name": "Disabled",
                "description": "Allows to disable the servlet if required for security reasons",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "cors.accessControlAllowOrigin": {
                "name": "CORS Access-Control-Allow-Origin",
                "description": "Sets the Access-Control-Allow-Origin CORS header. If blank no header is sent.",
                "type": "String",
                "cardinality": "required",
                "default": "*"
            }
        }
    },
    {
        "id": "org.apache.sling.hc.core.impl.servlet.ResultTxtVerboseSerializer",
        "name": "Apache Sling Health Check Verbose Text Serializer",
        "description": "Serializes health check results to a verbose text format",
        "bundleName": "org.apache.sling.hc.core",
        "attributes": {
            "totalWidth": {
                "name": "Total Width",
                "description": "Total width of all columns in verbose txt rendering (in characters)",
                "type": "Integer",
                "cardinality": "required",
                "default": 140
            },
            "colWidthName": {
                "name": "Name Column Width",
                "description": "Column width of health check name (in characters)",
                "type": "Integer",
                "cardinality": "required",
                "default": 30
            },
            "colWidthResult": {
                "name": "Result Column Width",
                "description": "Column width of health check result (in characters)",
                "type": "Integer",
                "cardinality": "required",
                "default": 9
            },
            "colWidthTiming": {
                "name": "Timing Column Width",
                "description": "Column width of health check timing (in characters)",
                "type": "Integer",
                "cardinality": "required",
                "default": 22
            }
        }
    },
    {
        "id": "org.apache.sling.i18n.impl.JcrResourceBundleProvider",
        "name": "Apache Sling I18N Resource Bundle Provider",
        "description": "ResourceBundleProvider service which loads the messages from the repository.",
        "bundleName": "org.apache.sling.i18n",
        "attributes": {
            "locale.default": {
                "name": "Default Locale",
                "description": "The default locale to assume if none can be resolved otherwise. This value must be in the form acceptable to the java.util.Locale class.",
                "type": "String",
                "cardinality": "required",
                "default": "en"
            },
            "preload.bundles": {
                "name": "Preload Bundles",
                "description": "Whether or not to eagerly load the resource bundles on bundle start or a cache invalidation.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "invalidation.delay": {
                "name": "Invalidation Delay",
                "description": "In case of dictionary change events the cached resource bundle becomes invalid after the given delay (in ms). ",
                "type": "Long",
                "cardinality": "required",
                "default": 5000
            }
        }
    },
    {
        "id": "org.apache.sling.installer.provider.jcr.impl.JcrInstaller",
        "name": "Apache Sling JCR Installer",
        "description": "Installs OSGi bundles and configurations found in the JCR Repository. ",
        "bundleName": "org.apache.sling.installer.provider.jcr",
        "attributes": {
            "handler.schemes": {
                "name": "Schemes",
                "description": "For these schemes this installer writes back configurations.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "jcrinstall"
                ]
            },
            "sling.jcrinstall.folder.name.regexp": {
                "name": "Installation folders name regexp",
                "description": "JCRInstall looks in repository folders having a name that match this regular expression (under the root paths, which are defined by the ResourceResolver search path) for resources to install. Folders having names that match this expression, followed by dotted run mode selectors (like \"install.author.production\") are also included.   ",
                "type": "String",
                "cardinality": "required",
                "default": ".*/(install|config)$"
            },
            "sling.jcrinstall.folder.max.depth": {
                "name": "Max hierarchy depth of install folders",
                "description": "Folders that are nested deeper than this value under the repository root are ignored",
                "type": "Integer",
                "cardinality": "required",
                "default": 4
            },
            "sling.jcrinstall.search.path": {
                "name": "Search Path",
                "description": "List of paths under which jcrinstall looks for installable resources. Combined with the installations folders name regexp to select folders for scanning. Each path is followed by a colon and the priority of resources found under that path, resources with higher values override resources with lower values which represent the same OSGi entity (configuration, bundle, etc). ",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/libs:100",
                    "/apps:200"
                ]
            },
            "sling.jcrinstall.new.config.path": {
                "name": "New Config Path",
                "description": "New configurations are stored at this location. If this path is relative, the resource resolver search path with highest priority is prepended. Otherwise this path is used as is.",
                "type": "String",
                "cardinality": "required",
                "default": "sling/install"
            },
            "sling.jcrinstall.signal.path": {
                "name": "Signal Node Path",
                "description": "Path of the node in repository whose children would be watched for determining if the watch folder scanning has to be performed or not. If any child node is found at this path then scanning would be paused.",
                "type": "String",
                "cardinality": "required",
                "default": "/system/sling/installer/jcr/pauseInstallation"
            },
            "sling.jcrinstall.enable.writeback": {
                "name": "Enable Write Back",
                "description": "Enable writing back of changes done through other tools like writing back configurations changed in the web console etc.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.base.internal.LoginAdminWhitelist",
        "name": "Apache Sling Login Admin Whitelist",
        "description": "Defines which bundles can use SlingRepository.loginAdministrative()",
        "bundleName": "org.apache.sling.jcr.base",
        "attributes": {
            "whitelist.bypass": {
                "name": "Bypass the whitelist",
                "description": "Allow all bundles to use loginAdministrative(). Should ONLY be used for backwards compatibility reasons and if you are aware of the related security risks.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "whitelist.bundles.regexp": {
                "name": "Whitelist regexp",
                "description": "Regular expression for bundle symbolic names for which loginAdministrative() is allowed. NOT recommended for production use, but useful for testing with generated bundles.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.base.internal.LoginAdminWhitelist.fragment",
        "name": "Apache Sling Login Admin Whitelist Configuration Fragment",
        "description": "Whitelist configuration fragments contribute a list of whitelisted bundle symbolic names to the Login Admin Whitelist. This allows for modularisation of the whitelist.",
        "bundleName": "org.apache.sling.jcr.base",
        "attributes": {
            "whitelist.name": {
                "name": "Name",
                "description": "Optional name to disambiguate configurations.",
                "type": "String",
                "cardinality": "required",
                "default": "[unnamed]"
            },
            "whitelist.bundles": {
                "name": "Whitelisted BSNs",
                "description": "A list of bundle symbolic names allowed to use loginAdministrative().",
                "type": "String",
                "cardinality": "unlimited"
            },
            "webconsole.configurationFactory.nameHint": {
                "name": "Webconsole configuration factory name hint",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "{whitelist.name}: [{whitelist.bundles}]"
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet",
        "name": "Apache Sling DavEx Servlet",
        "description": "The DavEx Servlet allows direct access to the complete Repository. It is directly accessible in its own URL space and requests to this servlet do not pass by the Sling Main Servlet and request processing.",
        "bundleName": "org.apache.sling.jcr.davex",
        "attributes": {
            "alias": {
                "name": "Root Path",
                "description": "The root path at which the DavEx Servlet is accessible. The default value is \"/server\".",
                "type": "String",
                "cardinality": "required",
                "default": "/server"
            },
            "dav.create-absolute-uri": {
                "name": "Use absolute URIs",
                "description": "When set to true, create absolute URIs in WebDAV responses. Otherwise, use absolute paths. (See RFC 4918, Section 8.3)",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "dav.protectedhandlers": {
                "name": "dav.protectedhandlers.name",
                "description": "dav.protectedhandlers.description",
                "type": "String",
                "cardinality": "required",
                "default": "org.apache.jackrabbit.server.remoting.davex.AclRemoveHandler"
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.jackrabbit.server.JndiRegistrationSupport",
        "name": "Apache Sling JCR Repository JNDI Registrar",
        "description": "The JNDI Registrar listens for embedded repositories to be registered as services and registers them in the JNDI context under the name specified in the \"name\" service property.",
        "bundleName": "org.apache.sling.jcr.registration",
        "attributes": {
            "java.naming.factory.initial": {
                "name": "Initial Context Factory",
                "description": "The fully qualified class name of the factory class that will create an initial context.",
                "type": "String",
                "cardinality": "required",
                "default": "org.apache.jackrabbit.core.jndi.provider.DummyInitialContextFactory"
            },
            "java.naming.provider.url": {
                "name": "Provider URL",
                "description": "An URL string for the service provider (e.g. ldap://somehost:389)",
                "type": "String",
                "cardinality": "required",
                "default": "http://sling.apache.org"
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.jackrabbit.server.RmiRegistrationSupport",
        "name": "Apache Sling JCR Repository RMI Registrar",
        "description": "The RMI Registrar listens for embedded repositories  to be registered as services and registers them in an RMI registry under the  name specified in the \"name\" service property.",
        "bundleName": "org.apache.sling.jcr.registration",
        "attributes": {
            "port": {
                "name": "Port Number",
                "description": "Port number of the RMI registry to use. The RMI Registrar first tries to create a private RMI registry at this port. If this fails, an existing registry is tried to connect at this port on local host. If this number is negative, the RMI egistrar is disabled. If this number is higher than 65535, an error message is logged and the RMI Registrar is also  disabled. If this number is zero, the system default RMI Registry port 1099 is used.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1099
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.repoinit.impl.RepositoryInitializer",
        "name": "Apache Sling Repository Initializer",
        "description": "Initializes the JCR content repository using repoinit statements",
        "bundleName": "org.apache.sling.jcr.repoinit",
        "attributes": {
            "references": {
                "name": "Repoinit references",
                "description": "References to the source text that provides repoinit statements. format is either model@repoinit:<provisioning model URL> or raw:<raw URL>",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.repoinit.RepositoryInitializer",
        "name": "Apache Sling Repository Initializer Factory",
        "description": "Initializes the JCR content repository using repoinit statements.",
        "bundleName": "org.apache.sling.jcr.repoinit",
        "attributes": {
            "references": {
                "name": "References",
                "description": "References to the source text that provides repoinit statements. format is a raw URL.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "scripts": {
                "name": "Scripts",
                "description": "Contents of a repo init script.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.resource.internal.JcrResourceResolverFactoryImpl",
        "name": "Apache Sling Resource Resolver Factory",
        "description": "Configures the Resource Resolver for request URL and resource path rewriting.",
        "bundleName": "org.apache.sling.resourceresolver",
        "attributes": {
            "resource.resolver.searchpath": {
                "name": "Resource Search Path",
                "description": "The list of absolute path prefixes applied to find resources whose path is just specified with a relative path. The default value is [ \"/apps\", \"/libs\" ]. If an empty path is specified a single entry path of [ \"/\" ] is assumed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/apps",
                    "/libs"
                ],
                "hint": "path"
            },
            "resource.resolver.manglenamespaces": {
                "name": "Namespace Mangling",
                "description": "Defines whether namespace prefixes of resource names inside the path (e.g. \"jcr:\" in \"/home/path/jcr:content\") are mangled or not. Mangling means that any namespace prefix contained in the path is replaced as per the generic substitution pattern \"/([^:]+):/_$1_/\" when calling the \"map\" method of the resource resolver. Likewise the \"resolve\" methods will unmangle such namespace prefixes according to the substituation pattern \"/_([^_]+)_/$1:/\". This feature is provided since there may be systems out there in the wild which cannot cope with URLs containing colons, even though they are perfectly valid characters in the path part of URI references with a scheme. The default value of this property if no configuration is provided is \"true\".",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "resource.resolver.allowDirect": {
                "name": "Allow Direct Mapping",
                "description": "Whether to add a direct URL mapping to the front of the mapping list.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "resource.resolver.required.providers": {
                "name": "Required Providers (Deprecated)",
                "description": "A resource resolver factory is only available (registered) if all resource providers mentioned in this configuration are available. Each entry is either a service PID or a filter expression.  Invalid filters are ignored.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "resource.resolver.required.providernames": {
                "name": "Required Providers ",
                "description": "A resource resolver factory is only available (registered) if all resource providers mentioned in this configuration are available. Each entry is refers to the name of a registered provider.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "JCR"
                ]
            },
            "resource.resolver.virtual": {
                "name": "Virtual URLs",
                "description": "List of virtual URLs and there mappings to real URLs. Format is <externalURL>:<internalURL>. Mappings are applied on the complete request URL only.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/:/"
                ]
            },
            "resource.resolver.mapping": {
                "name": "URL Mappings",
                "description": "List of mappings to apply to paths. Incoming mappings are applied to request paths to map to resource paths, outgoing mappings are applied to map resource paths to paths used on subsequent requests. Form is <internalPathPrefix><op><externalPathPrefix> where <op> is \">\" for incoming mappings, \"<\" for outgoing mappings and \":\" for mappings applied in both directions. Mappings are applied in configuration order by comparing and replacing URL prefixes. Note: The use of \"-\" as the <op> value indicating a mapping in both directions is deprecated.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/:/",
                    "/content/:/",
                    "/system/docroot/:/"
                ]
            },
            "resource.resolver.map.location": {
                "name": "Mapping Location",
                "description": "The path to the root of the configuration to setup and configure the ResourceResolver mapping. The default value is /etc/map.",
                "type": "String",
                "cardinality": "required",
                "default": "/etc/map",
                "hint": "path"
            },
            "resource.resolver.map.observation": {
                "name": "Mapping Observation",
                "description": "The paths where vanity paths or aliases can be found. These paths are used to listen for resource events.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/"
                ]
            },
            "resource.resolver.default.vanity.redirect.status": {
                "name": "Default Vanity Path Redirect Status",
                "description": "The default status code used when a sling:vanityPath is configured to redirect and does not have a specific status code associated with it (via a sling:redirectStatus property)",
                "type": "Integer",
                "cardinality": "required",
                "default": 302
            },
            "resource.resolver.enable.vanitypath": {
                "name": "Enable Vanity Paths",
                "description": "This flag controls whether all resources with a sling:vanityPath property are processed and added to the mappoing table.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "resource.resolver.vanitypath.maxEntries": {
                "name": "Maximum number of cached vanity path entries",
                "description": "The maximum number of cached vanity path entries. Default is -1 (no limit)",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            },
            "resource.resolver.vanitypath.maxEntries.startup": {
                "name": "Limit the maximum number of cached vanity path entries only at startup",
                "description": "Limit the maximum number of cached vanity path entries only at startup. Default is true",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "resource.resolver.vanitypath.bloomfilter.maxBytes": {
                "name": "Maximum number of vanity bloom filter bytes",
                "description": "The maximum number of vanity bloom filter bytes. Changing this value is subject to vanity bloom filter rebuild",
                "type": "Integer",
                "cardinality": "required",
                "default": 1024000
            },
            "resource.resolver.optimize.alias.resolution": {
                "name": "Optimize alias resolution",
                "description": "This flag controls whether to optimize the alias resolution by creating an internal cache of aliases. This might have an impact on the startup time and on the alias update time if the number of aliases is huge (over 10000).",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "resource.resolver.allowed.alias.locations": {
                "name": "Allowed Optimized Alias Locations",
                "description": "This setting can contain a list of path prefixes, e.g. /libs/, /content/. If such a list is configured, for alias optimization, only paths from resources starting with this prefix are considered. If the list is empty, all paths are used.)",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            },
            "resource.resolver.vanitypath.whitelist": {
                "name": "Allowed Vanity Path Location",
                "description": "This setting can contain a list of path prefixes, e.g. /libs/, /content/. If such a list is configured, only vanity paths from resources starting with this prefix  are considered. If the list is empty, all vanity paths are used.",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            },
            "resource.resolver.vanitypath.blacklist": {
                "name": "Denied Vanity Path Location",
                "description": "This setting can contain a list of path prefixes, e.g. /misc/. If such a list is configured,vanity paths from resources starting with this prefix  are not considered. If the list is empty, all vanity paths are used.",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            },
            "resource.resolver.vanity.precedence": {
                "name": "Vanity Path Precedence",
                "description": "This flag controls whether vanity paths will have precedence over existing /etc/map mapping",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "resource.resolver.providerhandling.paranoid": {
                "name": "Paranoid Provider Handling",
                "description": "If this flag is enabled, an unregistration of a resource provider (not factory), is causing the resource resolver factory to restart, potentially cleaning up for memory leaks caused by objects hold from that resource provider.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "resource.resolver.log.closing": {
                "name": "Log resource resolver closing",
                "description": "When enabled CRUD operations with a closed resource resolver will log a stack trace with the point where the used resolver was closed. It's advisable to not enable this feature on production systems.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "resource.resolver.log.unclosed": {
                "name": "Log unclosed resource resolvers",
                "description": "When enabled unclosed resource resolvers will be logged. Not closing a resource resolver is a bug in the code using the resolver and should be fixed.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.resource.internal.JcrSystemUserValidator",
        "name": "Apache Sling JCR System User Validator",
        "description": "Enforces the usage of JCR system users for all user mappings being used in the 'Sling Service User Mapper Service'",
        "bundleName": "org.apache.sling.jcr.resource",
        "attributes": {
            "allow.only.system.user": {
                "name": "Allow only JCR System Users",
                "description": "If set to true, only user IDs bound to JCR system users are allowed in the user mappings of the 'Sling Service User Mapper Service'. Otherwise all users are allowed!",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.resourcesecurity.impl.ResourceAccessGateFactory",
        "name": "Apache Sling JCR Resource Access Gate",
        "description": "This access gate can be used to handle the access to resources not backed by a JCR repository by providing ACLs in the reposiory",
        "bundleName": "org.apache.sling.jcr.resourcesecurity",
        "attributes": {
            "path": {
                "name": "Path",
                "description": "The path is a regular expression for which resources the service should be called",
                "type": "String",
                "cardinality": "required"
            },
            "checkpath.prefix": {
                "name": "Deep Check Prefix",
                "description": "If this value is configured with a prefix and the resource path starts with this prefix, the prefix is removed from the path and the remaining part is appended  to the JCR path to check. For example if /foo/a/b/c is required, this prefix is  configured with /foo and the JCR node to check is /check, the permissions at  /check/a/b/c are checked.",
                "type": "String",
                "cardinality": "required"
            },
            "jcrPath": {
                "name": "JCR Node",
                "description": "This node is checked for permissions to the resources.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.webdav.impl.handler.DefaultHandlerService",
        "name": "Apache Sling Default Handler Service",
        "description": "The Apache Sling Default Handler Service wraps a org.apache.jackrabbit.server.io.DefaultHandler instance in order to run it as a service.",
        "bundleName": "org.apache.sling.jcr.webdav",
        "attributes": {
            "service.ranking": {
                "name": "service.ranking.name",
                "description": "service.ranking.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            },
            "type.collections": {
                "name": "Collection Primary Type",
                "description": "The JCR Primary Node Type to assign to nodes created to reflect WebDAV collections. The default value is sling:Folder. You may name any primary node type here, provided it allows the creation of nodes of this type and the defined Non-Collection Primary Type below it.",
                "type": "String",
                "cardinality": "required",
                "default": "sling:Folder"
            },
            "type.noncollections": {
                "name": "Non-Collection Primary Type",
                "description": "The JCR Primary Node Type to assign to nodes created to reflect WebDAV non-collection resources. The default value is nt:file. You may name any primary node type here, provided the node type is allowed to be created below nodes of the type defined for the Collection Primary Type and that a child node with the name \"jcr:content\" may be created below the non-collection resource whose type is defined by the Content Primary Type.",
                "type": "String",
                "cardinality": "required",
                "default": "nt:file"
            },
            "type.content": {
                "name": "Content Primary Type",
                "description": "The JCR Primary Node Type to assign to the jcr:content child node of a WebDAV non-collection resource. The default value is nt:resource. You may name any primary node type here, provided the node type is allowed to be created as the jcr:content child node of the node type defined by the Non-Collection Primary Type. In addition the node type must allow at least the following properties: jcr:data (binary), jcr:lastModified (date), and jcr:mimeType (string).",
                "type": "String",
                "cardinality": "required",
                "default": "nt:resource"
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.webdav.impl.handler.DirListingExportHandlerService",
        "name": "Apache Sling Directory Listing Exporter Service",
        "description": "The Sling Directory Listing Exporter Service wraps a org.apache.jackrabbit.server.io.DirListingExportHandler instance in order to run it as a service.",
        "bundleName": "org.apache.sling.jcr.webdav",
        "attributes": {
            "service.ranking": {
                "name": "service.ranking.name",
                "description": "service.ranking.description",
                "type": "Integer",
                "cardinality": "required",
                "default": 100
            }
        }
    },
    {
        "id": "org.apache.sling.jcr.webdav.impl.servlets.SimpleWebDavServlet",
        "name": "Apache Sling Simple WebDAV Servlet",
        "description": "The Simple WebDAV Servlet allows direct access to the complete Repository. It is directly accessible in its own URL space and requests to this servlet do not pass by the Sling Main Servlet and request processing.",
        "bundleName": "org.apache.sling.jcr.webdav",
        "attributes": {
            "dav.root": {
                "name": "Root Path",
                "description": "The root path at which the Simple WebDAV Servlet is accessible. The default value is \"/dav\". Access to the repository is provided in two ways. You may connect your WebDAV client directly to the root of the Sling web application to access the workspace of Sling directly. The other way is required if you want to connect your WebDAV client to any other workspace besides the Sling workspace. In this case you connect your WebDAV client to another a path comprised of this root path plus the name of the workspace. For example to connect to the some_other workspace, you might connect to http://slinghost/dav/some_other. ",
                "type": "String",
                "cardinality": "required",
                "default": "/dav"
            },
            "dav.create-absolute-uri": {
                "name": "Use absolute URIs",
                "description": "When set to true, create absolute URIs in WebDAV responses. Otherwise, use absolute paths. (See RFC 4918, Section 8.3)",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "dav.realm": {
                "name": "Authentication Realm",
                "description": "The name of the HTTP Basic Authentication Realm presented to the client to ask for authentication credentials to access the repository.",
                "type": "String",
                "cardinality": "required",
                "default": "Sling WebDAV"
            },
            "collection.types": {
                "name": "Non Collection Node Types",
                "description": "The JCR Node Types considered being non-collection resources by WebDAV. Any node replying true to Node.isNodeType() for one of the listed types is considered a non-collection resource. Otherwise the respective node is considered a collection resource.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "nt:file",
                    "nt:resource"
                ]
            },
            "filter.prefixes": {
                "name": "Filter Prefixes",
                "description": "A list of namespace prefixes indicating JCR items filtered from being reported as collection members or properties. The default list includes jcr and rep (Jackrabbit internal namespace prefix) items. Do not modify this setting unless you know exactly what you are doing.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "rep",
                    "jcr"
                ]
            },
            "filter.types": {
                "name": "Filter Node Types",
                "description": "Nodetype names to be used to filter child nodes. A child node can be filtered if the declaring nodetype of its definition is one of the nodetype names specified in the nodetypes Element. E.g. defining rep:root as filtered nodetype whould result in jcr:system being hidden but no other child node of the root node, since those are defined by the nodetype nt:unstructered. The default is empty. Do not modify this setting unless you know exactly what you are doing.",
                "type": "String",
                "cardinality": "required"
            },
            "filter.uris": {
                "name": "Filter URIs",
                "description": "A list of namespace URIs indicating JCR items filtered from being reported as collection members or properties. The default list is empty. Do not modify this setting unless you know exactly what you are doing.",
                "type": "String",
                "cardinality": "required"
            },
            "type.collections": {
                "name": "Collection Primary Type",
                "description": "The JCR Primary Node Type to assign to nodes created to reflect WebDAV collections. The default value is sling:Folder. You may name any primary node type here, provided it allows the creation of nodes of this type and the defined Non-Collection Primary Type below it.",
                "type": "String",
                "cardinality": "required",
                "default": "sling:Folder"
            },
            "type.noncollections": {
                "name": "Non-Collection Primary Type",
                "description": "The JCR Primary Node Type to assign to nodes created to reflect WebDAV non-collection resources. The default value is nt:file. You may name any primary node type here, provided the node type is allowed to be created below nodes of the type defined for the Collection Primary Type and that a child node with the name \"jcr:content\" may be created below the non-collection resource whose type is defined by the Content Primary Type.",
                "type": "String",
                "cardinality": "required",
                "default": "nt:file"
            },
            "type.content": {
                "name": "Content Primary Type",
                "description": "The JCR Primary Node Type to assign to the jcr:content child node of a WebDAV non-collection resource. The default value is nt:resource. You may name any primary node type here, provided the node type is allowed to be created as the jcr:content child node of the node type defined by the Non-Collection Primary Type. In addition the node type must allow at least the following properties: jcr:data (binary), jcr:lastModified (date), and jcr:mimeType (string).",
                "type": "String",
                "cardinality": "required",
                "default": "nt:resource"
            }
        }
    },
    {
        "id": "org.apache.sling.jmx.provider.impl.JMXResourceProvider",
        "name": "Apache Sling JMX Resource Provider",
        "description": "This provider mounts JMX mbeans into the resource tree.",
        "bundleName": "org.apache.sling.jmx.provider",
        "attributes": {
            "provider.roots": {
                "name": "Root",
                "description": "The mount point of the JMX beans",
                "type": "String",
                "cardinality": "required",
                "default": "/system/sling/monitoring/mbeans"
            }
        }
    },
    {
        "id": "org.apache.sling.models.impl.ModelAdapterFactory",
        "name": "Apache Sling Model Adapter Factory",
        "description": "",
        "bundleName": "org.apache.sling.models.impl",
        "attributes": {
            "max.recursion.depth": {
                "name": "Maximum Recursion Depth",
                "description": "Maximum depth adaptation will be attempted.",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "cleanup.job.period": {
                "name": "Cleanup Job Period",
                "description": "Period in seconds at which OSGi service references from ThreadLocals will be cleaned up.",
                "type": "Long",
                "cardinality": "required",
                "default": 30
            }
        }
    },
    {
        "id": "org.apache.sling.models.jacksonexporter.impl.ResourceModuleProvider",
        "name": "Apache Sling Models Jackson Exporter - Resource object support",
        "description": "Provider of a Jackson Module which enables support for proper serialization of Resource objects",
        "bundleName": "org.apache.sling.models.jacksonexporter",
        "attributes": {
            "max.recursion.levels": {
                "name": "Maximum Recursion Levels",
                "description": "Maximum number of levels of child resources which will be exported for each resource. Specify -1 for infinite.",
                "type": "Integer",
                "cardinality": "required",
                "default": -1
            }
        }
    },
    {
        "id": "org.apache.sling.resource.inventory.impl.ResourceInventoryPrinterFactory",
        "name": "Apache Sling Resource Inventory Printer Factory",
        "description": "This factory can be used to add resource trees to the inventory of the system.",
        "bundleName": "org.apache.sling.resource.inventory",
        "attributes": {
            "felix.inventory.printer.name": {
                "name": "Name",
                "description": "The unique name of the inventory printer.",
                "type": "String",
                "cardinality": "required"
            },
            "felix.inventory.printer.title": {
                "name": "Title",
                "description": "The title of the inventory printer.",
                "type": "String",
                "cardinality": "required"
            },
            "path": {
                "name": "Path",
                "description": "The resource path to include.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.resourcemerger.impl.MergedResourceProviderFactory",
        "name": "Apache Sling Resource Merger - Search Path Based Resource Picker",
        "description": "This resource picker delivers merged resources based on the search paths (overlay approach).",
        "bundleName": "org.apache.sling.resourcemerger",
        "attributes": {
            "merge.root": {
                "name": "Root",
                "description": "The mount point of merged resources",
                "type": "String",
                "cardinality": "required",
                "default": "/mnt/overlay",
                "hint": "path"
            },
            "merge.readOnly": {
                "name": "Read Only",
                "description": "Specifies if the resources are read-only or can be modified.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.resourcemerger.picker.overriding",
        "name": "Apache Sling Resource Merger - Resource Type Hierarchy Based Resource Picker",
        "description": "This resource picker delivers merged resources based on the resource type hierarchy (override approach).",
        "bundleName": "org.apache.sling.resourcemerger",
        "attributes": {
            "merge.root": {
                "name": "Root",
                "description": "Root path at which merged resources will be available.",
                "type": "String",
                "cardinality": "required",
                "default": "/mnt/override",
                "hint": "path"
            },
            "merge.readOnly": {
                "name": "Read Only",
                "description": "Specifies if the resources are read-only or can be modified.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.resourceresolver.impl.mapping.StringInterpolationProviderImpl",
        "name": "Apache Sling String Interpolation Provider",
        "description": "Configures the String Interpolation Provider key/value pairs",
        "bundleName": "org.apache.sling.resourceresolver",
        "attributes": {
            "placeHolderKeyValuePairs": {
                "name": "Placeholder Values",
                "description": "A list of key / value pairs separated by a equal (=) sign. The key is not permitted to contain a '=' sign as the first occurrence of '=' separates the key from the value. If no '=' is found the entry is ignored",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "phv.default.host.name=localhost"
                ]
            }
        }
    },
    {
        "id": "org.apache.sling.scripting.core.impl.ScriptCacheImpl",
        "name": "Apache Sling Script Cache",
        "description": "The Script Cache is useful for running previously compiled scripts.",
        "bundleName": "org.apache.sling.scripting.core",
        "attributes": {
            "org.apache.sling.scripting.cache.size": {
                "name": "Cache Size",
                "description": "The Cache Size defines the maximum number of compiled script references that will be stored in the cache's internal map.",
                "type": "Integer",
                "cardinality": "required",
                "default": 65536
            },
            "org.apache.sling.scripting.cache.additional_extensions": {
                "name": "Additional Extensions",
                "description": "Scripts from the search paths with these extensions will also be monitored so that changes to them will clean the cache if the cache contains them.",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.scripting.core.impl.ScriptingResourceResolverProviderImpl",
        "name": "Apache Sling Scripting Resource Resolver Provider Configuration",
        "description": "The Apache Sling Scripting Resource Resolver Provider can be used by scripting bundles to obtain resource resolvers for solving scripting dependencies.",
        "bundleName": "org.apache.sling.scripting.core",
        "attributes": {
            "log.stacktrace.onclose": {
                "name": "Log the stack trace call for ResourceResolver#close",
                "description": "If enabled, all calls to ResourceResolver#close for the request-scoped resource resolvers will be logged with the full stack trace. Don't enable this setting on production systems.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.scripting.java.impl.JavaScriptEngineFactory",
        "name": "Apache Sling Java Script Handler",
        "description": "The Java Script Handler supports development of Java Servlets to render response content. ",
        "bundleName": "org.apache.sling.scripting.java",
        "attributes": {
            "java.classdebuginfo": {
                "name": "Generate Debug Info",
                "description": "Should the class file be compiled with debugging information? true or false, default true.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "java.javaEncoding": {
                "name": "Source Encoding",
                "description": "",
                "type": "String",
                "cardinality": "required",
                "default": "UTF-8"
            },
            "java.compilerSourceVM": {
                "name": "Source VM",
                "description": "Java Specification to be used to read the source files. If left empty or the value \"auto\" is specified, the current vm version will be used.",
                "type": "String",
                "cardinality": "required",
                "default": "auto"
            },
            "java.compilerTargetVM": {
                "name": "Target VM",
                "description": "Target Java version for compilation. If left empty or the value \"auto\" is specified, the current vm version will be used.",
                "type": "String",
                "cardinality": "required",
                "default": "auto"
            }
        }
    },
    {
        "id": "org.apache.sling.scripting.javascript.internal.RhinoJavaScriptEngineFactory",
        "name": "Apache Sling Rhino JavaScript Engine Factory",
        "description": "JavaScript engine based on Rhino",
        "bundleName": "org.apache.sling.scripting.javascript",
        "attributes": {
            "org.apache.sling.scripting.javascript.rhino.optLevel": {
                "name": "Rhino optimization level",
                "description": "The level of optimization for the bytecode generated by Rhino. Provide values between 0-9, 9 being the most aggressive level of optimization. A value of -1 will run scripts in interpreted mode.",
                "type": "Integer",
                "cardinality": "required",
                "default": 9
            }
        }
    },
    {
        "id": "org.apache.sling.scripting.jsp.JspScriptEngineFactory",
        "name": "Apache Sling JSP Script Handler",
        "description": "The JSP Script Handler supports development of JSP scripts to render response content on behalf of ScriptComponents. Internally Jasper 6.0.14 JSP Engine is used together with the Eclipse Java Compiler to compile generated Java code into Java class files. Some settings of Jasper may be configured as shown below. Note that JSP scripts are expected in the JCR repository and generated Java source and class files will be written to the JCR repository below the configured Compilation Location.",
        "bundleName": "org.apache.sling.scripting.jsp",
        "attributes": {
            "jasper.compilerTargetVM": {
                "name": "Target Version",
                "description": "The target JVM version for the compiled classes. If left empty, the default version, 1.6., is used. If the value \"auto\" is used, the current vm version will be used.",
                "type": "String",
                "cardinality": "required",
                "default": "auto"
            },
            "jasper.compilerSourceVM": {
                "name": "Source Version",
                "description": "The JVM version for the java/JSP source. If left empty, the default version, 1.6., is used. If the value \"auto\" is used, the current vm version will be used.",
                "type": "String",
                "cardinality": "required",
                "default": "auto"
            },
            "jasper.classdebuginfo": {
                "name": "Generate Debug Info",
                "description": "Should the class file be compiled with debugging information? true or false, default true.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "jasper.enablePooling": {
                "name": "Tag Pooling",
                "description": "Determines whether tag handler pooling is enabled. true or false, default true.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "jasper.ieClassId": {
                "name": "Plugin Class-ID",
                "description": "The class-id value to be sent to Internet Explorer when using <jsp:plugin> tags. Default clsid:8AD9C840-044E-11D1-B3E9-00805F499D93.",
                "type": "String",
                "cardinality": "required",
                "default": "clsid:8AD9C840-044E-11D1-B3E9-00805F499D93"
            },
            "jasper.genStringAsCharArray": {
                "name": "Char Array Strings",
                "description": "Should text strings be generated as char arrays, to improve performance in some cases? Default false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "jasper.keepgenerated": {
                "name": "Keep Generated Java",
                "description": "Should we keep the generated Java source code for each page instead of deleting it? true or false, default true.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "jasper.mappedfile": {
                "name": "Mapped Content",
                "description": "Should we generate static content with one print statement per input line, to ease debugging? true or false, default true.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "jasper.trimSpaces": {
                "name": "Trim Spaces",
                "description": "Should white spaces in template text between actions or directives be trimmed ?, default false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "jasper.displaySourceFragments": {
                "name": "Display Source Fragments",
                "description": "Should we include a source fragment in exception messages, which could be displayed to the developer",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "default.is.session": {
                "name": "Default Session Value",
                "description": "Should a session be created by default for every JSP page? Warning - this behavior may produce unintended results and changing it will not impact previously-compiled pages.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.scripting.sightly.js.impl.jsapi.SlyBindingsValuesProvider",
        "name": "Apache Sling Scripting HTL JavaScript Use-API Factories Configuration",
        "description": "HTL JavaScript Use-API Factories configuration options",
        "bundleName": "org.apache.sling.scripting.sightly.js.provider",
        "attributes": {
            "org.apache.sling.scripting.sightly.js.bindings": {
                "name": "Script Factories",
                "description": "Script factories to load in the bindings map. The entries should be in the form 'namespace:/path/from/repository'. If the factories depend on each other, add them in the correct order of their dependency chain.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "sightly:/libs/sling/sightly/js/internal/sly.js"
                ]
            }
        }
    },
    {
        "id": "org.apache.sling.security.impl.ContentDispositionFilter",
        "name": "Apache Sling Content Disposition Filter",
        "description": "Request filter adding Content Disposition header with value 'attachment' for certain paths/content types. Independent of the configuration only resource paths are covered which contain a property named 'jcr:data' or 'jcr:content\\jcr:data'.",
        "bundleName": "org.apache.sling.security",
        "attributes": {
            "sling.content.disposition.paths": {
                "name": "Included Resource Paths & Content Types",
                "description": "These resource paths are covered by the filter. Each entry is of the form '<path> [ : <excluded content type> {,<excluded content type>} ]'. Invalid entries are logged and ignored. <path> must be an absolute path and may contain a wildcard ('*') at the end, to match every resource path with the given path prefix.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "sling.content.disposition.excluded.paths": {
                "name": "Excluded Resource Paths",
                "description": "These resource paths are excluded from the filter. Each resource path must be given as absolute and fully qualified path. Prefix matching/wildcards are not supported.",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            },
            "sling.content.disposition.all.paths": {
                "name": "Enable For All Resource Paths",
                "description": "This flag controls whether to enable this filter for all paths, except for the excluded paths defined by sling.content.disposition.excluded.paths. Setting this to 'true' leads to ignoring 'sling.content.disposition.path'.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.security.impl.ReferrerFilter",
        "name": "Apache Sling Referrer Filter",
        "description": "Request filter checking the referrer of modification requests",
        "bundleName": "org.apache.sling.security",
        "attributes": {
            "allow.empty": {
                "name": "Allow Empty",
                "description": "Allow an empty or missing referrer",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "allow.hosts": {
                "name": "Allow Hosts",
                "description": "List of allowed hosts for the referrer which are added to the list of default hosts",
                "type": "String",
                "cardinality": "unlimited"
            },
            "allow.hosts.regexp": {
                "name": "Allow Regexp Host",
                "description": "List of allowed regexp for the referrer",
                "type": "String",
                "cardinality": "unlimited"
            },
            "filter.methods": {
                "name": "Filter Methods",
                "description": "These methods are filtered by the filter",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "POST",
                    "PUT",
                    "DELETE"
                ]
            },
            "exclude.agents.regexp": {
                "name": "Exclude Regexp User Agent",
                "description": "List of regexp for user agents not to check the referrer",
                "type": "String",
                "cardinality": "unlimited"
            }
        }
    },
    {
        "id": "org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl",
        "name": "Apache Sling Service User Mapper Service",
        "description": "Configuration for the service mapping service names to names of users.",
        "bundleName": "org.apache.sling.serviceusermapper",
        "attributes": {
            "user.mapping": {
                "name": "Service Mappings",
                "description": "Provides mappings from service name to user names. Each entry is of the form 'bundleId [ \":\" subServiceName ] \"=\" userName' | \"[\" principalNames \"]\" where bundleId and subServiceName identify the service and userName defines the name of the user to provide to the service; alternative the the mappingcan define a comma separated set of principalNames instead of the userName. Invalid entries are logged and ignored.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "user.default": {
                "name": "Default User",
                "description": "The name of the user to use as the default if no service mapping applies. If this property is missing or empty no default user is defined.",
                "type": "String",
                "cardinality": "required"
            },
            "user.enable.default.mapping": {
                "name": "Default Mapping",
                "description": "If enabled and no mapping for a requested service user exists and no  default user is defined, a default mapping is applied which uses the service user \"serviceuser--\" + bundleId + [\"--\" + subServiceName]",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "require.validation": {
                "name": "Require validation",
                "description": null,
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            }
        }
    },
    {
        "id": "org.apache.sling.serviceusermapping.impl.ServiceUserMapperImpl.amended",
        "name": "Apache Sling Service User Mapper Service Amendment",
        "description": "An amendment mapping for the user mapping service.",
        "bundleName": "org.apache.sling.serviceusermapper",
        "attributes": {
            "service.ranking": {
                "name": "Ranking",
                "description": "Amendments are processed in order of their ranking, an amendment with a higher ranking has precedence over a mapping with a lower ranking.",
                "type": "Integer",
                "cardinality": "required",
                "default": 0
            },
            "user.mapping": {
                "name": "Service Mappings",
                "description": "Provides mappings from service name to user (and optionally principal) names. Each entry is of the form 'bundleId [ \":\" subServiceName ] \"=\" userName' | \"[\" principalNames \"]\" where bundleId and subServiceName identify the service and userName/principalNames defines the name(s) of the user/principals to provide to the service. 'principalNames is defined to be a comma separated list of principal names. Invalid entries are logged and ignored.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "webconsole.configurationFactory.nameHint": {
                "name": "Webconsole configuration factory name hint",
                "description": null,
                "type": "String",
                "cardinality": "required",
                "default": "Mapping: {user.mapping}"
            }
        }
    },
    {
        "id": "org.apache.sling.servlets.get.DefaultGetServlet",
        "name": "Apache Sling GET Servlet",
        "description": "The Sling GET servlet is registered as the default servlet to handle GET requests.",
        "bundleName": "org.apache.sling.servlets.get",
        "attributes": {
            "aliases": {
                "name": "Extension Aliases",
                "description": "The aliases can be used to map several extensions to a single servlet. For instance \"xml:pdf,rtf\" maps the extensions \".pdf\" and \".rtf\" to the servlet helper handling the \".xml\" extension.",
                "type": "String",
                "cardinality": "unlimited"
            },
            "index": {
                "name": "Auto Index",
                "description": "Controls whether a simple directory index is rendered for a directory request. A directory request is a request to a resource with a trailing slash (/) character, for example http://host/apps/. If none of the index resources exists, the default GET servlet may automatically render an index listing of the child resources if this option is checked, which is the default. If this option is not checked, the request to the resource is forbidden and results in a status 403/FORBIDDEN. This configuration corresponds to the \"Index\" option of the Options directive of Apache HTTP Server (httpd).",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "index.files": {
                "name": "Index Resources",
                "description": "List of child resources to be considered for rendering  the index of a \"directory\". The default value is [ \"index\", \"index.html\" ].  Each entry in the list is checked and the first entry found is included to  render the index. If an entry is selected, which has not extension (for  example the \"index\" resource), the extension \".html\" is appended for the  inclusion to indicate the desired text/html rendering. If the resource name  has an extension (as in \"index.html\"), no additional extension is appended  for the inclusion. This configuration corresponds to the <DirectoryIndex>  directive of Apache HTTP Server (httpd).",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "index",
                    "index.html"
                ]
            },
            "enable.html": {
                "name": "Enable HTML",
                "description": "Whether the renderer for HTML of the default GET servlet is enabled or not. By default the HTML renderer is enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "enable.json": {
                "name": "Enable JSON",
                "description": "Whether the renderer for JSON of the default GET servlet is enabled or not. By default the JSON renderer is enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "enable.txt": {
                "name": "Enable Plain Text",
                "description": "Whether the renderer for plain text of the default GET servlet is enabled or not. By default the plain text renderer is enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "enable.xml": {
                "name": "Enable XML",
                "description": "Whether the renderer for XML of the default GET servlet is enabled or not. By default the XML renderer is enabled.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "json.maximumresults": {
                "name": "JSON Max results",
                "description": "The maximum number of resources that should be returned when doing a node.5.json or node.infinity.json. In JSON terms this basically means the number of Objects to return. Default value is 200.",
                "type": "Integer",
                "cardinality": "required",
                "default": 200
            },
            "ecmaSuport": {
                "name": "Legacy ECMA date format",
                "description": "Enable legacy Sling ECMA format for dates",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.servlets.get.impl.version.VersionInfoServlet",
        "name": "Apache Sling Version Info Servlet",
        "description": "The Sling Version Info Servlet renders list of versions available for the current resource",
        "bundleName": "org.apache.sling.servlets.get",
        "attributes": {
            "sling.servlet.selectors": {
                "name": "Selector",
                "description": "List of selectors this servlet handles to display the versions",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "V"
                ]
            },
            "ecmaSuport": {
                "name": "Legacy ECMA date format",
                "description": "Enable legacy Sling ECMA format for dates",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.servlets.post.impl.helper.ChunkCleanUpTask",
        "name": "Apache Sling Post Chunk Upload : Cleanup Task",
        "description": "Task to regularly purge incomplete chunks from the repository",
        "bundleName": "org.apache.sling.servlets.post",
        "attributes": {
            "scheduler.expression": {
                "name": "Schedule",
                "description": "Cron expression scheudling this job. Default is hourly 17m23s after the hour. See http://www.docjar.com/docs/api/org/quartz/CronTrigger.html for a description of the format for this value.",
                "type": "String",
                "cardinality": "required",
                "default": "31 41 0/12 * * ?"
            },
            "scheduler.concurrent": {
                "name": "scheduler.concurrent",
                "description": "Allow Chunk Cleanup Task to run concurrently (default: false).",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "chunk.cleanup.age": {
                "name": "Cleanup Age",
                "description": "The chunk's age in minutes before it is considered for clean up.",
                "type": "Integer",
                "cardinality": "required",
                "default": 360
            }
        }
    },
    {
        "id": "org.apache.sling.servlets.post.impl.SlingPostServlet",
        "name": "Apache Sling POST Servlet",
        "description": "The Sling POST Servlet is registered as the default servlet to handle POST requests in Sling.",
        "bundleName": "org.apache.sling.servlets.post",
        "attributes": {
            "servlet.post.dateFormats": {
                "name": "Date Format",
                "description": "List SimpleDateFormat strings for date formats supported for parsing from request input to data fields. The special format \"ISO8601\" (without the quotes) can be used to designate strict ISO-8601 parser which is able to parse strings generated by the Property.getString() method for Date properties. The default value is [ \"EEE MMM dd yyyy HH:mm:ss 'GMT'Z\", \"ISO8601\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss\", \"yyyy-MM-dd\", \"dd.MM.yyyy HH:mm:ss\", \"dd.MM.yyyy\" ].",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "EEE MMM dd yyyy HH:mm:ss 'GMT'Z",
                    "ISO8601",
                    "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
                    "yyyy-MM-dd'T'HH:mm:ss",
                    "yyyy-MM-dd",
                    "dd.MM.yyyy HH:mm:ss",
                    "dd.MM.yyyy"
                ]
            },
            "servlet.post.nodeNameHints": {
                "name": "Node Name Hint Properties",
                "description": "The list of properties whose values may be used to derive a name for newly created nodes. When handling a request to create a new node, the name of the node is automatically generated if the request URL ends with a star (\"*\") or a slash (\"/\"). In this case the request parameters listed in this configuration value may be used to create the name. Default value is [ \"title\", \"jcr:title\", \"name\", \"description\", \"jcr:description\", \"abstract\", \"text\", \"jcr:text\" ].",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "title",
                    "jcr:title",
                    "name",
                    "description",
                    "jcr:description",
                    "abstract",
                    "text",
                    "jcr:text"
                ]
            },
            "servlet.post.nodeNameMaxLength": {
                "name": "Maximum Node Name Length",
                "description": "Maximum number of characters to use for automatically generated node names. The default value is 20. Note, that actual node names may be generated with at most 4 more characters if the numeric suffixes must be appended to make the name unique.",
                "type": "Integer",
                "cardinality": "required",
                "default": 20
            },
            "servlet.post.checkinNewVersionableNodes": {
                "name": "Checkin New Versionable Nodes",
                "description": "If true, newly created versionable nodes or non-versionable nodes which are made versionable by the addition of the mix:versionable mixin are checked in. By default, false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "servlet.post.autoCheckout": {
                "name": "Auto Checkout Nodes",
                "description": "If true, checked in nodes are checked out when necessary. By default, false.",
                "type": "Boolean",
                "cardinality": "required",
                "default": false
            },
            "servlet.post.autoCheckin": {
                "name": "Auto Checkin Nodes",
                "description": "If true, nodes which are checked out by the post servlet are checked in. By default, true.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "servlet.post.ignorePattern": {
                "name": "Ignored Parameters",
                "description": "Configures a regular expression pattern to select request parameters which should be ignored when writing content to the repository. By default this is \"j_.*\" thus ignoring all request parameters starting with j_ such as j_username.",
                "type": "String",
                "cardinality": "required",
                "default": "j_.*"
            }
        }
    },
    {
        "id": "org.apache.sling.servlets.resolver.SlingServletResolver",
        "name": "Apache Sling Servlet/Script Resolver and Error Handler",
        "description": "The Sling Servlet and Script Resolver has multiple tasks: One it is used as the ServletResolver to select the Servlet or Script to call to handle the request. Second it acts as the SlingScriptResolver and finally it manages error handling by implementing the ErrorHandler interface using the same algorithm to select error handling servlets and scripts as is used to resolve request processing servlets and scripts.",
        "bundleName": "org.apache.sling.servlets.resolver",
        "attributes": {
            "servletresolver.servletRoot": {
                "name": "Servlet Registration Root Path",
                "description": "The default root path assumed when registering a servlet whose servlet registration properties define a relative resource type/path. It can either be a string starting with \"/\" (specifying a path prefix to be used) or a number which specifies the resource resolver's search path entry index. The default value is 0 (usually stands for \"/apps\" in the search paths). The number can be -1 which always points to the last search path entry.",
                "type": "String",
                "cardinality": "required",
                "default": "0"
            },
            "servletresolver.cacheSize": {
                "name": "Cache Size",
                "description": "This property configures the size of the cache used for script resolution. A value lower than 5 disables the cache.",
                "type": "Integer",
                "cardinality": "required",
                "default": 200
            },
            "servletresolver.paths": {
                "name": "Execution Paths",
                "description": "The paths to search for executable scripts. If no path is configured this is treated like the default (/ = root) which allows to execute all scripts. By configuring some paths the execution of scripts can be limited. If a configured value ends with a slash, the whole sub tree is allowed. Without a slash an exact matching script is allowed.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "/"
                ]
            },
            "servletresolver.defaultExtensions": {
                "name": "Default Extensions",
                "description": "The list of extensions for which the default behavior will be used. This means that the last path segment of the resource type can be used as the script name.",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "html"
                ]
            },
            "servletresolver.mountProviders": {
                "name": "Mount Providers",
                "description": "Should servlets be mounted as resource providers? If true (the default), servlets will be represented in the content tree using resource provider - otherwise, servlets will be decorated back into the content tree using a decorator.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.settings.impl.SlingSettingsServiceImpl",
        "name": "Apache Sling Settings Service",
        "description": "The settings service manages some basic settings of Sling like run modes or information about the current instance.",
        "bundleName": "org.apache.sling.settings",
        "attributes": {
            "sling.name": {
                "name": "Instance Name",
                "description": "A human readable name for the current instance.",
                "type": "String",
                "cardinality": "required"
            },
            "sling.description": {
                "name": "Instance Description",
                "description": "A human readable description for the current instance.",
                "type": "String",
                "cardinality": "required"
            }
        }
    },
    {
        "id": "org.apache.sling.startupfilter.impl.StartupFilterImpl",
        "name": "Apache Sling Startup Filter",
        "description": "Rejects Sling requests with a 503 error code during startup.",
        "bundleName": "org.apache.sling.startupfilter",
        "attributes": {
            "active.by.default": {
                "name": "Active by default?",
                "description": "If true, the filter is active as soon as the service starts.",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "default.message": {
                "name": "Default message",
                "description": "The default message is returned in the HHTTP response of the filter, followed by any messages supplied by StartupInfoProvider services.",
                "type": "String",
                "cardinality": "required",
                "default": "Startup in progress"
            }
        }
    },
    {
        "id": "org.apache.sling.tenant.internal.TenantProviderImpl",
        "name": "Apache Sling Tenant Provider",
        "description": "Service responsible for providing Tenants.",
        "bundleName": "org.apache.sling.tenant",
        "attributes": {
            "tenant.root": {
                "name": "Tenants Root Path",
                "description": "Defines tenants root path",
                "type": "String",
                "cardinality": "required",
                "default": "/etc/tenants",
                "hint": "path"
            },
            "tenant.path.matcher": {
                "name": "Tenants Path Matcher",
                "description": "Defines tenants path matcher i.e. /content/sample/([^/]+)/*, used while resolving path to tenant",
                "type": "String",
                "cardinality": "unlimited",
                "hint": "path"
            }
        }
    },
    {
        "id": "org.apache.sling.tracer.internal.LogTracer",
        "name": "Apache Sling Log Tracer",
        "description": "Provides support for enabling log for specific loggers on per request basis. Refer to http://sling.apache.org/documentation/bundles/log-tracers.html for more details",
        "bundleName": "org.apache.sling.tracer",
        "attributes": {
            "tracerSets": {
                "name": "Tracer Sets",
                "description": "Default list of tracer sets configured. Tracer Set config confirms to following format. <set name> : <logger name>;level=<level name>, other loggers",
                "type": "String",
                "cardinality": "unlimited",
                "default": [
                    "oak-query : org.apache.jackrabbit.oak.query.QueryEngineImpl;level=debug",
                    "oak-writes : org.apache.jackrabbit.oak.jcr.operations.writes;level=trace"
                ]
            },
            "enabled": {
                "name": "Enabled",
                "description": "Enable the Tracer",
                "type": "Boolean",
                "cardinality": "required"
            },
            "servletEnabled": {
                "name": "Recording Servlet Enabled",
                "description": "Enable the Tracer Servlet. This servlet is required for the tracer recording feature to work and provides access to the json dump of the recording performed",
                "type": "Boolean",
                "cardinality": "required"
            },
            "recordingCacheSizeInMB": {
                "name": "Recording Cache Size",
                "description": "Recording cache size in MB which would be used to temporary cache the recording data",
                "type": "Integer",
                "cardinality": "required",
                "default": 50
            },
            "recordingCacheDurationInSecs": {
                "name": "Recording Cache Duration",
                "description": "Time in seconds upto which the recording data would be held in memory before expiry",
                "type": "Long",
                "cardinality": "required",
                "default": 900
            },
            "recordingCompressionEnabled": {
                "name": "Compress Recording",
                "description": "Enable compression for recoding held in memory",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            },
            "gzipResponse": {
                "name": "GZip Response",
                "description": "If enabled the response sent would be compressed",
                "type": "Boolean",
                "cardinality": "required",
                "default": true
            }
        }
    },
    {
        "id": "org.apache.sling.xss.impl.status.XSSStatusService",
        "name": "Apache Sling XSS Status Service",
        "description": "The XSS Protection API Status Service provides various statistics about how the library was used.",
        "bundleName": "org.apache.sling.xss",
        "attributes": {
            "maxNumberOfInvalidUrlsRecorded": {
                "name": "Maximum number of recorded invalid URLs",
                "description": "Once this number is reached, previously recorded invalid URLs will be discarded.",
                "type": "Integer",
                "cardinality": "required",
                "default": 1000
            }
        }
    },
    {
        "id": "org.apache.sling.xss.impl.XSSFilterImpl",
        "name": "Apache Sling XSS Filter",
        "description": "XSS filtering utility based on AntiSamy.",
        "bundleName": "org.apache.sling.xss",
        "attributes": {
            "policyPath": {
                "name": "AntiSamy Policy Path",
                "description": "The path to the AntiSamy policy file (absolute or relative to the configured search paths).",
                "type": "String",
                "cardinality": "required",
                "default": "sling/xss/config.xml"
            }
        }
    }
]
